<?php
/**
 * WP_Test_Sitemap_CPT
 *
 * @package Metro_Sitemap/unit_tests
 */

require_once( 'msm-sitemap-test.php' );

/**
 * Unit Tests to confirm Sitemaps are properly handled for Custom Post Types
 *
 * @author Matthew Denton (mdbitz)
 */
class WP_Test_Sitemap_CPT extends WP_UnitTestCase {

	/**
	 * Base Test Class Instance
	 *
	 * @var MSM_SIteMap_Test
	 */
	private $test_base;

	/**
	 * Custom Post Type
	 *
	 * @var str
	 */
	const TEST_CPT = 'msm_stest';

	/**
	 * Initialize Test CPT
	 */
	static function setupBeforeClass() {
		register_post_type(
			self::TEST_CPT,
			array(
				'labels'       => array(
					'name'          => __( 'Sitemaps' ),
					'singular_name' => __( 'Sitemap' ),
					),
				'public'       => false,
				'has_archive'  => false,
				'rewrite'      => false,
				'show_ui'      => true,  // TODO: should probably have some sort of custom UI
				'show_in_menu' => false, // Since we're manually adding a Sitemaps menu, no need to auto-add one through the CPT.
				'supports'     => array(
					'title',
				),
			)
		);

	}

	/**
	 * Initialize MSM_SiteMap_Test
	 */
	function setup() {

		$this->test_base = new MSM_SiteMap_Test();

		// Create Multiple Posts acorss various Dates.
		$date = time();

		// 3 for Today, 1 in "draft" status
		$cur_day = date( 'Y', $date ) . '-' . date( 'm', $date ) . '-' . date( 'd', $date ) . ' 00:00:00';
		$this->test_base->create_dummy_post( $cur_day );
		$this->test_base->create_dummy_post( $cur_day );
		$this->test_base->create_dummy_post( $cur_day, 'draft' );

		// 1  for each day in last week for CPT
		for ( $i = 0; $i < 6; $i++ ) {
			$date = strtotime( '-1 day', $date );
			$cur_day = date( 'Y', $date ) . '-' . date( 'm', $date ) . '-' . date( 'd', $date ) . ' 00:00:00';
			$this->test_base->create_dummy_post( $cur_day, 'publish', self::TEST_CPT );
		}

		// 1 CPT draft for a  month ago
		$date = strtotime( '-1 month', time() );
		$cur_day = date( 'Y', $date ) . '-' . date( 'm', $date ) . '-' . date( 'd', $date ) . ' 00:00:00';
		$this->test_base->create_dummy_post( $cur_day, 'draft', self::TEST_CPT );

		$this->assertCount( 10, $this->test_base->posts );
		$this->test_base->build_sitemaps();

	}

	/**
	 * Remove the sample posts and the sitemap posts
	 */
	function teardown() {
		$this->test_base->posts = array();
		$sitemaps = get_posts( array(
			'post_type' => Metro_Sitemap::SITEMAP_CPT,
			'fields' => 'ids',
			'posts_per_page' => -1,
		) );
		update_option( 'msm_sitemap_indexed_url_count' , 0 );
		array_map( 'wp_delete_post', array_merge( $this->test_base->posts_created, $sitemaps ) );
	}

	/**
	 * Verify Custom Post Types don't have Sitemaps generated by default
	 */
	function test_cpt_ignored_by_default() {

		$this->test_base->build_sitemaps();
		$sitemaps = get_posts( array(
			'post_type' => Metro_Sitemap::SITEMAP_CPT,
			'fields' => 'ids',
			'posts_per_page' => -1,
		) );

		$this->assertCount( 1, $sitemaps );
		$this->assertEquals( 2, Metro_Sitemap::get_total_indexed_url_count() );
	}

	/**
	 * Verify Custom Post Types included when "msm_sitemap_entry_post_type"
	 * filter applied
	 */
	function test_cpt_included_by_filter() {

		add_filter( 'msm_sitemap_entry_post_type', array( $this, 'add_cpt_to_msm_sitemap' ) );

		$this->test_base->build_sitemaps();
		$sitemaps = get_posts( array(
			'post_type' => Metro_Sitemap::SITEMAP_CPT,
			'fields' => 'ids',
			'posts_per_page' => -1,
		) );

		$this->assertCount( 7, $sitemaps );
		$this->assertEquals( 8, Metro_Sitemap::get_total_indexed_url_count() );
	}

	/**
	 * Filter hook to add TEST_CPT to Metro_Sitemap supported post types
	 *
	 * @param array $cpts Array of Post Types.
	 * @return array(str) Array of Post Types.
	 */
	public function add_cpt_to_msm_sitemap( $cpts ) {
		$cpts[] = self::TEST_CPT;
		return $cpts;
	}

}
