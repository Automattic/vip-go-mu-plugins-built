{"version":3,"file":"./build/patterns/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"data\"]","../../packages/patterns/src/store/reducer.js","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"blockEditor\"]","../../packages/patterns/src/constants.js","../../packages/patterns/src/store/actions.js","../../packages/patterns/src/store/selectors.js","webpack://wp/external window [\"wp\",\"privateApis\"]","../../packages/patterns/src/lock-unlock.js","../../packages/patterns/src/store/index.js","../../packages/patterns/src/store/constants.js","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"i18n\"]","../../packages/patterns/src/api/index.js","webpack://wp/external window \"ReactJSXRuntime\"","../../packages/patterns/src/components/overrides-panel.js","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"htmlEntities\"]","../../packages/patterns/src/components/category-selector.js","../../packages/patterns/src/private-hooks.js","../../packages/patterns/src/components/create-pattern-modal.js","../../packages/patterns/src/components/duplicate-pattern-modal.js","webpack://wp/external window [\"wp\",\"primitives\"]","../../packages/icons/src/library/symbol.tsx","../../packages/patterns/src/components/pattern-convert-button.js","webpack://wp/external window [\"wp\",\"url\"]","../../packages/patterns/src/components/patterns-manage-button.js","webpack://wp/external window [\"wp\",\"a11y\"]","../../packages/patterns/src/components/allow-overrides-modal.js","../../packages/patterns/src/components/pattern-overrides-controls.js","../../packages/patterns/src/components/reset-overrides-control.js","../../packages/icons/src/library/copy.tsx","../../packages/patterns/src/components/pattern-overrides-block-controls.js","../../packages/patterns/src/private-apis.js","../../packages/patterns/src/components/rename-pattern-modal.js","../../packages/patterns/src/components/index.js","../../packages/patterns/src/components/rename-pattern-category-modal.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nexport function isEditingPattern( state = {}, action ) {\n\tif ( action?.type === 'SET_EDITING_PATTERN' ) {\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ action.clientId ]: action.isEditing,\n\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tisEditingPattern,\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","export const PATTERN_TYPES = {\n\ttheme: 'pattern',\n\tuser: 'wp_block',\n};\n\nexport const PATTERN_DEFAULT_CATEGORY = 'all-patterns';\nexport const PATTERN_USER_CATEGORY = 'my-patterns';\nexport const EXCLUDED_PATTERN_SOURCES = [\n\t'core',\n\t'pattern-directory/core',\n\t'pattern-directory/featured',\n];\nexport const PATTERN_SYNC_TYPES = {\n\tfull: 'fully',\n\tunsynced: 'unsynced',\n};\n\n// TODO: This should not be hardcoded. Maybe there should be a config and/or an UI.\nexport const PARTIAL_SYNCING_SUPPORTED_BLOCKS = {\n\t'core/paragraph': [ 'content' ],\n\t'core/heading': [ 'content' ],\n\t'core/button': [ 'text', 'url', 'linkTarget', 'rel' ],\n\t'core/image': [ 'id', 'url', 'title', 'alt' ],\n};\n\nexport const PATTERN_OVERRIDES_BINDING_SOURCE = 'core/pattern-overrides';\n","/**\n * WordPress dependencies\n */\n\nimport { getBlockType, cloneBlock } from '@wordpress/blocks';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { PATTERN_SYNC_TYPES } from '../constants';\n\n/**\n * Returns a generator converting one or more static blocks into a pattern, or creating a new empty pattern.\n *\n * @param {string}             title        Pattern title.\n * @param {'full'|'unsynced'}  syncType     They way block is synced, 'full' or 'unsynced'.\n * @param {string|undefined}   [content]    Optional serialized content of blocks to convert to pattern.\n * @param {number[]|undefined} [categories] Ids of any selected categories.\n */\nexport const createPattern =\n\t( title, syncType, content, categories ) =>\n\tasync ( { registry } ) => {\n\t\tconst meta =\n\t\t\tsyncType === PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t? {\n\t\t\t\t\t\twp_pattern_sync_status: syncType,\n\t\t\t\t  }\n\t\t\t\t: undefined;\n\n\t\tconst reusableBlock = {\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\tstatus: 'publish',\n\t\t\tmeta,\n\t\t\twp_pattern_category: categories,\n\t\t};\n\n\t\tconst updatedRecord = await registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\treturn updatedRecord;\n\t};\n\n/**\n * Create a pattern from a JSON file.\n * @param {File}               file         The JSON file instance of the pattern.\n * @param {number[]|undefined} [categories] Ids of any selected categories.\n */\nexport const createPatternFromFile =\n\t( file, categories ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst fileContent = await file.text();\n\t\t/** @type {import('./types').PatternJSON} */\n\t\tlet parsedContent;\n\t\ttry {\n\t\t\tparsedContent = JSON.parse( fileContent );\n\t\t} catch ( e ) {\n\t\t\tthrow new Error( 'Invalid JSON file' );\n\t\t}\n\t\tif (\n\t\t\tparsedContent.__file !== 'wp_block' ||\n\t\t\t! parsedContent.title ||\n\t\t\t! parsedContent.content ||\n\t\t\ttypeof parsedContent.title !== 'string' ||\n\t\t\ttypeof parsedContent.content !== 'string' ||\n\t\t\t( parsedContent.syncStatus &&\n\t\t\t\ttypeof parsedContent.syncStatus !== 'string' )\n\t\t) {\n\t\t\tthrow new Error( 'Invalid pattern JSON file' );\n\t\t}\n\n\t\tconst pattern = await dispatch.createPattern(\n\t\t\tparsedContent.title,\n\t\t\tparsedContent.syncStatus,\n\t\t\tparsedContent.content,\n\t\t\tcategories\n\t\t);\n\n\t\treturn pattern;\n\t};\n\n/**\n * Returns a generator converting a synced pattern block into a static block.\n *\n * @param {string} clientId The client ID of the block to attach.\n */\nexport const convertSyncedPatternToStatic =\n\t( clientId ) =>\n\t( { registry } ) => {\n\t\tconst patternBlock = registry\n\t\t\t.select( blockEditorStore )\n\t\t\t.getBlock( clientId );\n\t\tconst existingOverrides = patternBlock.attributes?.content;\n\n\t\tfunction cloneBlocksAndRemoveBindings( blocks ) {\n\t\t\treturn blocks.map( ( block ) => {\n\t\t\t\tlet metadata = block.attributes.metadata;\n\t\t\t\tif ( metadata ) {\n\t\t\t\t\tmetadata = { ...metadata };\n\t\t\t\t\tdelete metadata.id;\n\t\t\t\t\tdelete metadata.bindings;\n\t\t\t\t\t// Use overridden values of the pattern block if they exist.\n\t\t\t\t\tif ( existingOverrides?.[ metadata.name ] ) {\n\t\t\t\t\t\t// Iterate over each overridden attribute.\n\t\t\t\t\t\tfor ( const [ attributeName, value ] of Object.entries(\n\t\t\t\t\t\t\texistingOverrides[ metadata.name ]\n\t\t\t\t\t\t) ) {\n\t\t\t\t\t\t\t// Skip if the attribute does not exist in the block type.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t! getBlockType( block.name )?.attributes[\n\t\t\t\t\t\t\t\t\tattributeName\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Update the block attribute with the override value.\n\t\t\t\t\t\t\tblock.attributes[ attributeName ] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn cloneBlock(\n\t\t\t\t\tblock,\n\t\t\t\t\t{\n\t\t\t\t\t\tmetadata:\n\t\t\t\t\t\t\tmetadata && Object.keys( metadata ).length > 0\n\t\t\t\t\t\t\t\t? metadata\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tcloneBlocksAndRemoveBindings( block.innerBlocks )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tconst patternInnerBlocks = registry\n\t\t\t.select( blockEditorStore )\n\t\t\t.getBlocks( patternBlock.clientId );\n\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.replaceBlocks(\n\t\t\t\tpatternBlock.clientId,\n\t\t\t\tcloneBlocksAndRemoveBindings( patternInnerBlocks )\n\t\t\t);\n\t};\n\n/**\n * Returns an action descriptor for SET_EDITING_PATTERN action.\n *\n * @param {string}  clientId  The clientID of the pattern to target.\n * @param {boolean} isEditing Whether the block should be in editing state.\n * @return {Object} Action descriptor.\n */\nexport function setEditingPattern( clientId, isEditing ) {\n\treturn {\n\t\ttype: 'SET_EDITING_PATTERN',\n\t\tclientId,\n\t\tisEditing,\n\t};\n}\n","/**\n * Returns true if pattern is in the editing state.\n *\n * @param {Object} state    Global application state.\n * @param {number} clientId the clientID of the block.\n * @return {boolean} Whether the pattern is in the editing state.\n */\nexport function isEditingPattern( state, clientId ) {\n\treturn state.isEditingPattern[ clientId ];\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I acknowledge private features are not for use in themes or plugins and doing so will break in the next version of WordPress.',\n\t\t'@wordpress/patterns'\n\t);\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport { STORE_NAME } from './constants';\nimport * as selectors from './selectors';\nimport { unlock } from '../lock-unlock';\n\n/**\n * Post editor data store configuration.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#registerStore\n *\n * @type {Object}\n */\nexport const storeConfig = {\n\treducer,\n};\n\n/**\n * Store definition for the editor namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\t...storeConfig,\n} );\n\nregister( store );\nunlock( store ).registerPrivateActions( actions );\nunlock( store ).registerPrivateSelectors( selectors );\n","/**\n * Module Constants\n */\nexport const STORE_NAME = 'core/patterns';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * Internal dependencies\n */\nimport { PARTIAL_SYNCING_SUPPORTED_BLOCKS } from '../constants';\n\n/**\n * Determines whether a block is overridable.\n *\n * @param {WPBlock} block The block to test.\n *\n * @return {boolean} `true` if a block is overridable, `false` otherwise.\n */\nexport function isOverridableBlock( block ) {\n\treturn (\n\t\tObject.keys( PARTIAL_SYNCING_SUPPORTED_BLOCKS ).includes(\n\t\t\tblock.name\n\t\t) &&\n\t\t!! block.attributes.metadata?.name &&\n\t\t!! block.attributes.metadata?.bindings &&\n\t\tObject.values( block.attributes.metadata.bindings ).some(\n\t\t\t( binding ) => binding.source === 'core/pattern-overrides'\n\t\t)\n\t);\n}\n\n/**\n * Determines whether the blocks list has overridable blocks.\n *\n * @param {WPBlock[]} blocks The blocks list.\n *\n * @return {boolean} `true` if the list has overridable blocks, `false` otherwise.\n */\nexport function hasOverridableBlocks( blocks ) {\n\treturn blocks.some( ( block ) => {\n\t\tif ( isOverridableBlock( block ) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn hasOverridableBlocks( block.innerBlocks );\n\t} );\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/**\n * WordPress dependencies\n */\nimport {\n\tprivateApis as blockEditorPrivateApis,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { isOverridableBlock } from '../api';\nimport { unlock } from '../lock-unlock';\n\nconst { BlockQuickNavigation } = unlock( blockEditorPrivateApis );\n\nexport default function OverridesPanel() {\n\tconst allClientIds = useSelect(\n\t\t( select ) => select( blockEditorStore ).getClientIdsWithDescendants(),\n\t\t[]\n\t);\n\tconst { getBlock } = useSelect( blockEditorStore );\n\tconst clientIdsWithOverrides = useMemo(\n\t\t() =>\n\t\t\tallClientIds.filter( ( clientId ) => {\n\t\t\t\tconst block = getBlock( clientId );\n\t\t\t\treturn isOverridableBlock( block );\n\t\t\t} ),\n\t\t[ allClientIds, getBlock ]\n\t);\n\n\tif ( ! clientIdsWithOverrides?.length ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody title={ __( 'Overrides' ) }>\n\t\t\t<BlockQuickNavigation clientIds={ clientIdsWithOverrides } />\n\t\t</PanelBody>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo, useState } from '@wordpress/element';\nimport { FormTokenField } from '@wordpress/components';\nimport { useDebounce } from '@wordpress/compose';\nimport { decodeEntities } from '@wordpress/html-entities';\n\nconst unescapeString = ( arg ) => {\n\treturn decodeEntities( arg );\n};\n\nexport const CATEGORY_SLUG = 'wp_pattern_category';\n\nexport default function CategorySelector( {\n\tcategoryTerms,\n\tonChange,\n\tcategoryMap,\n} ) {\n\tconst [ search, setSearch ] = useState( '' );\n\tconst debouncedSearch = useDebounce( setSearch, 500 );\n\n\tconst suggestions = useMemo( () => {\n\t\treturn Array.from( categoryMap.values() )\n\t\t\t.map( ( category ) => unescapeString( category.label ) )\n\t\t\t.filter( ( category ) => {\n\t\t\t\tif ( search !== '' ) {\n\t\t\t\t\treturn category\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.includes( search.toLowerCase() );\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} )\n\t\t\t.sort( ( a, b ) => a.localeCompare( b ) );\n\t}, [ search, categoryMap ] );\n\n\tfunction handleChange( termNames ) {\n\t\tconst uniqueTerms = termNames.reduce( ( terms, newTerm ) => {\n\t\t\tif (\n\t\t\t\t! terms.some(\n\t\t\t\t\t( term ) => term.toLowerCase() === newTerm.toLowerCase()\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tterms.push( newTerm );\n\t\t\t}\n\t\t\treturn terms;\n\t\t}, [] );\n\n\t\tonChange( uniqueTerms );\n\t}\n\n\treturn (\n\t\t<FormTokenField\n\t\t\tclassName=\"patterns-menu-items__convert-modal-categories\"\n\t\t\tvalue={ categoryTerms }\n\t\t\tsuggestions={ suggestions }\n\t\t\tonChange={ handleChange }\n\t\t\tonInputChange={ debouncedSearch }\n\t\t\tlabel={ __( 'Categories' ) }\n\t\t\ttokenizeOnBlur\n\t\t\t__experimentalExpandOnFocus\n\t\t\t__next40pxDefaultSize\n\t\t\t__nextHasNoMarginBottom\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { CATEGORY_SLUG } from './components/category-selector';\n\n/**\n * Helper hook that creates a Map with the core and user patterns categories\n * and removes any duplicates. It's used when we need to create new user\n * categories when creating or importing patterns.\n * This hook also provides a function to find or create a pattern category.\n *\n * @return {Object} The merged categories map and the callback function to find or create a category.\n */\nexport function useAddPatternCategory() {\n\tconst { saveEntityRecord, invalidateResolution } = useDispatch( coreStore );\n\tconst { corePatternCategories, userPatternCategories } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getUserPatternCategories, getBlockPatternCategories } =\n\t\t\t\tselect( coreStore );\n\n\t\t\treturn {\n\t\t\t\tcorePatternCategories: getBlockPatternCategories(),\n\t\t\t\tuserPatternCategories: getUserPatternCategories(),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\tconst categoryMap = useMemo( () => {\n\t\t// Merge the user and core pattern categories and remove any duplicates.\n\t\tconst uniqueCategories = new Map();\n\t\tuserPatternCategories.forEach( ( category ) => {\n\t\t\tuniqueCategories.set( category.label.toLowerCase(), {\n\t\t\t\tlabel: category.label,\n\t\t\t\tname: category.name,\n\t\t\t\tid: category.id,\n\t\t\t} );\n\t\t} );\n\n\t\tcorePatternCategories.forEach( ( category ) => {\n\t\t\tif (\n\t\t\t\t! uniqueCategories.has( category.label.toLowerCase() ) &&\n\t\t\t\t// There are two core categories with `Post` label so explicitly remove the one with\n\t\t\t\t// the `query` slug to avoid any confusion.\n\t\t\t\tcategory.name !== 'query'\n\t\t\t) {\n\t\t\t\tuniqueCategories.set( category.label.toLowerCase(), {\n\t\t\t\t\tlabel: category.label,\n\t\t\t\t\tname: category.name,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\treturn uniqueCategories;\n\t}, [ userPatternCategories, corePatternCategories ] );\n\n\tasync function findOrCreateTerm( term ) {\n\t\ttry {\n\t\t\tconst existingTerm = categoryMap.get( term.toLowerCase() );\n\t\t\tif ( existingTerm?.id ) {\n\t\t\t\treturn existingTerm.id;\n\t\t\t}\n\t\t\t// If we have an existing core category we need to match the new user category to the\n\t\t\t// correct slug rather than autogenerating it to prevent duplicates, eg. the core `Headers`\n\t\t\t// category uses the singular `header` as the slug.\n\t\t\tconst termData = existingTerm\n\t\t\t\t? { name: existingTerm.label, slug: existingTerm.name }\n\t\t\t\t: { name: term };\n\t\t\tconst newTerm = await saveEntityRecord(\n\t\t\t\t'taxonomy',\n\t\t\t\tCATEGORY_SLUG,\n\t\t\t\ttermData,\n\t\t\t\t{ throwOnError: true }\n\t\t\t);\n\t\t\tinvalidateResolution( 'getUserPatternCategories' );\n\t\t\treturn newTerm.id;\n\t\t} catch ( error ) {\n\t\t\tif ( error.code !== 'term_exists' ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\treturn error.data.term_id;\n\t\t}\n\t}\n\n\treturn { categoryMap, findOrCreateTerm };\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tModal,\n\tButton,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tToggleControl,\n} from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tPATTERN_DEFAULT_CATEGORY,\n\tPATTERN_SYNC_TYPES,\n\tPATTERN_TYPES,\n} from '../constants';\nimport { store as patternsStore } from '../store';\nimport CategorySelector from './category-selector';\nimport { useAddPatternCategory } from '../private-hooks';\nimport { unlock } from '../lock-unlock';\n\nexport default function CreatePatternModal( {\n\tclassName = 'patterns-menu-items__convert-modal',\n\tmodalTitle,\n\t...restProps\n} ) {\n\tconst defaultModalTitle = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getPostType( PATTERN_TYPES.user )?.labels\n\t\t\t\t?.add_new_item,\n\t\t[]\n\t);\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ modalTitle || defaultModalTitle }\n\t\t\tonRequestClose={ restProps.onClose }\n\t\t\toverlayClassName={ className }\n\t\t\tfocusOnMount=\"firstContentElement\"\n\t\t\tsize=\"small\"\n\t\t>\n\t\t\t<CreatePatternModalContents { ...restProps } />\n\t\t</Modal>\n\t);\n}\n\nexport function CreatePatternModalContents( {\n\tconfirmLabel = __( 'Add' ),\n\tdefaultCategories = [],\n\tcontent,\n\tonClose,\n\tonError,\n\tonSuccess,\n\tdefaultSyncType = PATTERN_SYNC_TYPES.full,\n\tdefaultTitle = '',\n} ) {\n\tconst [ syncType, setSyncType ] = useState( defaultSyncType );\n\tconst [ categoryTerms, setCategoryTerms ] = useState( defaultCategories );\n\tconst [ title, setTitle ] = useState( defaultTitle );\n\n\tconst [ isSaving, setIsSaving ] = useState( false );\n\tconst { createPattern } = unlock( useDispatch( patternsStore ) );\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tconst { categoryMap, findOrCreateTerm } = useAddPatternCategory();\n\n\tasync function onCreate( patternTitle, sync ) {\n\t\tif ( ! title || isSaving ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tsetIsSaving( true );\n\t\t\tconst categories = await Promise.all(\n\t\t\t\tcategoryTerms.map( ( termName ) =>\n\t\t\t\t\tfindOrCreateTerm( termName )\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tconst newPattern = await createPattern(\n\t\t\t\tpatternTitle,\n\t\t\t\tsync,\n\t\t\t\ttypeof content === 'function' ? content() : content,\n\t\t\t\tcategories\n\t\t\t);\n\t\t\tonSuccess( {\n\t\t\t\tpattern: newPattern,\n\t\t\t\tcategoryId: PATTERN_DEFAULT_CATEGORY,\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-create',\n\t\t\t} );\n\t\t\tonError?.();\n\t\t} finally {\n\t\t\tsetIsSaving( false );\n\t\t\tsetCategoryTerms( [] );\n\t\t\tsetTitle( '' );\n\t\t}\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={ ( event ) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tonCreate( title, syncType );\n\t\t\t} }\n\t\t>\n\t\t\t<VStack spacing=\"5\">\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\tvalue={ title }\n\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\tplaceholder={ __( 'My pattern' ) }\n\t\t\t\t\tclassName=\"patterns-create-modal__name-input\"\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t/>\n\t\t\t\t<CategorySelector\n\t\t\t\t\tcategoryTerms={ categoryTerms }\n\t\t\t\t\tonChange={ setCategoryTerms }\n\t\t\t\t\tcategoryMap={ categoryMap }\n\t\t\t\t/>\n\t\t\t\t<ToggleControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ _x( 'Synced', 'pattern (singular)' ) }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'Sync this pattern across multiple locations.'\n\t\t\t\t\t) }\n\t\t\t\t\tchecked={ syncType === PATTERN_SYNC_TYPES.full }\n\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\tsetSyncType(\n\t\t\t\t\t\t\tsyncType === PATTERN_SYNC_TYPES.full\n\t\t\t\t\t\t\t\t? PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t\t\t\t\t: PATTERN_SYNC_TYPES.full\n\t\t\t\t\t\t);\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\taria-disabled={ ! title || isSaving }\n\t\t\t\t\t\tisBusy={ isSaving }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ confirmLabel }\n\t\t\t\t\t</Button>\n\t\t\t\t</HStack>\n\t\t\t</VStack>\n\t\t</form>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport CreatePatternModal from './create-pattern-modal';\nimport { PATTERN_SYNC_TYPES, PATTERN_TYPES } from '../constants';\n\nfunction getTermLabels( pattern, categories ) {\n\t// Theme patterns rely on core pattern categories.\n\tif ( pattern.type !== PATTERN_TYPES.user ) {\n\t\treturn categories.core\n\t\t\t?.filter( ( category ) =>\n\t\t\t\tpattern.categories?.includes( category.name )\n\t\t\t)\n\t\t\t.map( ( category ) => category.label );\n\t}\n\n\treturn categories.user\n\t\t?.filter( ( category ) =>\n\t\t\tpattern.wp_pattern_category?.includes( category.id )\n\t\t)\n\t\t.map( ( category ) => category.label );\n}\n\nexport function useDuplicatePatternProps( { pattern, onSuccess } ) {\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst categories = useSelect( ( select ) => {\n\t\tconst { getUserPatternCategories, getBlockPatternCategories } =\n\t\t\tselect( coreStore );\n\n\t\treturn {\n\t\t\tcore: getBlockPatternCategories(),\n\t\t\tuser: getUserPatternCategories(),\n\t\t};\n\t} );\n\tif ( ! pattern ) {\n\t\treturn null;\n\t}\n\treturn {\n\t\tcontent: pattern.content,\n\t\tdefaultCategories: getTermLabels( pattern, categories ),\n\t\tdefaultSyncType:\n\t\t\tpattern.type !== PATTERN_TYPES.user // Theme patterns are unsynced by default.\n\t\t\t\t? PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t: pattern.wp_pattern_sync_status || PATTERN_SYNC_TYPES.full,\n\t\tdefaultTitle: sprintf(\n\t\t\t/* translators: %s: Existing pattern title */\n\t\t\t_x( '%s (Copy)', 'pattern' ),\n\t\t\ttypeof pattern.title === 'string'\n\t\t\t\t? pattern.title\n\t\t\t\t: pattern.title.raw\n\t\t),\n\t\tonSuccess: ( { pattern: newPattern } ) => {\n\t\t\tcreateSuccessNotice(\n\t\t\t\tsprintf(\n\t\t\t\t\t// translators: %s: The new pattern's title e.g. 'Call to action (copy)'.\n\t\t\t\t\t_x( '\"%s\" duplicated.', 'pattern' ),\n\t\t\t\t\tnewPattern.title.raw\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tid: 'patterns-create',\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tonSuccess?.( { pattern: newPattern } );\n\t\t},\n\t};\n}\n\nexport default function DuplicatePatternModal( {\n\tpattern,\n\tonClose,\n\tonSuccess,\n} ) {\n\tconst duplicatedProps = useDuplicatePatternProps( { pattern, onSuccess } );\n\tif ( ! pattern ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<CreatePatternModal\n\t\t\tmodalTitle={ __( 'Duplicate pattern' ) }\n\t\t\tconfirmLabel={ __( 'Duplicate' ) }\n\t\t\tonClose={ onClose }\n\t\t\tonError={ onClose }\n\t\t\t{ ...duplicatedProps }\n\t\t/>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbol = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbol;\n","/**\n * WordPress dependencies\n */\nimport {\n\thasBlockSupport,\n\tisReusableBlock,\n\tcreateBlock,\n\tserialize,\n\tgetBlockType,\n} from '@wordpress/blocks';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState, useCallback } from '@wordpress/element';\nimport { MenuItem } from '@wordpress/components';\nimport { symbol } from '@wordpress/icons';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n/**\n * Internal dependencies\n */\nimport { store as patternsStore } from '../store';\nimport CreatePatternModal from './create-pattern-modal';\nimport { unlock } from '../lock-unlock';\nimport { PATTERN_SYNC_TYPES } from '../constants';\n\n/**\n * Menu control to convert block(s) to a pattern block.\n *\n * @param {Object}   props                        Component props.\n * @param {string[]} props.clientIds              Client ids of selected blocks.\n * @param {string}   props.rootClientId           ID of the currently selected top-level block.\n * @param {()=>void} props.closeBlockSettingsMenu Callback to close the block settings menu dropdown.\n * @return {import('react').ComponentType} The menu control or null.\n */\nexport default function PatternConvertButton( {\n\tclientIds,\n\trootClientId,\n\tcloseBlockSettingsMenu,\n} ) {\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst { replaceBlocks, updateBlockAttributes } =\n\t\tuseDispatch( blockEditorStore );\n\t// Ignore reason: false positive of the lint rule.\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\tconst { setEditingPattern } = unlock( useDispatch( patternsStore ) );\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst { getBlockAttributes } = useSelect( blockEditorStore );\n\tconst canConvert = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst {\n\t\t\t\tgetBlocksByClientId,\n\t\t\t\tcanInsertBlockType,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst rootId =\n\t\t\t\trootClientId ||\n\t\t\t\t( clientIds.length > 0\n\t\t\t\t\t? getBlockRootClientId( clientIds[ 0 ] )\n\t\t\t\t\t: undefined );\n\n\t\t\tconst blocks = getBlocksByClientId( clientIds ) ?? [];\n\n\t\t\t// Check if the block has reusable support defined.\n\t\t\tconst hasReusableBlockSupport = ( blockName ) => {\n\t\t\t\tconst blockType = getBlockType( blockName );\n\t\t\t\tconst hasParent = blockType && 'parent' in blockType;\n\n\t\t\t\t// If the block has a parent, check with false as default, otherwise with true.\n\t\t\t\treturn hasBlockSupport( blockName, 'reusable', ! hasParent );\n\t\t\t};\n\n\t\t\tconst isSyncedPattern =\n\t\t\t\tblocks.length === 1 &&\n\t\t\t\tblocks[ 0 ] &&\n\t\t\t\tisReusableBlock( blocks[ 0 ] ) &&\n\t\t\t\t!! select( coreStore ).getEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_block',\n\t\t\t\t\tblocks[ 0 ].attributes.ref\n\t\t\t\t);\n\n\t\t\tconst isUnsyncedPattern =\n\t\t\t\twindow?.__experimentalContentOnlyPatternInsertion &&\n\t\t\t\tblocks.length === 1 &&\n\t\t\t\tblocks?.[ 0 ]?.attributes?.metadata?.patternName;\n\n\t\t\tconst _canConvert =\n\t\t\t\t// Hide when this is already a pattern.\n\t\t\t\t! isUnsyncedPattern &&\n\t\t\t\t! isSyncedPattern &&\n\t\t\t\t// Hide when patterns are disabled.\n\t\t\t\tcanInsertBlockType( 'core/block', rootId ) &&\n\t\t\t\tblocks.every(\n\t\t\t\t\t( block ) =>\n\t\t\t\t\t\t// Guard against the case where a regular block has *just* been converted.\n\t\t\t\t\t\t!! block &&\n\t\t\t\t\t\t// Hide on invalid blocks.\n\t\t\t\t\t\tblock.isValid &&\n\t\t\t\t\t\t// Hide when block doesn't support being made into a pattern.\n\t\t\t\t\t\thasReusableBlockSupport( block.name )\n\t\t\t\t) &&\n\t\t\t\t// Hide when current doesn't have permission to do that.\n\t\t\t\t// Blocks refers to the wp_block post type, this checks the ability to create a post of that type.\n\t\t\t\t!! canUser( 'create', {\n\t\t\t\t\tkind: 'postType',\n\t\t\t\t\tname: 'wp_block',\n\t\t\t\t} );\n\n\t\t\treturn _canConvert;\n\t\t},\n\t\t[ clientIds, rootClientId ]\n\t);\n\tconst { getBlocksByClientId } = useSelect( blockEditorStore );\n\tconst getContent = useCallback(\n\t\t() => serialize( getBlocksByClientId( clientIds ) ),\n\t\t[ getBlocksByClientId, clientIds ]\n\t);\n\n\tif ( ! canConvert ) {\n\t\treturn null;\n\t}\n\n\tconst handleSuccess = ( { pattern } ) => {\n\t\tif ( pattern.wp_pattern_sync_status === PATTERN_SYNC_TYPES.unsynced ) {\n\t\t\tif ( clientIds?.length === 1 ) {\n\t\t\t\tconst existingAttributes = getBlockAttributes( clientIds[ 0 ] );\n\t\t\t\tupdateBlockAttributes( clientIds[ 0 ], {\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t...( existingAttributes?.metadata\n\t\t\t\t\t\t\t? existingAttributes.metadata\n\t\t\t\t\t\t\t: {} ),\n\t\t\t\t\t\tpatternName: `core/block/${ pattern.id }`,\n\t\t\t\t\t\tname: pattern.title.raw,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\t\tref: pattern.id,\n\t\t\t} );\n\n\t\t\treplaceBlocks( clientIds, newBlock );\n\t\t\tsetEditingPattern( newBlock.clientId, true );\n\t\t\tcloseBlockSettingsMenu();\n\t\t}\n\n\t\tcreateSuccessNotice(\n\t\t\tpattern.wp_pattern_sync_status === PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t? sprintf(\n\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t__( 'Unsynced pattern created: %s' ),\n\t\t\t\t\t\tpattern.title.raw\n\t\t\t\t  )\n\t\t\t\t: sprintf(\n\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t__( 'Synced pattern created: %s' ),\n\t\t\t\t\t\tpattern.title.raw\n\t\t\t\t  ),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'convert-to-pattern-success',\n\t\t\t}\n\t\t);\n\t\tsetIsModalOpen( false );\n\t};\n\treturn (\n\t\t<>\n\t\t\t<MenuItem\n\t\t\t\ticon={ symbol }\n\t\t\t\tonClick={ () => setIsModalOpen( true ) }\n\t\t\t\taria-expanded={ isModalOpen }\n\t\t\t\taria-haspopup=\"dialog\"\n\t\t\t>\n\t\t\t\t{ __( 'Create pattern' ) }\n\t\t\t</MenuItem>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<CreatePatternModal\n\t\t\t\t\tcontent={ getContent }\n\t\t\t\t\tonSuccess={ ( pattern ) => {\n\t\t\t\t\t\thandleSuccess( pattern );\n\t\t\t\t\t} }\n\t\t\t\t\tonError={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t\tonClose={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as patternsStore } from '../store';\nimport { unlock } from '../lock-unlock';\n\nfunction PatternsManageButton( { clientId } ) {\n\tconst {\n\t\tattributes,\n\t\tcanDetach,\n\t\tisVisible,\n\t\tmanagePatternsUrl,\n\t\tisSyncedPattern,\n\t\tisUnsyncedPattern,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canRemoveBlock, getBlock } = select( blockEditorStore );\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst block = getBlock( clientId );\n\n\t\t\tconst _isUnsyncedPattern =\n\t\t\t\twindow?.__experimentalContentOnlyPatternInsertion &&\n\t\t\t\t!! block?.attributes?.metadata?.patternName;\n\n\t\t\tconst _isSyncedPattern =\n\t\t\t\t!! block &&\n\t\t\t\tisReusableBlock( block ) &&\n\t\t\t\t!! canUser( 'update', {\n\t\t\t\t\tkind: 'postType',\n\t\t\t\t\tname: 'wp_block',\n\t\t\t\t\tid: block.attributes.ref,\n\t\t\t\t} );\n\n\t\t\treturn {\n\t\t\t\tattributes: block.attributes,\n\t\t\t\t// For unsynced patterns, detaching is simply removing the `patternName` attribute.\n\t\t\t\t// For synced patterns, the `core:block` block is replaced with its inner blocks,\n\t\t\t\t// so checking whether `canRemoveBlock` is possible is required.\n\t\t\t\tcanDetach:\n\t\t\t\t\t_isUnsyncedPattern ||\n\t\t\t\t\t( _isSyncedPattern && canRemoveBlock( clientId ) ),\n\t\t\t\tisUnsyncedPattern: _isUnsyncedPattern,\n\t\t\t\tisSyncedPattern: _isSyncedPattern,\n\t\t\t\tisVisible: _isUnsyncedPattern || _isSyncedPattern,\n\t\t\t\t// The site editor and templates both check whether the user\n\t\t\t\t// has edit_theme_options capabilities. We can leverage that here\n\t\t\t\t// and omit the manage patterns link if the user can't access it.\n\t\t\t\tmanagePatternsUrl: canUser( 'create', {\n\t\t\t\t\tkind: 'postType',\n\t\t\t\t\tname: 'wp_template',\n\t\t\t\t} )\n\t\t\t\t\t? addQueryArgs( 'site-editor.php', {\n\t\t\t\t\t\t\tp: '/pattern',\n\t\t\t\t\t  } )\n\t\t\t\t\t: addQueryArgs( 'edit.php', {\n\t\t\t\t\t\t\tpost_type: 'wp_block',\n\t\t\t\t\t  } ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\t// Ignore reason: false positive of the lint rule.\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\tconst { convertSyncedPatternToStatic } = unlock(\n\t\tuseDispatch( patternsStore )\n\t);\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ canDetach && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tif ( isSyncedPattern ) {\n\t\t\t\t\t\t\tconvertSyncedPatternToStatic( clientId );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isUnsyncedPattern ) {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tpatternName,\n\t\t\t\t\t\t\t\t...attributesWithoutPatternName\n\t\t\t\t\t\t\t} = attributes?.metadata ?? {};\n\t\t\t\t\t\t\tupdateBlockAttributes( clientId, {\n\t\t\t\t\t\t\t\tmetadata: attributesWithoutPatternName,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Detach' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t\t<MenuItem href={ managePatternsUrl }>\n\t\t\t\t{ __( 'Manage patterns' ) }\n\t\t\t</MenuItem>\n\t\t</>\n\t);\n}\n\nexport default PatternsManageButton;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"a11y\"];","/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tButton,\n\t__experimentalText as Text,\n\tTextControl,\n\tModal,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useState, useId } from '@wordpress/element';\nimport { speak } from '@wordpress/a11y';\n\nexport function AllowOverridesModal( {\n\tplaceholder,\n\tinitialName = '',\n\tonClose,\n\tonSave,\n} ) {\n\tconst [ editedBlockName, setEditedBlockName ] = useState( initialName );\n\tconst descriptionId = useId();\n\n\tconst isNameValid = !! editedBlockName.trim();\n\n\tconst handleSubmit = () => {\n\t\tif ( editedBlockName !== initialName ) {\n\t\t\tconst message = sprintf(\n\t\t\t\t/* translators: %s: new name/label for the block */\n\t\t\t\t__( 'Block name changed to: \"%s\".' ),\n\t\t\t\teditedBlockName\n\t\t\t);\n\n\t\t\t// Must be assertive to immediately announce change.\n\t\t\tspeak( message, 'assertive' );\n\t\t}\n\t\tonSave( editedBlockName );\n\n\t\t// Immediate close avoids ability to hit save multiple times.\n\t\tonClose();\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Enable overrides' ) }\n\t\t\tonRequestClose={ onClose }\n\t\t\tfocusOnMount=\"firstContentElement\"\n\t\t\taria={ { describedby: descriptionId } }\n\t\t\tsize=\"small\"\n\t\t>\n\t\t\t<form\n\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tif ( ! isNameValid ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\thandleSubmit();\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<VStack spacing=\"6\">\n\t\t\t\t\t<Text id={ descriptionId }>\n\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t'Overrides are changes you make to a block within a synced pattern instance. Use overrides to customize a synced pattern instance to suit its new context. Name this block to specify an override.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</Text>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tvalue={ editedBlockName }\n\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'For example, if you are creating a recipe pattern, you use \"Recipe Title\", \"Recipe Description\", etc.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\t\tonChange={ setEditedBlockName }\n\t\t\t\t\t/>\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\taria-disabled={ ! isNameValid }\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Enable' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n\nexport function DisallowOverridesModal( { onClose, onSave } ) {\n\tconst descriptionId = useId();\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Disable overrides' ) }\n\t\t\tonRequestClose={ onClose }\n\t\t\taria={ { describedby: descriptionId } }\n\t\t\tsize=\"small\"\n\t\t>\n\t\t\t<form\n\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tonSave();\n\t\t\t\t\tonClose();\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<VStack spacing=\"6\">\n\t\t\t\t\t<Text id={ descriptionId }>\n\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t'Are you sure you want to disable overrides? Disabling overrides will revert all applied overrides for this block throughout instances of this pattern.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Disable' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useState, useId } from '@wordpress/element';\nimport {\n\tInspectorControls,\n\tuseBlockBindingsUtils,\n} from '@wordpress/block-editor';\nimport { BaseControl, Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { PATTERN_OVERRIDES_BINDING_SOURCE } from '../constants';\nimport {\n\tAllowOverridesModal,\n\tDisallowOverridesModal,\n} from './allow-overrides-modal';\n\nfunction PatternOverridesControls( {\n\tattributes,\n\tsetAttributes,\n\tname: blockName,\n} ) {\n\tconst controlId = useId();\n\tconst [ showAllowOverridesModal, setShowAllowOverridesModal ] =\n\t\tuseState( false );\n\tconst [ showDisallowOverridesModal, setShowDisallowOverridesModal ] =\n\t\tuseState( false );\n\n\tconst hasName = !! attributes.metadata?.name;\n\tconst defaultBindings = attributes.metadata?.bindings?.__default;\n\tconst hasOverrides =\n\t\thasName && defaultBindings?.source === PATTERN_OVERRIDES_BINDING_SOURCE;\n\tconst isConnectedToOtherSources =\n\t\tdefaultBindings?.source &&\n\t\tdefaultBindings.source !== PATTERN_OVERRIDES_BINDING_SOURCE;\n\tconst { updateBlockBindings } = useBlockBindingsUtils();\n\n\tfunction updateBindings( isChecked, customName ) {\n\t\tif ( customName ) {\n\t\t\tsetAttributes( {\n\t\t\t\tmetadata: {\n\t\t\t\t\t...attributes.metadata,\n\t\t\t\t\tname: customName,\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\n\t\tupdateBlockBindings( {\n\t\t\t__default: isChecked\n\t\t\t\t? { source: PATTERN_OVERRIDES_BINDING_SOURCE }\n\t\t\t\t: undefined,\n\t\t} );\n\t}\n\n\t// Avoid overwriting other (e.g. meta) bindings.\n\tif ( isConnectedToOtherSources ) {\n\t\treturn null;\n\t}\n\n\tconst hasUnsupportedImageAttributes =\n\t\tblockName === 'core/image' &&\n\t\t( !! attributes.caption?.length || !! attributes.href?.length );\n\n\tconst helpText =\n\t\t! hasOverrides && hasUnsupportedImageAttributes\n\t\t\t? __(\n\t\t\t\t\t`Overrides currently don't support image captions or links. Remove the caption or link first before enabling overrides.`\n\t\t\t  )\n\t\t\t: __(\n\t\t\t\t\t'Allow changes to this block throughout instances of this pattern.'\n\t\t\t  );\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls group=\"advanced\">\n\t\t\t\t<BaseControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tid={ controlId }\n\t\t\t\t\tlabel={ __( 'Overrides' ) }\n\t\t\t\t\thelp={ helpText }\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tclassName=\"pattern-overrides-control__allow-overrides-button\"\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\taria-haspopup=\"dialog\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tif ( hasOverrides ) {\n\t\t\t\t\t\t\t\tsetShowDisallowOverridesModal( true );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetShowAllowOverridesModal( true );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t! hasOverrides && hasUnsupportedImageAttributes\n\t\t\t\t\t\t}\n\t\t\t\t\t\taccessibleWhenDisabled\n\t\t\t\t\t>\n\t\t\t\t\t\t{ hasOverrides\n\t\t\t\t\t\t\t? __( 'Disable overrides' )\n\t\t\t\t\t\t\t: __( 'Enable overrides' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</BaseControl>\n\t\t\t</InspectorControls>\n\n\t\t\t{ showAllowOverridesModal && (\n\t\t\t\t<AllowOverridesModal\n\t\t\t\t\tinitialName={ attributes.metadata?.name }\n\t\t\t\t\tonClose={ () => setShowAllowOverridesModal( false ) }\n\t\t\t\t\tonSave={ ( newName ) => {\n\t\t\t\t\t\tupdateBindings( true, newName );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ showDisallowOverridesModal && (\n\t\t\t\t<DisallowOverridesModal\n\t\t\t\t\tonClose={ () => setShowDisallowOverridesModal( false ) }\n\t\t\t\t\tonSave={ () => updateBindings( false ) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default PatternOverridesControls;\n","/**\n * WordPress dependencies\n */\nimport {\n\tstore as blockEditorStore,\n\t__unstableBlockToolbarLastItem as BlockToolbarLastItem,\n} from '@wordpress/block-editor';\nimport { ToolbarButton, ToolbarGroup } from '@wordpress/components';\nimport { useRegistry, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\nconst CONTENT = 'content';\n\nexport default function ResetOverridesControl( props ) {\n\tconst name = props.attributes.metadata?.name;\n\tconst registry = useRegistry();\n\tconst isOverridden = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! name ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { getBlockAttributes, getBlockParentsByBlockName } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst [ patternClientId ] = getBlockParentsByBlockName(\n\t\t\t\tprops.clientId,\n\t\t\t\t'core/block',\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tif ( ! patternClientId ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst overrides = getBlockAttributes( patternClientId )[ CONTENT ];\n\n\t\t\tif ( ! overrides ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn overrides.hasOwnProperty( name );\n\t\t},\n\t\t[ props.clientId, name ]\n\t);\n\n\tfunction onClick() {\n\t\tconst { getBlockAttributes, getBlockParentsByBlockName } =\n\t\t\tregistry.select( blockEditorStore );\n\t\tconst [ patternClientId ] = getBlockParentsByBlockName(\n\t\t\tprops.clientId,\n\t\t\t'core/block',\n\t\t\ttrue\n\t\t);\n\n\t\tif ( ! patternClientId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst overrides = getBlockAttributes( patternClientId )[ CONTENT ];\n\n\t\tif ( ! overrides.hasOwnProperty( name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { updateBlockAttributes, __unstableMarkLastChangeAsPersistent } =\n\t\t\tregistry.dispatch( blockEditorStore );\n\t\t__unstableMarkLastChangeAsPersistent();\n\n\t\tlet newOverrides = { ...overrides };\n\t\tdelete newOverrides[ name ];\n\n\t\tif ( ! Object.keys( newOverrides ).length ) {\n\t\t\tnewOverrides = undefined;\n\t\t}\n\n\t\tupdateBlockAttributes( patternClientId, {\n\t\t\t[ CONTENT ]: newOverrides,\n\t\t} );\n\t}\n\n\treturn (\n\t\t<BlockToolbarLastItem>\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarButton onClick={ onClick } disabled={ ! isOverridden }>\n\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t</ToolbarButton>\n\t\t\t</ToolbarGroup>\n\t\t</BlockToolbarLastItem>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst copy = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M5 4.5h11a.5.5 0 0 1 .5.5v11a.5.5 0 0 1-.5.5H5a.5.5 0 0 1-.5-.5V5a.5.5 0 0 1 .5-.5ZM3 5a2 2 0 0 1 2-2h11a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5Zm17 3v10.75c0 .69-.56 1.25-1.25 1.25H6v1.5h12.75a2.75 2.75 0 0 0 2.75-2.75V8H20Z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default copy;\n","/**\n * WordPress dependencies\n */\nimport { useId } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tDropdownMenu,\n\tToolbarItem,\n\t__experimentalText as Text,\n} from '@wordpress/components';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { copy } from '@wordpress/icons';\nimport {\n\tstore as blockEditorStore,\n\tBlockIcon,\n\tprivateApis as blockEditorPrivateApis,\n\tBlockControls,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\nimport { PATTERN_OVERRIDES_BINDING_SOURCE } from '../constants';\n\nconst { useBlockDisplayTitle } = unlock( blockEditorPrivateApis );\n\nfunction PatternOverridesToolbarIndicator( { clientIds } ) {\n\tconst isSingleBlockSelected = clientIds.length === 1;\n\tconst { icon, firstBlockName } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockAttributes, getBlockNamesByClientId } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst { getBlockType, getActiveBlockVariation } =\n\t\t\t\tselect( blocksStore );\n\t\t\tconst blockTypeNames = getBlockNamesByClientId( clientIds );\n\t\t\tconst _firstBlockTypeName = blockTypeNames[ 0 ];\n\t\t\tconst firstBlockType = getBlockType( _firstBlockTypeName );\n\t\t\tlet _icon;\n\t\t\tif ( isSingleBlockSelected ) {\n\t\t\t\tconst match = getActiveBlockVariation(\n\t\t\t\t\t_firstBlockTypeName,\n\t\t\t\t\tgetBlockAttributes( clientIds[ 0 ] )\n\t\t\t\t);\n\t\t\t\t// Take into account active block variations.\n\t\t\t\t_icon = match?.icon || firstBlockType.icon;\n\t\t\t} else {\n\t\t\t\tconst isSelectionOfSameType =\n\t\t\t\t\tnew Set( blockTypeNames ).size === 1;\n\t\t\t\t// When selection consists of blocks of multiple types, display an\n\t\t\t\t// appropriate icon to communicate the non-uniformity.\n\t\t\t\t_icon = isSelectionOfSameType ? firstBlockType.icon : copy;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ticon: _icon,\n\t\t\t\tfirstBlockName: getBlockAttributes( clientIds[ 0 ] ).metadata\n\t\t\t\t\t.name,\n\t\t\t};\n\t\t},\n\t\t[ clientIds, isSingleBlockSelected ]\n\t);\n\tconst firstBlockTitle = useBlockDisplayTitle( {\n\t\tclientId: clientIds[ 0 ],\n\t\tmaximumLength: 35,\n\t} );\n\n\tconst blockDescription = isSingleBlockSelected\n\t\t? sprintf(\n\t\t\t\t/* translators: 1: The block type's name. 2: The block's user-provided name (the same as the override name). */\n\t\t\t\t__( 'This %1$s is editable using the \"%2$s\" override.' ),\n\t\t\t\tfirstBlockTitle.toLowerCase(),\n\t\t\t\tfirstBlockName\n\t\t  )\n\t\t: __( 'These blocks are editable using overrides.' );\n\n\tconst descriptionId = useId();\n\n\treturn (\n\t\t<ToolbarItem>\n\t\t\t{ ( toggleProps ) => (\n\t\t\t\t<DropdownMenu\n\t\t\t\t\tclassName=\"patterns-pattern-overrides-toolbar-indicator\"\n\t\t\t\t\tlabel={ firstBlockTitle }\n\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\tplacement: 'bottom-start',\n\t\t\t\t\t\tclassName:\n\t\t\t\t\t\t\t'patterns-pattern-overrides-toolbar-indicator__popover',\n\t\t\t\t\t} }\n\t\t\t\t\ticon={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<BlockIcon\n\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\tclassName=\"patterns-pattern-overrides-toolbar-indicator-icon\"\n\t\t\t\t\t\t\t\tshowColors\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\tdescription: blockDescription,\n\t\t\t\t\t\t...toggleProps,\n\t\t\t\t\t} }\n\t\t\t\t\tmenuProps={ {\n\t\t\t\t\t\torientation: 'both',\n\t\t\t\t\t\t'aria-describedby': descriptionId,\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ () => (\n\t\t\t\t\t\t<Text id={ descriptionId }>{ blockDescription }</Text>\n\t\t\t\t\t) }\n\t\t\t\t</DropdownMenu>\n\t\t\t) }\n\t\t</ToolbarItem>\n\t);\n}\n\nexport default function PatternOverridesBlockControls() {\n\tconst { clientIds, hasPatternOverrides, hasParentPattern } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockAttributes,\n\t\t\t\tgetSelectedBlockClientIds,\n\t\t\t\tgetBlockParentsByBlockName,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst selectedClientIds = getSelectedBlockClientIds();\n\t\t\tconst _hasPatternOverrides = selectedClientIds.every(\n\t\t\t\t( clientId ) =>\n\t\t\t\t\tObject.values(\n\t\t\t\t\t\tgetBlockAttributes( clientId )?.metadata?.bindings ?? {}\n\t\t\t\t\t).some(\n\t\t\t\t\t\t( binding ) =>\n\t\t\t\t\t\t\tbinding?.source === PATTERN_OVERRIDES_BINDING_SOURCE\n\t\t\t\t\t)\n\t\t\t);\n\t\t\tconst _hasParentPattern = selectedClientIds.every(\n\t\t\t\t( clientId ) =>\n\t\t\t\t\tgetBlockParentsByBlockName( clientId, 'core/block', true )\n\t\t\t\t\t\t.length > 0\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tclientIds: selectedClientIds,\n\t\t\t\thasPatternOverrides: _hasPatternOverrides,\n\t\t\t\thasParentPattern: _hasParentPattern,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\treturn hasPatternOverrides && hasParentPattern ? (\n\t\t<BlockControls group=\"parent\">\n\t\t\t<PatternOverridesToolbarIndicator clientIds={ clientIds } />\n\t\t</BlockControls>\n\t) : null;\n}\n","/**\n * Internal dependencies\n */\nimport { lock } from './lock-unlock';\nimport OverridesPanel from './components/overrides-panel';\nimport {\n\tdefault as CreatePatternModal,\n\tCreatePatternModalContents,\n} from './components/create-pattern-modal';\nimport {\n\tdefault as DuplicatePatternModal,\n\tuseDuplicatePatternProps,\n} from './components/duplicate-pattern-modal';\nimport { isOverridableBlock, hasOverridableBlocks } from './api';\nimport RenamePatternModal from './components/rename-pattern-modal';\nimport PatternsMenuItems from './components';\nimport RenamePatternCategoryModal from './components/rename-pattern-category-modal';\nimport PatternOverridesControls from './components/pattern-overrides-controls';\nimport ResetOverridesControl from './components/reset-overrides-control';\nimport PatternOverridesBlockControls from './components/pattern-overrides-block-controls';\nimport { useAddPatternCategory } from './private-hooks';\nimport {\n\tPATTERN_TYPES,\n\tPATTERN_DEFAULT_CATEGORY,\n\tPATTERN_USER_CATEGORY,\n\tEXCLUDED_PATTERN_SOURCES,\n\tPATTERN_SYNC_TYPES,\n\tPARTIAL_SYNCING_SUPPORTED_BLOCKS,\n} from './constants';\n\nexport const privateApis = {};\nlock( privateApis, {\n\tOverridesPanel,\n\tCreatePatternModal,\n\tCreatePatternModalContents,\n\tDuplicatePatternModal,\n\tisOverridableBlock,\n\thasOverridableBlocks,\n\tuseDuplicatePatternProps,\n\tRenamePatternModal,\n\tPatternsMenuItems,\n\tRenamePatternCategoryModal,\n\tPatternOverridesControls,\n\tResetOverridesControl,\n\tPatternOverridesBlockControls,\n\tuseAddPatternCategory,\n\tPATTERN_TYPES,\n\tPATTERN_DEFAULT_CATEGORY,\n\tPATTERN_USER_CATEGORY,\n\tEXCLUDED_PATTERN_SOURCES,\n\tPATTERN_SYNC_TYPES,\n\tPARTIAL_SYNCING_SUPPORTED_BLOCKS,\n} );\n","/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\tModal,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __ } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\nexport default function RenamePatternModal( {\n\tonClose,\n\tonError,\n\tonSuccess,\n\tpattern,\n\t...props\n} ) {\n\tconst originalName = decodeEntities( pattern.title );\n\tconst [ name, setName ] = useState( originalName );\n\tconst [ isSaving, setIsSaving ] = useState( false );\n\n\tconst {\n\t\teditEntityRecord,\n\t\t__experimentalSaveSpecifiedEntityEdits: saveSpecifiedEntityEdits,\n\t} = useDispatch( coreStore );\n\n\tconst { createSuccessNotice, createErrorNotice } =\n\t\tuseDispatch( noticesStore );\n\n\tconst onRename = async ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tif ( ! name || name === pattern.title || isSaving ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait editEntityRecord( 'postType', pattern.type, pattern.id, {\n\t\t\t\ttitle: name,\n\t\t\t} );\n\n\t\t\tsetIsSaving( true );\n\t\t\tsetName( '' );\n\t\t\tonClose?.();\n\n\t\t\tconst savedRecord = await saveSpecifiedEntityEdits(\n\t\t\t\t'postType',\n\t\t\t\tpattern.type,\n\t\t\t\tpattern.id,\n\t\t\t\t[ 'title' ],\n\t\t\t\t{ throwOnError: true }\n\t\t\t);\n\n\t\t\tonSuccess?.( savedRecord );\n\n\t\t\tcreateSuccessNotice( __( 'Pattern renamed' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-update',\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tonError?.();\n\n\t\t\tconst errorMessage =\n\t\t\t\terror.message && error.code !== 'unknown_error'\n\t\t\t\t\t? error.message\n\t\t\t\t\t: __( 'An error occurred while renaming the pattern.' );\n\n\t\t\tcreateErrorNotice( errorMessage, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-update',\n\t\t\t} );\n\t\t} finally {\n\t\t\tsetIsSaving( false );\n\t\t\tsetName( '' );\n\t\t}\n\t};\n\n\tconst onRequestClose = () => {\n\t\tonClose?.();\n\t\tsetName( '' );\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Rename' ) }\n\t\t\t{ ...props }\n\t\t\tonRequestClose={ onClose }\n\t\t\tfocusOnMount=\"firstContentElement\"\n\t\t\tsize=\"small\"\n\t\t>\n\t\t\t<form onSubmit={ onRename }>\n\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\tvalue={ name }\n\t\t\t\t\t\tonChange={ setName }\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ onRequestClose }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport PatternConvertButton from './pattern-convert-button';\nimport PatternsManageButton from './patterns-manage-button';\n\nexport default function PatternsMenuItems( { rootClientId } ) {\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { selectedClientIds, onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<PatternConvertButton\n\t\t\t\t\t\tclientIds={ selectedClientIds }\n\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\tcloseBlockSettingsMenu={ onClose }\n\t\t\t\t\t/>\n\t\t\t\t\t{ selectedClientIds.length === 1 && (\n\t\t\t\t\t\t<PatternsManageButton\n\t\t\t\t\t\t\tclientId={ selectedClientIds[ 0 ] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tModal,\n\tButton,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDispatch } from '@wordpress/data';\nimport { useId, useRef, useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __ } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport { CATEGORY_SLUG } from './category-selector';\n\nexport default function RenamePatternCategoryModal( {\n\tcategory,\n\texistingCategories,\n\tonClose,\n\tonError,\n\tonSuccess,\n\t...props\n} ) {\n\tconst id = useId();\n\tconst textControlRef = useRef();\n\tconst [ name, setName ] = useState( decodeEntities( category.name ) );\n\tconst [ isSaving, setIsSaving ] = useState( false );\n\tconst [ validationMessage, setValidationMessage ] = useState( false );\n\tconst validationMessageId = validationMessage\n\t\t? `patterns-rename-pattern-category-modal__validation-message-${ id }`\n\t\t: undefined;\n\n\tconst { saveEntityRecord, invalidateResolution } = useDispatch( coreStore );\n\tconst { createErrorNotice, createSuccessNotice } =\n\t\tuseDispatch( noticesStore );\n\n\tconst onChange = ( newName ) => {\n\t\tif ( validationMessage ) {\n\t\t\tsetValidationMessage( undefined );\n\t\t}\n\t\tsetName( newName );\n\t};\n\n\tconst onSave = async ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tif ( isSaving ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! name || name === category.name ) {\n\t\t\tconst message = __( 'Please enter a new name for this category.' );\n\t\t\tspeak( message, 'assertive' );\n\t\t\tsetValidationMessage( message );\n\t\t\ttextControlRef.current?.focus();\n\t\t\treturn;\n\t\t}\n\n\t\t// Check existing categories to avoid creating duplicates.\n\t\tif (\n\t\t\texistingCategories.patternCategories.find( ( existingCategory ) => {\n\t\t\t\t// Compare the id so that the we don't disallow the user changing the case of their current category\n\t\t\t\t// (i.e. renaming 'test' to 'Test').\n\t\t\t\treturn (\n\t\t\t\t\texistingCategory.id !== category.id &&\n\t\t\t\t\texistingCategory.label.toLowerCase() === name.toLowerCase()\n\t\t\t\t);\n\t\t\t} )\n\t\t) {\n\t\t\tconst message = __(\n\t\t\t\t'This category already exists. Please use a different name.'\n\t\t\t);\n\t\t\tspeak( message, 'assertive' );\n\t\t\tsetValidationMessage( message );\n\t\t\ttextControlRef.current?.focus();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tsetIsSaving( true );\n\n\t\t\t// User pattern category properties may differ as they can be\n\t\t\t// normalized for use alongside template part areas, core pattern\n\t\t\t// categories etc. As a result we won't just destructure the passed\n\t\t\t// category object.\n\t\t\tconst savedRecord = await saveEntityRecord(\n\t\t\t\t'taxonomy',\n\t\t\t\tCATEGORY_SLUG,\n\t\t\t\t{\n\t\t\t\t\tid: category.id,\n\t\t\t\t\tslug: category.slug,\n\t\t\t\t\tname,\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tinvalidateResolution( 'getUserPatternCategories' );\n\t\t\tonSuccess?.( savedRecord );\n\t\t\tonClose();\n\n\t\t\tcreateSuccessNotice( __( 'Pattern category renamed.' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-category-update',\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tonError?.();\n\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-category-update',\n\t\t\t} );\n\t\t} finally {\n\t\t\tsetIsSaving( false );\n\t\t\tsetName( '' );\n\t\t}\n\t};\n\n\tconst onRequestClose = () => {\n\t\tonClose();\n\t\tsetName( '' );\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Rename' ) }\n\t\t\tonRequestClose={ onRequestClose }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t<form onSubmit={ onSave }>\n\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t<VStack spacing=\"2\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tref={ textControlRef }\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\t\tvalue={ name }\n\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\taria-describedby={ validationMessageId }\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ validationMessage && (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"patterns-rename-pattern-category-modal__validation-message\"\n\t\t\t\t\t\t\t\tid={ validationMessageId }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ validationMessage }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</VStack>\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ onRequestClose }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\taria-disabled={\n\t\t\t\t\t\t\t\t! name || name === category.name || isSaving\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisBusy={ isSaving }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","combineReducers","isEditingPattern","state","action","type","clientId","isEditing","PATTERN_TYPES","theme","user","PATTERN_DEFAULT_CATEGORY","PATTERN_SYNC_TYPES","full","unsynced","PARTIAL_SYNCING_SUPPORTED_BLOCKS","PATTERN_OVERRIDES_BINDING_SOURCE","createPattern","title","syncType","content","categories","async","registry","meta","wp_pattern_sync_status","undefined","reusableBlock","status","wp_pattern_category","dispatch","coreStore","saveEntityRecord","createPatternFromFile","file","fileContent","text","parsedContent","JSON","parse","e","Error","__file","syncStatus","convertSyncedPatternToStatic","patternBlock","select","blockEditorStore","getBlock","existingOverrides","attributes","patternInnerBlocks","getBlocks","replaceBlocks","cloneBlocksAndRemoveBindings","blocks","map","block","metadata","id","bindings","name","attributeName","entries","getBlockType","cloneBlock","keys","length","innerBlocks","setEditingPattern","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","storeConfig","reducer","store","createReduxStore","register","registerPrivateActions","actions","registerPrivateSelectors","selectors","isOverridableBlock","includes","values","some","binding","source","BlockQuickNavigation","blockEditorPrivateApis","unescapeString","arg","decodeEntities","CATEGORY_SLUG","CategorySelector","categoryTerms","onChange","categoryMap","search","setSearch","useState","debouncedSearch","useDebounce","suggestions","useMemo","Array","from","category","label","filter","toLowerCase","sort","a","b","localeCompare","_jsx","FormTokenField","className","termNames","uniqueTerms","reduce","terms","newTerm","term","push","onInputChange","__","tokenizeOnBlur","__experimentalExpandOnFocus","__next40pxDefaultSize","__nextHasNoMarginBottom","useAddPatternCategory","invalidateResolution","useDispatch","corePatternCategories","userPatternCategories","useSelect","getUserPatternCategories","getBlockPatternCategories","uniqueCategories","Map","forEach","set","has","findOrCreateTerm","existingTerm","termData","slug","throwOnError","error","code","data","term_id","CreatePatternModal","modalTitle","restProps","defaultModalTitle","getPostType","labels","add_new_item","Modal","onRequestClose","onClose","overlayClassName","focusOnMount","size","children","CreatePatternModalContents","confirmLabel","defaultCategories","onError","onSuccess","defaultSyncType","defaultTitle","setSyncType","setCategoryTerms","setTitle","isSaving","setIsSaving","patternsStore","createErrorNotice","noticesStore","onSubmit","event","preventDefault","patternTitle","sync","Promise","all","termName","newPattern","pattern","categoryId","message","onCreate","_jsxs","VStack","spacing","TextControl","placeholder","ToggleControl","_x","help","checked","HStack","justify","Button","variant","onClick","isBusy","getTermLabels","core","useDuplicatePatternProps","createSuccessNotice","sprintf","raw","SVG","xmlns","viewBox","Path","d","PatternConvertButton","clientIds","rootClientId","closeBlockSettingsMenu","updateBlockAttributes","isModalOpen","setIsModalOpen","getBlockAttributes","canConvert","_getBlocksByClientId","canUser","getBlocksByClientId","canInsertBlockType","getBlockRootClientId","rootId","isSyncedPattern","isReusableBlock","getEntityRecord","ref","__experimentalContentOnlyPatternInsertion","patternName","every","isValid","blockName","blockType","hasParent","hasBlockSupport","hasReusableBlockSupport","kind","getContent","useCallback","serialize","_Fragment","MenuItem","icon","symbol","handleSuccess","existingAttributes","newBlock","createBlock","canDetach","isVisible","managePatternsUrl","isUnsyncedPattern","canRemoveBlock","_isUnsyncedPattern","_isSyncedPattern","addQueryArgs","p","post_type","_attributes$metadata","attributesWithoutPatternName","href","AllowOverridesModal","initialName","onSave","editedBlockName","setEditedBlockName","descriptionId","useId","isNameValid","trim","aria","describedby","handleSubmit","speak","Text","DisallowOverridesModal","CONTENT","fillRule","clipRule","useBlockDisplayTitle","PatternOverridesToolbarIndicator","isSingleBlockSelected","firstBlockName","getBlockNamesByClientId","getActiveBlockVariation","blocksStore","blockTypeNames","_firstBlockTypeName","firstBlockType","_icon","match","Set","copy","firstBlockTitle","maximumLength","blockDescription","ToolbarItem","toggleProps","DropdownMenu","popoverProps","placement","BlockIcon","showColors","description","menuProps","orientation","privateApis","OverridesPanel","allClientIds","getClientIdsWithDescendants","clientIdsWithOverrides","PanelBody","DuplicatePatternModal","duplicatedProps","hasOverridableBlocks","RenamePatternModal","props","originalName","setName","editEntityRecord","__experimentalSaveSpecifiedEntityEdits","saveSpecifiedEntityEdits","savedRecord","errorMessage","required","PatternsMenuItems","BlockSettingsMenuControls","selectedClientIds","PatternsManageButton","RenamePatternCategoryModal","existingCategories","textControlRef","useRef","validationMessage","setValidationMessage","validationMessageId","current","focus","patternCategories","find","existingCategory","newName","PatternOverridesControls","setAttributes","controlId","showAllowOverridesModal","setShowAllowOverridesModal","showDisallowOverridesModal","setShowDisallowOverridesModal","hasName","defaultBindings","__default","hasOverrides","isConnectedToOtherSources","updateBlockBindings","useBlockBindingsUtils","updateBindings","isChecked","customName","hasUnsupportedImageAttributes","caption","helpText","InspectorControls","group","BaseControl","disabled","accessibleWhenDisabled","ResetOverridesControl","useRegistry","isOverridden","getBlockParentsByBlockName","patternClientId","overrides","BlockToolbarLastItem","ToolbarGroup","ToolbarButton","__unstableMarkLastChangeAsPersistent","newOverrides","PatternOverridesBlockControls","hasPatternOverrides","hasParentPattern","getSelectedBlockClientIds","_hasPatternOverrides","_getBlockAttributes$m","_hasParentPattern","BlockControls","PATTERN_USER_CATEGORY","EXCLUDED_PATTERN_SOURCES"],"sourceRoot":""}