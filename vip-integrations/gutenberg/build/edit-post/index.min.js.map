{"version":3,"file":"./build/edit-post/index.min.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,u/DCL9D,MAAM,EAA+BC,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAgB,aCA1D,EAA+BA,OAAW,GAAc,W,aCA9D,MAAM,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAU,OCA1D,SAASC,EAAEC,GAAG,IAAIC,EAAEC,EAAEC,EAAE,GAAG,GAAG,iBAAiBH,GAAG,iBAAiBA,EAAEG,GAAGH,OAAO,GAAG,iBAAiBA,EAAE,GAAGI,MAAMC,QAAQL,GAAG,CAAC,IAAIf,EAAEe,EAAEM,OAAO,IAAIL,EAAE,EAAEA,EAAEhB,EAAEgB,IAAID,EAAEC,KAAKC,EAAEH,EAAEC,EAAEC,OAAOE,IAAIA,GAAG,KAAKA,GAAGD,EAAE,MAAM,IAAIA,KAAKF,EAAEA,EAAEE,KAAKC,IAAIA,GAAG,KAAKA,GAAGD,GAAG,OAAOC,CAAC,CAAgI,QAAxH,WAAgB,IAAI,IAAIH,EAAEC,EAAEC,EAAE,EAAEC,EAAE,GAAGlB,EAAEsB,UAAUD,OAAOJ,EAAEjB,EAAEiB,KAAKF,EAAEO,UAAUL,MAAMD,EAAEF,EAAEC,MAAMG,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,ECAzW,EAA+BL,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAc,WCAxD,EAA+BA,OAAwB,gBCW7D,GALCU,EAAAA,EAAAA,KAACC,EAAAA,IAAG,CAACC,QAAQ,YAAYC,MAAM,6BAA4BC,UAC1DJ,EAAAA,EAAAA,KAACK,EAAAA,KAAI,CAACjC,EAAE,0DCIV,GALC4B,EAAAA,EAAAA,KAACC,EAAAA,IAAG,CAACC,QAAQ,YAAYC,MAAM,6BAA4BC,UAC1DJ,EAAAA,EAAAA,KAACK,EAAAA,KAAI,CAACjC,EAAE,2DCPJ,EAA+BkB,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAY,SCAtD,EAA+BA,OAAW,GAAO,ICAjD,EAA+BA,OAAW,GAAgB,aCA1D,EAA+BA,OAAW,GAAY,SCAtD,EAA+BA,OAAW,GAAc,WCAxD,EAA+BA,OAAW,GAAW,QCW3D,GALCU,EAAAA,EAAAA,KAACC,EAAAA,IAAG,CAACE,MAAM,6BAA6BD,QAAQ,cAAaE,UAC5DJ,EAAAA,EAAAA,KAACK,EAAAA,KAAI,CAACjC,EAAE,uxBCkGV,EApFA,UAA8B,YAAEkC,EAAW,KAAEC,EAAI,KAAEC,EAAI,YAAEC,IAAgB,IAAAC,EACxE,MAAM,qBAAEC,EAAoB,SAAEC,EAAQ,YAAEC,IAAgBC,EAAAA,EAAAA,YACrDC,IACD,MAAM,mBAAEC,GAAuBD,EAAQE,EAAAA,QACjC,gBAAEC,EAAe,YAAEC,EAAW,YAAEC,GACrCL,EAAQM,EAAAA,OACHC,EACLJ,EAAiB,OAAQ,sBAAkBK,IAAe,CAAC,EACtDC,EAAYf,GAAagB,MAAQT,IACvC,MAAO,CACNL,qBAAsBS,EAAa,kBAAmB,CACrD,OACA,sBACAG,IAEDX,SAAUO,EAAaK,GACvBX,YAAaS,EAASI,cACtB,GAEF,IAGKC,GAAgBC,EAAAA,EAAAA,oBAEtB,IAAOhB,EACN,OAAO,KAGR,IAAIiB,GAAa7B,EAAAA,EAAAA,KAAC8B,EAAAA,KAAI,CAACC,KAAK,OAAOxB,KAAOyB,IASrCnB,IACJgB,GACC7B,EAAAA,EAAAA,KAACiC,EAAAA,iBAAOC,IAAG,CACVC,UAAaR,GAVD,CACdS,OAAQ,CACPC,MAAO,KACPC,WAAY,CAAEb,KAAM,QAASc,SAAU,SAQtCC,KAAMC,EAAAA,EAAAA,IAAI,aACVC,UAAU,4CACVC,IAAM9B,KAKJF,IACJkB,EAAa,MAITtB,IACJsB,GAAa7B,EAAAA,EAAAA,KAAC8B,EAAAA,KAAI,CAACC,KAAK,OAAOxB,KAAOA,KAGvC,MAAMqC,EAAUC,EAAM,kCAAmC,CACxD,WAAYhC,IAGPiC,EACLtC,QAAAA,GACAuC,EAAAA,EAAAA,cAAc,WAAY,CACzBC,UAAWpC,EAASqC,OAGhBC,EAA0C,QAA/BxC,EAAGE,GAAUuC,QAAQC,kBAAU,IAAA1C,EAAAA,GAAI+B,EAAAA,EAAAA,IAAI,QAExD,OACCzC,EAAAA,EAAAA,KAACiC,EAAAA,iBAAOoB,IAAG,CAACC,WAAW,SAAQlD,UAC9BJ,EAAAA,EAAAA,KAACuD,EAAAA,OAAM,CACNC,uBAAqB,EACrBd,UAAYE,EACZpC,KAAOsC,EACPW,MAAQP,EACR5C,YAAcA,EAAaF,SAEzByB,KAIN,ECvGM,EAA+BvC,OAAW,GAAe,aCKlD,KAAEoE,EAAI,OAAEC,IACpBC,EAAAA,EAAAA,kDACC,gIACA,yBCIMC,WAAYC,GAAmBH,EAAQI,EAAAA,aAEzCC,EAAS,CACdC,OAAQ,CAAEC,EAAG,SACbC,wBAAyB,CAAED,EAAG,GAC9BE,MAAO,CAAEF,EAAG,EAAG5B,WAAY,CAAEb,KAAM,QAAS4C,MAAO,MAuBpD,EApBA,UAAqB,YAAE5D,IACtB,OACCT,EAAAA,EAAAA,KAAC8D,EAAc,CAAA1D,SACZA,EAAIN,YACLA,GAAU,IACTE,EAAAA,EAAAA,KAACiC,EAAAA,iBAAOoB,IAAG,CACVlB,SAAW6B,EACX1B,WAAa,CAAEb,KAAM,QAAS4C,MAAO,IAAOjE,UAE5CJ,EAAAA,EAAAA,KAACsE,EAAmB,CACnBhE,aAAW,EACXG,YAAcA,OAOrB,EC3Be,SAAS8D,IAEvB,MCOwCC,MACxC,MAAM,WAAEC,EAAU,aAAEC,IAAiB5D,EAAAA,EAAAA,YAAaC,IACjD,MAAM,YAAEI,GAAgBJ,EAAQM,EAAAA,QAC1B,eAAEsD,EAAc,uBAAEC,GACvB7D,EAAQE,EAAAA,OACHL,EAAWO,EAAayD,EAAwB,SACtD,MAAO,CACNH,WAAY7D,GAAUiE,SACtBH,aAAcC,IAAiBG,KAC/B,GACC,IAEGC,GAAkBC,EAAAA,EAAAA,WAExBC,EAAAA,EAAAA,YAAW,KACVF,EAAgBG,QACfC,SAASC,cCjBiC,4BDkB1CD,SAASC,cCzByB,uBDyBa,GAC9C,KAEHH,EAAAA,EAAAA,YAAW,KACHP,GAAkBK,EAAgBG,UAIlCT,GAKPM,EAAgBG,QAAQG,MAAMC,QAAU,GACxCP,EAAgBG,QAAQK,aAAc,OAAQb,IAL7CK,EAAgBG,QAAQG,MAAMC,QAAU,OAKmB,GAC1D,CAAEZ,EAAcD,GAAc,EDxCjCD,GACO,IACR,CGdA,MAAM,EAA+BlF,OAAW,GAAqB,kBC2BrE,SAASkG,EAAgBC,EAAY,GAAIC,GACxC,MAAMC,EAAkB,IAAKF,GAC7B,IAAM,MAAMG,KAAWF,EAAe,CACrC,MAAMG,EAAWF,EAAgBG,WAC9BC,GAASA,EAAIC,KAAOJ,EAAQI,MAEZ,IAAdH,EACJF,EAAiBE,GAAaD,EAE9BD,EAAgBM,KAAML,EAExB,CACA,OAAOD,CACR,CA6CA,MAAMO,GAAYC,EAAAA,EAAAA,iBAAiB,CAClCC,SAvEM,SAA4BC,GAAQ,EAAOC,GACjD,OAASA,EAAO7E,MACf,IAAK,2BACJ,OAAO,EACR,IAAK,2BACL,IAAK,2BACJ,OAAO,EACR,QACC,OAAO4E,EAEV,EA8DCE,UArCM,SAA2BF,EAAQ,CAAC,EAAGC,GAC7C,GACM,iCADGA,EAAO7E,KACsB,CACpC,MAAM+E,EAAW,IAAKH,GACtB,IAAM,MAAQI,EAAUhB,KAAe/G,OAAOgI,QAC7CJ,EAAOK,sBAEPH,EAAUC,GAAajB,EACtBgB,EAAUC,GACVhB,GAGF,OAAOe,CACR,CAGD,OAAOH,CACR,EAqBCO,YAXD,SAA+BP,GAAQ,EAAOC,GAC7C,MACM,2BADGA,EAAO7E,MAIT4E,CACR,IAQA,GAAeF,EAAAA,EAAAA,iBAAiB,CAC/BD,cC5FK,EAA+B5G,OAAW,GAAY,S,aCA5D,MAAM,EAA+BA,OAAW,GAAS,OCqBnD,eAAEuH,GAAmBlD,EAAQI,EAAAA,aAOtB+C,EACVC,GACF,EAAIC,eACHA,EACEC,SAAUJ,GACVK,wBAAyB,OAAQH,EAAM,EAM9BI,EACZA,IACA,EAAIH,cACHA,EAASC,SAAUJ,GAAiBO,yBAA0B,QAYnDC,EACVN,GACF,EAAIC,eACHM,IAAY,+CAAgD,CAC3DC,MAAO,MACPC,YAAa,gDAEPR,EAASC,SAAUJ,GAAiBQ,UAAWN,IAU3CU,EACZA,IACA,EAAIT,eACHM,IAAY,0CAA2C,CACtDC,MAAO,MACPC,YAAa,2CAEPR,EAASC,SAAUJ,GAAiBY,cAUhCC,EACZA,IACA,EAAIV,eACHM,IAAY,kDAAmD,CAC9DC,MAAO,MACPC,YAAa,gDAEdR,EAASC,SAAUhG,EAAAA,OAAcyG,oBAAoB,EAU1CC,EACZA,IACA,EAAIX,eACHM,IAAY,mDAAoD,CAC/DC,MAAO,MACPC,YAAa,iDAEdR,EAASC,SAAUhG,EAAAA,OAAc0G,qBAAqB,EAS3CC,EACZA,IACA,EAAIZ,eACHM,IAAY,oDAAqD,CAChEC,MAAO,MACPC,YAAa,kDAEdR,EAASC,SAAUhG,EAAAA,OAAc2G,sBAAsB,EAY5CC,EACVC,GACF,EAAId,eACHM,IAAY,wDAAyD,CACpEC,MAAO,MACPC,YAAa,sDAEdR,EAASC,SAAUhG,EAAAA,OAAc4G,yBAA0BC,EAAW,EAU3DC,GACVD,GACF,EAAId,eACHM,IAAY,uDAAwD,CACnEC,MAAO,MACPC,YAAa,qDAEdR,EAASC,SAAUhG,EAAAA,OAAc8G,wBAAyBD,EAAW,EAY1DE,GACVF,GACF,EAAId,eACHM,IAAY,iDAAkD,CAC7DC,MAAO,MACPC,YAAa,+CAEdR,EAASC,SAAUhG,EAAAA,OAAc+G,kBAAmBF,EAAW,EAQpDG,GACVC,GACF,EAAIlB,cACHA,EACEC,SAAUkB,EAAAA,OACVC,OAAQ,iBAAkBF,GASjBG,GACVC,GACF,EAAItB,eACHM,IAAY,gDAAiD,CAC5DC,MAAO,MACPC,YAAa,8CAEdR,EAASC,SAAUhG,EAAAA,OAAcoH,iBAAkBC,EAAM,EAQ9CC,GACVC,GACF,EAAIxB,eACH,MAAMyB,EAAWzB,EACfjG,OAAQ8F,GACR6B,aAAc,OAAQF,GAExBxB,EACEC,SAAUJ,GACT4B,EAAW,YAAc,WAAa,OAAQD,EAAY,EAQxD,SAASG,KAKf,OAJArB,IAAY,8DAA+D,CAC1EC,MAAO,MACPqB,KAAM,0DAEA,CAAEnH,KAAM,UAChB,CAOO,MAAMoH,GACVC,GACF,EAAI9B,eACHrD,EAAQqD,EAASC,SAAUhG,EAAAA,QAAgB4H,eAAgBC,EAAY,EAQ5DC,GACVD,GACF,EAAI9B,eACHrD,EAAQqD,EAASC,SAAUhG,EAAAA,QAAgB8H,eAAgBD,EAAY,EAQlE,SAASE,GAAkCrC,GACjD,MAAO,CACNlF,KAAM,+BACNkF,uBAEF,CAKO,MAAMsC,GACZA,IACAC,OAAUlC,WAAUjG,SAAQkG,eAC3BA,EAAU,CACTxF,KAAM,6BAIFnC,OAAO6J,SACX7J,OAAO6J,QAAQC,cAIhB,MAAMC,EAAe,IAAI/J,OAAOgK,SAC/BnE,SAASC,cAAe,uBAGnBmE,EAASF,EAAaxK,IAAK,WAC3B+B,EAAWyI,EAAaxK,IAAK,aAM7B2K,EAAOxC,EACXjG,OAAQM,EAAAA,OACRoI,sBAAuB,WAAY7I,EAAU2I,GACzCG,EAAiB,GACtBF,EAAKG,gBACF,CAAE,iBAAkBH,EAAKG,kBAE5BH,EAAKI,aAAc,CAAE,cAAeJ,EAAKI,eACzCJ,EAAKK,QAAS,CAAE,SAAUL,EAAKK,UAC/BL,EAAKM,QAAS,CAAE,cAAeN,EAAKM,SACnCC,OAAQC,SAaJC,EATkB,CACvBZ,KAF8BtI,EAAOmJ,4BAGXC,KACvB1D,GACD,IAAInH,OAAOgK,SC3TqB7C,IACvBtB,SAASC,cACrB,iCAAkCqB,uBAAgCA,MAM5DtB,SAASC,cAAe,gCAAkCqB,GDmTxC2D,CAAqB3D,OAKZ4D,QAAQ,CAAEC,EAAMC,KAChD,IAAM,MAAQ/L,EAAKa,KAAWkL,EAC7BD,EAAKE,OAAQhM,EAAKa,GAEnB,OAAOiL,CAAI,GACT,IAAIhL,OAAOgK,UACdI,EAAee,SAAS,EAAIjM,EAAKa,KAChC4K,EAASO,OAAQhM,EAAKa,KAGvB,UAEOqL,IAAU,CACfC,IAAKrL,OAAOsL,cACZC,OAAQ,OACRC,KAAMb,EACNc,OAAO,IAER9D,EAAS+D,uBACV,CAAE,MACD/D,EAASgE,uBACV,GAQK,SAASD,KACf,MAAO,CACNvJ,KAAM,2BAER,CAOO,SAASwJ,KACf,MAAO,CACNxJ,KAAM,2BAER,CASO,MAAMyJ,GACVC,GACF,EAAInE,eACHM,IACC,kEACA,CACCC,MAAO,MACP6D,QAAS,MACTxC,KAAM,mDAGR5B,EAASC,SAAUhG,EAAAA,OAAcoK,cAAeF,EAAY,EAUjDG,GACVjM,GACF,EAAI2H,eACHM,IAAY,mDAAoD,CAC/DC,MAAO,MACPC,YAAa,iDAEdR,EAASC,SAAUhG,EAAAA,OAAcqK,oBAAqBjM,EAAO,EAUlDkM,GACVC,GACF,EAAIxE,eACHM,IAAY,mDAAoD,CAC/DC,MAAO,MACPC,YAAa,iDAEdR,EAASC,SAAUhG,EAAAA,OAAcsK,oBAAqBC,EAAQ,EAQzD,SAASC,KAKf,OAJAnE,IAAY,oDAAqD,CAChEC,MAAO,MACPC,YAAa,8CAEP,CAAE/F,KAAM,UAChB,CAOO,SAASiK,KAIf,OAHApE,IAAY,wDAAyD,CACpEC,MAAO,QAED,CAAE9F,KAAM,UAChB,CAEA,IAAIkK,IAAuB,EAKpB,MAAMC,GACZA,IACA,EAAI5E,WAAUjG,SAAQkG,eAKrB,IAJsBD,EACpBjG,OAAQE,EAAAA,OACR4K,0BAGD,OAGD,GAAKF,GACJ,OAED,MAAM/K,EAAWoG,EAASjG,OAAQE,EAAAA,OAAcD,qBAC3C1B,OAAOwM,UAAUC,OAASnL,GAC9BtB,OAAOwM,UAAUE,oBAAqBpL,GAGvC+K,IAAuB,GAGvBM,EAAAA,EAAAA,WACC,kBACA,iCACA/C,MAAQM,EAAM0C,MACNA,EAAQC,YAAcpL,EAAOqL,sBAC7BnF,EAASgC,uBAChB,IAIFhC,EAAU,CACTxF,KAAM,0BACJ,EAUQ4K,GACZA,IACA,EAAIrF,eACHM,IAAY,qDAAsD,CACjEC,MAAO,MACPC,YAAa,mDAEdR,EAASC,SAAUhG,EAAAA,OAAcoL,uBAAuB,EAM7CC,GACZA,IACA,EAAItF,eACH,MAAMuF,EAAevF,EACnBjG,OAAQoH,EAAAA,OACRtJ,IAAK,iBAAkB,kBAEzBmI,EACEC,SAAUkB,EAAAA,OACVC,OAAQ,iBAAkB,kBAE5BpB,EACEC,SAAUuF,EAAAA,OACVC,iBACAF,GACG9J,EAAAA,EAAAA,IAAI,iCACJA,EAAAA,EAAAA,IAAI,8BACP,CACCuD,GAAI,+CACJvE,KAAM,WACNiL,QAAS,CACR,CACCjJ,OAAOhB,EAAAA,EAAAA,IAAI,QAEXkK,QAASA,KACR3F,EACEC,SAAUkB,EAAAA,OACVC,OACA,iBACA,iBACA,KAKN,GExhBIvB,eAAcA,IAAKlD,EAAQI,EAAAA,aAC7B6I,GAAc,GACdC,GAAe,CAAC,EASTC,IAAgBC,EAAAA,EAAAA,yBAC1BhM,GAAY,SAAAiM,EAAA,OACyC,QADzCA,EACbjM,EAAQoH,EAAAA,OAAmBtJ,IAAK,OAAQ,qBAAc,IAAAmO,EAAAA,EAAI,QAAQ,IAUvDC,IAAwBF,EAAAA,EAAAA,yBAClChM,GAAY,KACb,MAAMmM,EACLnM,EAAQ8F,IAAiBsG,2BAA4B,QACtD,MAAO,CAAE,qBAAsB,mBAAoBC,SAClDF,EACA,IAWUG,IAAwBN,EAAAA,EAAAA,yBAClChM,GAAY,KACb,MAAMmM,EACLnM,EAAQ8F,IAAiBsG,2BAA4B,QACtD,QACID,IACD,CAAE,qBAAsB,mBAAoBE,SAC7CF,EACA,IAmBSI,IAA8BP,EAAAA,EAAAA,yBACxChM,GAAY,IACNA,EAAQ8F,IAAiBsG,2BAA4B,UA+DjDI,IAAiBR,EAAAA,EAAAA,yBAA0BhM,GAAY,KACnEuG,IAAY,4CAA6C,CACxDC,MAAO,MACPC,YAAa,qCA6Bd,MAAO,IA1BiB,CAAE,aAAc,oBAAqB6C,QAC5D,CAAEmD,EAAkBC,KACnB,MAAMpO,EAAQ0B,EAAQoH,EAAAA,OAAmBtJ,IACxC,OACA4O,GAGD,MAAO,IACHD,EACH,CAAEC,GAAiBpO,EACnB,GAEF,CAAC,GAgBDqO,OAzEF,SAAmCC,EAAgBC,GAAa,IAAAC,EAE/D,MAAMC,EAAyBH,GAAgBtD,QAC9C,CAAE0D,EAAmBjG,KAAS,IAC1BiG,EACH,CAAEjG,GAAa,CACdkG,SAAS,MAGX,CAAC,GAMIN,EAASE,GAAYvD,QAAQ,CAAE0D,EAAmBjG,KACvD,MAAMmG,EAAoBF,IAAqBjG,GAC/C,MAAO,IACHiG,EACH,CAAEjG,GAAa,IACXmG,EACHC,QAAQ,GAET,GACCJ,QAAAA,EAA0B,CAAC,GAK9B,OAAuC,QAAvCD,EAAOH,QAAAA,EAAUI,SAAsB,IAAAD,EAAAA,EAAIhB,EAC5C,CAuCgBsB,CALQpN,EAAQoH,EAAAA,OAAmBtJ,IACjD,OACA,kBAEkBkC,EAAQoH,EAAAA,OAAmBtJ,IAAK,OAAQ,eAM1D,IAWK,SAASuP,GAAe/H,EAAOoH,EAAeY,GACpD/G,IAAY,2CAA4C,CACvDC,MAAO,MACPC,YAAa,qCAId,MACMnI,EADckO,GAAgBlH,GACToH,GAC3B,YAAiBlM,IAAVlC,EAAsBgP,EAAehP,CAC7C,CAOO,MAAMiP,IAAsBvB,EAAAA,EAAAA,yBAA0BhM,GAAY,KAAM,IAAAwN,EAC9E,OAC6D,QAD7DA,EACCxN,EAAQoH,EAAAA,OAAmBtJ,IAAK,OAAQ,2BAAoB,IAAA0P,EAAAA,EAC5D3B,EAAW,IAaA4B,IAAyBzB,EAAAA,EAAAA,yBACnChM,GAAY,KACbuG,IAAY,oDAAqD,CAChEC,MAAO,MACPC,YAAa,mDAEPzG,EAAQE,EAAAA,OAAcuN,4BAelBC,IAAuB1B,EAAAA,EAAAA,yBACjChM,GAAY,CAAEsF,EAAOyB,KACtBR,IAAY,kDAAmD,CAC9DC,MAAO,MACPC,YAAa,iDAEPzG,EAAQE,EAAAA,OAAcwN,qBAAsB3G,MAexC4G,IAAuB3B,EAAAA,EAAAA,yBACjChM,GAAY,CAAEsF,EAAOyB,KACtBR,IAAY,kDAAmD,CAC9DC,MAAO,MACPC,YAAa,iDAEPzG,EAAQE,EAAAA,OAAcyN,qBAAsB5G,MAexC6G,IAAsB5B,EAAAA,EAAAA,yBAChChM,GAAY,CAAEsF,EAAOyB,KACtBR,IAAY,iDAAkD,CAC7DC,MAAO,MACPC,YAAa,gDAEPzG,EAAQE,EAAAA,OAAc0N,oBAAqB7G,MAcvC8G,IAAgB7B,EAAAA,EAAAA,yBAC1BhM,GAAY,CAAEsF,EAAOwI,KACtBvH,IAAY,2CAA4C,CACvDC,MAAO,MACPC,YAAa,+CAEJzG,EAAQ8F,IAAiB+H,cAAeC,MAYvCC,IAAkB/B,EAAAA,EAAAA,yBAC5BhM,GAAY,CAAEsF,EAAO6B,MACZnH,EAAQoH,EAAAA,OAAmBtJ,IAAK,iBAAkBqJ,KAajD6G,IAAqBhC,EAAAA,EAAAA,yBAC/BhM,GAAY,CAAEsF,EAAOmC,IACfzH,EAAQ8F,IAAiB6B,aAAc,OAAQF,KAW3C0B,IAA4B8E,EAAAA,EAAAA,iBACtC3I,GACM3H,OAAOuQ,KAAM5I,EAAMH,UAAUK,WAAYwD,QAAUtD,GACzDyI,GAAyB7I,EAAOI,OAGhCJ,GAAW,CAAEA,EAAMH,UAAUK,aAWnB4I,IAA2BpC,EAAAA,EAAAA,yBACrChM,GAAY,CAAEsF,EAAOI,IAErByI,GAAyB7I,EAAOI,IAChC2I,GAAyB/I,EAAOI,IAAY4I,MAAM,EAAIrJ,QAC9CjF,EAAQE,EAAAA,OAAcyN,qBAC5B,YAAa1I,SAgBX,SAASkJ,GAAyB7I,EAAOI,GAC/C,MAAMP,EAAYkJ,GAAyB/I,EAAOI,GAClD,QAAUP,GAAkC,IAArBA,EAAUpG,MAClC,CAUO,SAASsP,GAAyB/I,EAAOI,GAC/C,OAAOJ,EAAMH,UAAUK,UAAWE,EACnC,CASO,MAAM6I,IAAkBN,EAAAA,EAAAA,iBAC5B3I,GACM3H,OAAO6Q,OAAQlJ,EAAMH,UAAUK,WAAYiJ,SAEjDnJ,GAAW,CAAEA,EAAMH,UAAUK,aAUzB,SAAS6F,GAAc/F,GAC7B,OAAO6D,GAA2B7D,GAAQvG,OAAS,CACpD,CASO,SAAS2P,GAAmBpJ,GAClC,OAAOA,EAAMH,UAAUE,QACxB,CAWO,MAAMsJ,IAAqC3C,EAAAA,EAAAA,yBAC/ChM,GAAY,KACbuG,IACC,gEACA,CACCC,MAAO,MACP6D,QAAS,MACT5D,YAAa,0CAGRzG,EAAQE,EAAAA,OAAc0O,mBAalBC,IAAmB7C,EAAAA,EAAAA,yBAA0BhM,GAAY,KACrEuG,IAAY,8CAA+C,CAC1DC,MAAO,MACPC,YAAa,6CAEPzG,EAAQE,EAAAA,OAAc2O,sBAYjBC,IAAkC9C,EAAAA,EAAAA,yBAC5ChM,GAAY,KACbuG,IACC,6DACA,CACCC,MAAO,MACP6D,QAAS,QAGJzH,EAAQ5C,EAAQE,EAAAA,QAAgB6O,iBAW5BC,IAAmBhD,EAAAA,EAAAA,yBAA0BhM,GAAY,KACrEuG,IAAY,8CAA+C,CAC1DC,MAAO,MACPC,YAAa,6CAEPzG,EAAQE,EAAAA,OAAc8O,sBAQjBC,IAAoBjD,EAAAA,EAAAA,yBAA0BhM,GAAY,KACtEuG,IAAY,+CAAgD,CAC3DC,MAAO,MACPC,YAAa,6CAEwC,gBAA/CzG,EAAQE,EAAAA,OAAcD,wBAUvB,SAASiP,GAAyB5J,GACxC,OAAOA,EAAMH,UAAUU,WACxB,CAOO,MAAMsJ,IAAwBnD,EAAAA,EAAAA,yBAClChM,GAAY,KACb,MAAQiF,GAAIuD,EAAQ9H,KAAMb,GACzBG,EAAQE,EAAAA,OAAc0D,iBACjBwL,EAAaxM,EAAQ5C,EAAQM,EAAAA,QAAc+O,cAChDxP,EACA2I,GAED,GAAO4G,EAGP,OAAOpP,EAAQM,EAAAA,OAAYoI,sBAC1B,WACA,cACA0G,EACA,ICriBUE,IAAQC,EAAAA,EAAAA,kBRfK,iBQeyB,CAClDC,QAAO,EACP7D,QAAO,EACP8D,UAASA,KAEVC,EAAAA,EAAAA,UAAUJ,ICcV,SAvBA,WACC,MAAM,qBAAE/D,IAAyBoE,EAAAA,EAAAA,aAAaC,KACxC,iBAAEC,IAAqBF,EAAAA,EAAAA,aAAaG,EAAAA,OAkB1C,OAhBA5L,EAAAA,EAAAA,YAAW,KACV2L,EAAkB,CACjB7J,KAAM,mCACN+J,SAAU,SACVC,aAAatO,EAAAA,EAAAA,IAAI,sCACjBuO,eAAgB,CACfC,SAAU,YACVC,UAAW,MAEV,GACD,KAEHC,EAAAA,EAAAA,aAAa,oCAAoC,KAChD7E,GAAsB,IAGhB,IACR,ECrBe,SAAS8E,KACvB,MAAM,SAAEC,IAAaX,EAAAA,EAAAA,aAAazP,EAAAA,QAC1BqQ,EAAUC,IAAgBC,EAAAA,EAAAA,eAAUjQ,IACpCkQ,EAAOC,IAAaF,EAAAA,EAAAA,UAAU,KAEhC,SAAE5Q,EAAQ,UAAE+Q,IAAc7Q,EAAAA,EAAAA,YAAaC,IAC5C,MAAM,uBAAE6D,EAAsB,eAAEgN,GAC/B7Q,EAAQE,EAAAA,OACT,MAAO,CACNL,SAAUgE,EAAwB,QAClC+M,UAAWC,IACX,GACC,KACKC,EAAaC,IAAmBN,EAAAA,EAAAA,WACvC,IAAMG,GAA0B,aAAb/Q,IAGpB,MAAkB,aAAbA,GAA6B+Q,GAKjC3R,EAAAA,EAAAA,KAAA+R,EAAAA,SAAA,CAAA3R,SACGyR,IACD7R,EAAAA,EAAAA,KAACgS,EAAAA,MAAK,CACLP,OAAQhP,EAAAA,EAAAA,IAAI,kBACZwP,eAAiBA,KAChBH,GAAgB,EAAO,EAExBI,iBAAiB,4CAA2C9R,UAE5DJ,EAAAA,EAAAA,KAAA,QACCmS,SAAaC,IACZA,EAAMC,iBACNP,GAAgB,GAChBT,EAAU,CACTI,QACAa,KAAM,CACLC,uBAAwBjB,IAEvB,EACDlR,UAEHoS,EAAAA,EAAAA,MAACC,EAAAA,qBAAM,CAACC,QAAQ,IAAGtS,SAAA,EAClBJ,EAAAA,EAAAA,KAAC2S,EAAAA,YAAW,CACXlP,OAAQhB,EAAAA,EAAAA,IAAI,QACZpD,MAAQoS,EACRmB,SAAWlB,EACXmB,aAAcpQ,EAAAA,EAAAA,IAAI,cAClBC,UAAU,oCACVoQ,yBAAuB,EACvBtP,uBAAqB,KAEtBxD,EAAAA,EAAAA,KAAC+S,EAAAA,cAAa,CACbD,yBAAuB,EACvBrP,OAAQuP,EAAAA,EAAAA,IAAI,SAAU,sBACtBC,MAAOxQ,EAAAA,EAAAA,IACN,gDAEDyQ,SAAY5B,EACZsB,SAAWA,KACVrB,EACGD,OAAwB/P,EAAb,WACb,KAGHvB,EAAAA,EAAAA,KAACmT,EAAAA,qBAAM,CAACC,QAAQ,QAAOhT,UACtBJ,EAAAA,EAAAA,KAACuD,EAAAA,OAAM,CACNC,uBAAqB,EACrB6P,QAAQ,UACR5R,KAAK,SACL6R,UAAa7B,EACb8B,wBAAsB,EAAAnT,UAEpBqC,EAAAA,EAAAA,IAAI,uBAxDN,IAiET,CChFe,SAAS+Q,KACvB,MAAQC,EAAWC,IAAiBlC,EAAAA,EAAAA,UAAU,OACxC,OAAEjI,EAAM,WAAEoK,IAAe7S,EAAAA,EAAAA,YAAaC,IAC3C,MAAM,eAAE4D,GAAmB5D,EAAQE,EAAAA,OAC7BuI,EAAO7E,IACb,IAAI,GAAEqB,EAAE,OAAE4N,EAAM,KAAEnS,GAAS+H,EAQ3B,MAPmB,CAAE,cAAe,oBAAqB4D,SACxD3L,KAGAuE,EAAKwD,EAAKqK,OAGJ,CACNtK,OAAQvD,EACR2N,WAAYC,EACZ,GACC,IAaH,OAXA3O,EAAAA,EAAAA,YAAW,KACLsE,GAAUA,IAAWkK,GAA4B,eAAfE,IACtCrU,OAAOwU,QAAQC,aACd,CAAE/N,GAAIuD,GACN,QAAUA,EA3BP,SAAyBA,GAC/B,OAAOxG,EAAAA,EAAAA,cAAc,WAAY,CAAEyG,KAAMD,EAAQjD,OAAQ,QAC1D,CA0BI0N,CAAgBzK,IAEjBmK,EAAcnK,GACf,GACE,CAAEA,EAAQoK,EAAYF,IAElB,IACR,CCgBA,SA1CA,UAAwB,SAAEhN,IACzB,MAAMwN,GAAYjP,EAAAA,EAAAA,QAAQ,MACpBkP,GAAUlP,EAAAA,EAAAA,QAAQ,OAExBC,EAAAA,EAAAA,YAAW,KACViP,EAAQhP,QAAUC,SAASC,cAC1B,qBAAuBqB,GAGnByN,EAAQhP,SACZ+O,EAAU/O,QAAQiP,YAAaD,EAAQhP,SAGjC,KACDgP,EAAQhP,SACZC,SACEC,cAAe,cACf+O,YAAaD,EAAQhP,QACxB,IAEC,CAAEuB,IAEL,MAAML,GAAWtF,EAAAA,EAAAA,YAAaC,GACtBA,EAAQ4P,IAAgBlB,qBAC7B,IAEG7M,EAAUC,EAAM,4BAA6B,MAAO4D,IAAa,CACtE,aAAcL,IAGf,OACCoM,EAAAA,EAAAA,MAAA,OAAK9P,UAAYE,EAASxC,SAAA,CACvBgG,IAAYpG,EAAAA,EAAAA,KAACoU,EAAAA,QAAO,KACtBpU,EAAAA,EAAAA,KAAA,OACC0C,UAAU,uCACV2R,IAAMJ,KAEPjU,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,uCAGlB,ECzDe,SAAS4R,IAAmB,GAAEtO,IAC5C,MAAMuO,GAAYzT,EAAAA,EAAAA,YACfC,GACMA,EAAQE,EAAAA,OAAcyN,qBAC5B,YAAa1I,MAGf,CAAEA,IAgBH,OAbAf,EAAAA,EAAAA,YAAW,KACV,MAAMuP,EAAUrP,SAASsP,eAAgBzO,GAClCwO,IAIFD,EACJC,EAAQE,UAAUC,OAAQ,aAE1BH,EAAQE,UAAUE,IAAK,aACxB,GACE,CAAE5O,EAAIuO,IAEF,IACR,CCnBe,SAASM,IAAW,SAAEpO,IACpC,MAAMP,GAAYpF,EAAAA,EAAAA,YACfC,GACDA,EAAQ4P,IAAgBvB,wBAAyB3I,IAClD,CAAEA,IAEH,OACC+L,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,EACK8F,QAAAA,EAAa,IAAKiE,KAAK,EAAInE,SAC9BhG,EAAAA,EAAAA,KAACsU,GAAiB,CAAYtO,GAAKA,GAAVA,MAE1BhG,EAAAA,EAAAA,KAAC8U,GAAa,CAACrO,SAAWA,MAG7B,CC1BA,MAAM,GAA+BnH,OAAW,GAAY,SCqC5D,GA5BA,WACC,MAAMqL,GAAM7J,EAAAA,EAAAA,YAAaC,IACxB,MAAM,QAAEgU,GAAYhU,EAAQM,EAAAA,OACtB2T,GAAajS,EAAAA,EAAAA,cAAc,WAAY,CAC5CC,UAAW,aAENiS,GAAclS,EAAAA,EAAAA,cAAc,kBAAmB,CACpDmS,EAAG,aAMJ,OAAOH,EAAS,SAAU,CACzBI,KAAM,WACNpO,KAAM,gBAEJkO,EACAD,CAAU,GACX,IAEH,OACChV,EAAAA,EAAAA,KAACoV,EAAAA,SAAQ,CAACC,KAAK,WAAW7U,KAAOmK,EAAKvK,UACnCqC,EAAAA,EAAAA,IAAI,oBAGT,EC3Be,SAAS6S,KACvB,MAAMtF,GAAoBlP,EAAAA,EAAAA,YACvBC,GAC8C,gBAA/CA,EAAQE,EAAAA,OAAcD,sBACvB,IAGD,OACChB,EAAAA,EAAAA,KAACuV,EAAAA,yBAAwB,CACxBC,MAAM,iBACNzO,KAAOiJ,EAAoB,uBAAyB,eACpDvM,OAAQhB,EAAAA,EAAAA,IAAI,kBAGf,CCNA,MAAM,qBAAEgT,IAAyB9R,EAAQ+R,EAAAA,aAelC,SAASC,IAA0B,WAAEC,IAC3C,MAAQC,EAAaC,IAAmBtE,EAAAA,EAAAA,WAAU,GAClD,OACCgB,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,EACCJ,EAAAA,EAAAA,KAAA,KAAG0C,UAAU,kEAAiEtC,UAC3EqC,EAAAA,EAAAA,IACD,mGAGFzC,EAAAA,EAAAA,KAACuD,EAAAA,OAAM,CACNC,uBAAqB,EACrB6P,QAAQ,YACR0C,OAASF,EACTtC,wBAAsB,EACtBD,SAAWuC,EACXlJ,QAAUA,KACTmJ,GAAgB,GA7BrB,WACC,MAAME,EAAmB7Q,SAASsP,eACjC,6BAIDuB,EACE5Q,cAAe,6BACfG,aAAc,SAAS0Q,EAAAA,EAAAA,uBAAuB3W,OAAOmH,SAASjG,OAEhEwV,EAAiBE,QAClB,CAmBKC,EAAwB,EACtB/V,SAEDwV,GACCnT,EAAAA,EAAAA,IAAI,uBACJA,EAAAA,EAAAA,IAAI,0BAIX,CAEe,SAAS2T,IAA0B,MAAE3S,IACnD,MAAM4S,GAAyBvV,EAAAA,EAAAA,YAAaC,KACjCA,EAAQE,EAAAA,OAAcqV,oBAAoBC,oBAClD,KACKC,EAAWC,IAAiBjF,EAAAA,EAAAA,UAAU6E,GAE9C,OACCrW,EAAAA,EAAAA,KAACyV,GAAoB,CACpBhS,MAAQA,EACR+S,UAAYA,EACZ5D,SAAW6D,EAAcrW,SAEvBoW,IAAcH,IACfrW,EAAAA,EAAAA,KAAC2V,GAAwB,CAACC,WAAaY,KAI3C,CChEA,MAAQf,qBAAoBA,IAAK9R,EAAQ+R,EAAAA,aAE1B,SAASgB,GAAmBC,GAC1C,MAAM,yBAAE9O,IAA6B6I,EAAAA,EAAAA,aAAazP,EAAAA,QAC5C,UAAEuV,EAAS,UAAEI,IAAc9V,EAAAA,EAAAA,YAC9BC,IACD,MAAM,qBAAE2N,EAAoB,qBAAED,GAC7B1N,EAAQE,EAAAA,OACT,MAAO,CACNuV,UAAW9H,EAAsBiI,EAAM7O,WACvC8O,UAAWnI,EAAsBkI,EAAM7O,WACvC,GAEF,CAAE6O,EAAM7O,YAGT,OAAK8O,EACG,MAIP5W,EAAAA,EAAAA,KAACyV,GAAoB,CACpBe,UAAYA,EACZ5D,SAAWA,IAAM/K,EAA0B8O,EAAM7O,cAC5C6O,GAGR,CCvBA,MAAM,wBAAEE,IAA4BlT,EAAQ+R,EAAAA,aAgC5C,IAAeoB,EAAAA,EAAAA,aAAc/V,IAC5B,MAAM,kBAAEuV,GAAsBvV,EAAQE,EAAAA,QAChC,gBAAEqO,GAAoBvO,EAAQ4P,IAEpC,MAAO,CAENoG,+BAC4CxV,IAA3C+U,IAAoBC,mBACrBrQ,UAAWoJ,IACX,GATF,EA9BO,UAA2B,0BACjCyH,EAAyB,UACzB7Q,KACG8Q,IAGH,MAAMC,EAAsB/Q,EAAU6D,QACrC,EAAI/D,QAAiB,eAAPA,IAGf,OAAO+Q,GAA4D,IAA/BE,EAAoBnX,QAKvD0S,EAAAA,EAAAA,MAACqE,GAAuB,IAAMG,EAAY5W,SAAA,CACvC2W,IACD/W,EAAAA,EAAAA,KAACoW,GAAwB,CAAC3S,OAAQhB,EAAAA,EAAAA,IAAI,mBAErCwU,EAAoB9M,KAAK,EAAInE,KAAIyL,YAClCzR,EAAAA,EAAAA,KAAC0W,GAAiB,CAEjBjT,MAAQgO,EACR3J,UAAY,YAAa9B,KAFnBA,QAVF,IAiBT,KChCM,wBAAEkR,IAA4BvT,EAAQ+R,EAAAA,cACtC,iBAAEyB,IAAqBxT,EAAQI,EAAAA,aAEtB,SAASqT,KACvB,MAAMC,EAAgB,CACrBC,SAAStX,EAAAA,EAAAA,KAACuX,GAAgB,CAAC9F,OAAQhP,EAAAA,EAAAA,IAAI,cACvC+U,YACCxX,EAAAA,EAAAA,KAACkX,GAAuB,CACvB1B,MAAM,iBACNiC,YAAY,cACZxE,MAAOxQ,EAAAA,EAAAA,IAAI,yCACXgB,OAAQhB,EAAAA,EAAAA,IAAI,uBAKf,OAAOzC,EAAAA,EAAAA,KAACmX,GAAgB,CAACE,cAAgBA,GAC1C,CCdA,MAAM,mBAAEK,GAAkB,kBAAEC,IAAsBhU,EAAQI,EAAAA,aA+B1D,GA7BiB6T,KAChB,MAAMC,GAAkBC,EAAAA,EAAAA,kBAAkB,SAE1C,OACCtF,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,CACGyX,IACD7X,EAAAA,EAAAA,KAAC2X,GAAiB,CAAAvX,UACjBJ,EAAAA,EAAAA,KAACuV,EAAAA,yBAAwB,CACxBC,MAAM,iBACNzO,KAAK,iBACLtD,OAAQhB,EAAAA,EAAAA,IAAI,mBACZsV,MAAOtV,EAAAA,EAAAA,IAAI,0CACXuV,kBAAmBvV,EAAAA,EAAAA,IAAI,8BACvBwV,oBAAqBxV,EAAAA,EAAAA,IACpB,gCAEDyV,SAAWC,GAAAA,gBAAgBC,UAAW,UAIzC5F,EAAAA,EAAAA,MAACkF,GAAkB,CAAAtX,SAAA,EAClBJ,EAAAA,EAAAA,KAACqY,GAAsB,KACvBrY,EAAAA,EAAAA,KAACsV,GAAoB,QAEtBtV,EAAAA,EAAAA,KAACoX,GAAwB,MACvB,EC5CU,SAASkB,IAAmB,eAAEC,EAAc,YAAEC,IAC5D,OACChG,EAAAA,EAAAA,MAAA,WAAS9P,UAAU,iCAAgCtC,SAAA,EAClDJ,EAAAA,EAAAA,KAAA,UACCyY,OAASF,EACTG,MAAM,sCAEP1Y,EAAAA,EAAAA,KAAA,OAAK2C,IAAM6V,EAAcG,MAAM,MAAMC,OAAO,MAAMpW,IAAI,OAGzD,CCIe,SAASqW,KACvB,MAAM,cAAE5Q,IAAkByI,EAAAA,EAAAA,aAAaC,IAEvC,OACC3Q,EAAAA,EAAAA,KAAC8Y,EAAAA,MAAK,CACLpW,UAAU,0BACVqW,cAAetW,EAAAA,EAAAA,IAAI,yBACnBuW,kBAAmBvW,EAAAA,EAAAA,IAAI,eACvBwW,SAAWA,IAAMhR,EAAe,gBAChCiR,MAAQ,CACP,CACCC,OACCnZ,EAAAA,EAAAA,KAACsY,GAAiB,CACjBC,eAAe,yDACfC,YAAY,2DAGdY,SACC5G,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,EACCJ,EAAAA,EAAAA,KAAA,MAAI0C,UAAU,mCAAkCtC,UAC7CqC,EAAAA,EAAAA,IAAI,4BAEPzC,EAAAA,EAAAA,KAAA,KAAG0C,UAAU,gCAA+BtC,UACzCqC,EAAAA,EAAAA,IACD,iHAML,CACC0W,OACCnZ,EAAAA,EAAAA,KAACsY,GAAiB,CACjBC,eAAe,yDACfC,YAAY,2DAGdY,SACC5G,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,EACCJ,EAAAA,EAAAA,KAAA,MAAI0C,UAAU,mCAAkCtC,UAC7CqC,EAAAA,EAAAA,IAAI,2BAEPzC,EAAAA,EAAAA,KAAA,KAAG0C,UAAU,gCAA+BtC,UACzCqC,EAAAA,EAAAA,IACD,oLAML,CACC0W,OACCnZ,EAAAA,EAAAA,KAACsY,GAAiB,CACjBC,eAAe,0DACfC,YAAY,4DAGdY,SACC5G,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,EACCJ,EAAAA,EAAAA,KAAA,MAAI0C,UAAU,mCAAkCtC,UAC7CqC,EAAAA,EAAAA,IAAI,yBAEPzC,EAAAA,EAAAA,KAAA,KAAG0C,UAAU,gCAA+BtC,UACzCiZ,EAAAA,EAAAA,2BACD5W,EAAAA,EAAAA,IACC,iIAED,CACC6W,mBACCtZ,EAAAA,EAAAA,KAAA,OACCwC,KAAMC,EAAAA,EAAAA,IAAI,YACVE,IAAI,sRASZ,CACCwW,OACCnZ,EAAAA,EAAAA,KAACsY,GAAiB,CACjBC,eAAe,gEACfC,YAAY,kEAGdY,SACC5G,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,EACCJ,EAAAA,EAAAA,KAAA,MAAI0C,UAAU,mCAAkCtC,UAC7CqC,EAAAA,EAAAA,IAAI,iBAEPzC,EAAAA,EAAAA,KAAA,KAAG0C,UAAU,gCAA+BtC,UACzCiZ,EAAAA,EAAAA,2BACD5W,EAAAA,EAAAA,IACC,+FAED,CACCpE,GACC2B,EAAAA,EAAAA,KAACuZ,EAAAA,aAAY,CACZ/Y,MAAOiC,EAAAA,EAAAA,IACN,mFAab,CCnHe,SAAS+W,KACvB,MAAM,cAAEvR,IAAkByI,EAAAA,EAAAA,aAAaC,IAEvC,OACC3Q,EAAAA,EAAAA,KAAC8Y,EAAAA,MAAK,CACLpW,UAAU,8BACVqW,cAAetW,EAAAA,EAAAA,IAAI,kCACnBuW,kBAAmBvW,EAAAA,EAAAA,IAAI,eACvBwW,SAAWA,IAAMhR,EAAe,wBAChCiR,MAAQ,CACP,CACCC,OACCnZ,EAAAA,EAAAA,KAACsY,GAAiB,CACjBC,eAAe,kEACfC,YAAY,oEAGdY,SACC5G,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,EACCJ,EAAAA,EAAAA,KAAA,MAAI0C,UAAU,mCAAkCtC,UAC7CqC,EAAAA,EAAAA,IAAI,qCAEPzC,EAAAA,EAAAA,KAAA,KAAG0C,UAAU,gCAA+BtC,UACzCqC,EAAAA,EAAAA,IACD,yJAST,CClCe,SAASgX,IAAc,SAAE7Y,IACvC,MAAM,SAAE8Y,EAAQ,kBAAE1J,IAAsBlP,EAAAA,EAAAA,YACrCC,IACD,MAAM,gBAAE+N,GAAoB/N,EAAQ4P,IAC9BgJ,EAAkC,gBAAb/Y,EAK3B,MAAO,CACN8Y,SAAU5K,EALK6K,EACb,uBACA,gBAIF3J,kBAAmB2J,EACnB,GAEF,CAAE/Y,IAGH,OAAO8Y,EAIA1J,GACNhQ,EAAAA,EAAAA,KAACwZ,GAAoB,KAErBxZ,EAAAA,EAAAA,KAAC6Y,GAAmB,IANb,IAQT,CCjCA,MAMA,IALC7Y,EAAAA,EAAAA,KAACC,EAAAA,IAAG,CAACE,MAAM,6BAA6BD,QAAQ,YAAWE,UAC1DJ,EAAAA,EAAAA,KAACK,EAAAA,KAAI,CAACjC,EAAE,8NCmEJ,gBAAEwb,IAAoBjW,EAAQkW,EAAAA,cAC9B,kBAAEC,IAAsBnW,EAAQoW,EAAAA,cAChC,OAAEC,GAAM,eAAEC,GAAc,gBAAEC,IAAoBvW,EAAQI,EAAAA,cACtD,uBAAEoW,IAA2BxW,EAAQyW,EAAAA,aACrCC,GAAoB,CACzB,cACA,mBACA,WACA,iBAoED,SAASC,IAAe,SAAEC,IACzB,MAAQ/O,EAAQgP,EAAYC,IAAkB3Z,EAAAA,EAAAA,YAAaC,IAC1D,MAAM,IAAElC,GAAQkC,EAAQoH,EAAAA,QAClB,yBAAEgH,GAA6BpO,EAAQ4P,IAC7C,MAAO,CACN9R,EAAK,iBAAkB,uBACvBA,EAAK,iBAAkB,2BACvBsQ,EAA0B,WACzBA,EAA0B,aAC1BA,EAA0B,QAC3B,GACC,KACKuL,IAAKC,IAAkBjK,EAAAA,EAAAA,aAAavI,EAAAA,OACtCyS,GAAmB5V,EAAAA,EAAAA,UACnB6V,GAAUC,EAAAA,EAAAA,eAAe,yBAEvB,IAAEC,EAAG,IAAEC,GAAOC,IAAyBzJ,EAAAA,EAAAA,WAAU,KAAM,CAAI,KAI7D0J,GAAwBC,EAAAA,EAAAA,eAAgBC,IAC7C,MAAMnH,EAAYmH,EAAKC,QACtB,0CAED,IAAOpH,EACN,OAED,MAAMqH,EAAcrH,EAAUsH,iBAC7B,oCAEKC,EAAevH,EAAU7O,cAC9B,yCAWKqW,EAAW,IAAInc,OAAOoc,gBATFC,KAEzB,IAAIC,EADe3H,EAAU4H,aAE7B,IAAM,MAAMrH,KAAW8G,EACtBM,GAAWpH,EAAQqH,aAEpB,MAAMC,EAAUN,EAAaK,aAC7BZ,EAAsB,CAAEF,IAAKe,EAASd,IAAKY,GAAW,IAGvDH,EAASM,QAAS9H,GAClB,IAAM,MAAMO,KAAW8G,EACtBG,EAASM,QAASvH,GAEnB,MAAO,IAAMiH,EAASO,YAAY,GAChC,IAEGC,GAAejX,EAAAA,EAAAA,UACfkX,GAAkBC,EAAAA,EAAAA,UAEhBC,EAAaC,IAAmB7K,EAAAA,EAAAA,WAAU,GAC5C8K,EAAcA,CAAEC,EAAiBC,EAAcC,KACpD,MAAMC,EAAaC,KAAK5B,IAAKC,EAAK2B,KAAK3B,IAAKD,EAAKwB,IAC5CC,EACJ7B,EACC,iBACA,0BACA+B,GAGDT,EAAa/W,QAAQ0X,aAAeC,EAAiBH,GAEjDD,GACJ7B,EAAiB1V,QAAQ4X,WAAY,CACpClE,OAAQ8D,EAKR/D,MAAO,QAET,EAGD,IAAO8B,EACN,OAGD,MAAMsC,GACLvK,EAAAA,EAAAA,MAAA,OACC9P,UAAYG,EAEX,+BACE0X,GAAY,oCAEftW,QAAWsW,GAAYM,IAAarP,EAAQpL,SAAA,EAE5CJ,EAAAA,EAAAA,KAAC6U,GAAS,CAACpO,SAAS,YACpBzG,EAAAA,EAAAA,KAAC6U,GAAS,CAACpO,SAAS,gBAItB,GAAK8T,EACJ,OAAOwC,EAGR,MAAMC,OAA8Bzb,IAAfiZ,EACrB,IAAIyC,EAAU,WACD1b,IAARyZ,IAEJiC,EAAUD,GAAgBZ,EAAcpB,EAAM,EAAIA,GAGnD,MAAM6B,EAAoBjE,GACzB+D,KAAKO,OAAWtE,EAASmC,IAAUC,EAAMD,GAAU,KAC9CoC,OACG5b,IAARyZ,GAAqBgC,EAAe,GAAKH,EAAiBrC,GAiBrD9X,EAAY,4BACZ0a,GAAY3a,EAAAA,EAAAA,IAAI,cACtB,IAAI4a,EAAMC,EAsEV,OArEKzC,GACJwC,EAAOnD,GACPoD,EAAY,CACX5a,UAAWG,EAAMH,EAAW,qBAG7B2a,EAAOE,EAAAA,aACPD,EAAgE,CAC/DE,GAAItD,GACJ7F,IAAKuG,EACLlY,UAAWG,EAAMH,EAAW,gBAC5B+a,YAAa,CAAE7E,OAAQ4B,GACvBkD,UAAW3C,EACX4C,UAAWV,EACXW,OAAQ,CACPC,KAAK,EACLC,OAAO,EACPC,QAAQ,EACRC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,aAAa,EACbC,YAAY,GAEbC,cAAe,CAAER,IAAK,wCACtBS,gBAAiB,CAChBT,KACCrL,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAA3R,SAAA,EACCJ,EAAAA,EAAAA,KAACue,EAAAA,QAAO,CAACC,MAAO/b,EAAAA,EAAAA,IAAI,kBAAoBrC,UACvCJ,EAAAA,EAAAA,KAAA,UACCqU,IAAM4H,EACN5G,KAAK,YACL,gBAAgB8H,EAChB,cAAa1a,EAAAA,EAAAA,IAAI,kBACjB,mBAAmByZ,EACnBuC,UAhDsBrM,IAC5B,MAAMsM,EAAQ,CAAEC,QAAS,GAAIC,WAAY,IAAMxM,EAAM5T,KACrD,GAAKkgB,EAAQ,CACZ,MAAMG,EAAOjE,EAAiB1V,QAAQ4Z,UAChCC,EAAa/B,EAAe6B,EAAKhD,aAAerB,EAEtD8B,EADmBoC,EAAQK,GACF,GAAM,GAC/B3M,EAAMC,gBACP,QA2CIrS,EAAAA,EAAAA,KAACgf,EAAAA,eAAc,CAAChZ,GAAKkW,EAAiB9b,UACnCqC,EAAAA,EAAAA,IACD,kEASLwc,cAAeA,EAAIC,YAAWC,aACxBlD,EAAa/W,QAAQka,cAAcC,SAAUF,IACjDA,EAAOG,kBAAmBJ,EAC3B,EAEDK,cAAeA,CAAEnN,EAAOoN,EAAWC,KAC7BzC,IAGJV,EAAamD,EAAW5D,cAAc,GAAO,GAC7CQ,GAAgB,GACjB,EAEDqD,SAAUA,IACTpD,EAAa1B,EAAiB1V,QAAQmB,MAAMuS,QAC7C+G,aAAcA,IACbrD,EAAa1B,EAAiB1V,QAAQmB,MAAMuS,QAAQ,MAKtDpG,EAAAA,EAAAA,MAAC6K,EAAI,CAAC,aAAaD,KAAiBE,EAASld,SAAA,CAC1Cya,GACDrI,EAAAA,EAAAA,MAAA,UACC,gBAAgBhH,EAChB9I,UAAU,uCACViK,QA7FWvE,IACduS,EAAe,iBAAkB,uBAAyBnP,GA4FrCpL,SAAA,CAEhBgd,GACFpd,EAAAA,EAAAA,KAAC8B,EAAAA,KAAI,CAACvB,KAAOiL,EAASoU,EAAYC,QAGnC7f,EAAAA,EAAAA,KAAA,QAAMqU,IAAM6G,IAEX6B,IAGL,CAkRA,SAhRA,UACCxT,OAAQuW,EACRlf,SAAUmf,EAAe,SACzBC,EAAQ,aACRC,KCzWc,WACd,MAAM,aAAE1T,IAAiBzL,EAAAA,EAAAA,YAAaC,IACrC,MAAM,IAAElC,GAAQkC,EAAQoH,EAAAA,OAExB,MAAO,CACNoE,aAAc1N,EAAK,iBAAkB,kBACrC,GACC,KACG,OAAEuJ,IAAWsI,EAAAA,EAAAA,aAAavI,EAAAA,QAC1B,iBAAEsE,IAAqBiE,EAAAA,EAAAA,aAAalE,EAAAA,QAE1C0T,EAAAA,EAAAA,YAAY,CACXnZ,KAAM,8BACNtD,MAAO8I,GACJ9J,EAAAA,EAAAA,IAAI,oBACJA,EAAAA,EAAAA,IAAI,oBACPlC,KAAM4f,GACNC,SAAUA,EAAIC,YACbjY,EAAQ,iBAAkB,kBAC1BiY,IACA5T,EACCF,GAAe9J,EAAAA,EAAAA,IAAI,oBAAsBA,EAAAA,EAAAA,IAAI,kBAC7C,CACCuD,GAAI,+CACJvE,KAAM,WACNiL,QAAS,CACR,CACCjJ,OAAOhB,EAAAA,EAAAA,IAAI,QACXkK,QAASA,KACRvE,EAAQ,iBAAkB,iBAAkB,KAKhD,GAGJ,CDsUCkY,GACA,MAAMC,GEtWCzf,EAAAA,EAAAA,YAAaC,IACnB,MAAM,kBAAEuV,EAAiB,mBAAEtV,EAAkB,cAAE2O,GAC9C5O,EAAQE,EAAAA,OACT,OAKEqV,IAAoBkK,6BAID,YAApB7Q,KACA,CAAE,cAAe,YAAavC,SAAUpM,MACxC2C,EAAQ5C,EAAQ0f,EAAAA,QAAqBC,aAGrC3f,EAAQ4f,EAAAA,OACNC,gBACAC,OAASpf,GAAUA,EAAKqf,YAAc,GAAG,GAE1C,KFkVG,kBAAEC,IAAsBrQ,EAAAA,EAAAA,aAAalE,EAAAA,QAE1CwU,aAAezX,OAAQ0X,EAAergB,SAAUsgB,GAAiB,yBACjEC,EAAwB,iCACxBC,GGrWa,SACdtB,EACAC,EACAsB,GAEA,MAAQC,EAAara,IAAasa,EAAAA,EAAAA,aACjC,CAAEC,GAAgB/f,OAAM+H,OAAMiY,2BACf,SAAThgB,EACG,IAAK+f,EAAc,CAAEhY,OAAMiY,0BAErB,QAAThgB,GAEC+f,EAAa1hB,OAAS,EACnB0hB,EAAaE,MAAO,GAAI,GAG1BF,GAER,CACC,CACChY,KAAM,CAAED,OAAQuW,EAAelf,SAAUmf,OAKtC,KAAEvW,EAAI,sBAAEiY,GACbH,EAAaA,EAAYxhB,OAAS,IAE7B,iBAAE6hB,IAAqB7gB,EAAAA,EAAAA,WAAWG,EAAAA,QAClC,iBAAE2gB,IAAqBlR,EAAAA,EAAAA,aAAazP,EAAAA,OAEpCkgB,GAA2BU,EAAAA,EAAAA,cAC9BC,IACD7a,EAAU,CACTxF,KAAM,OACN+H,KAAM,CAAED,OAAQuY,EAAOvY,OAAQ3I,SAAUkhB,EAAOlhB,UAEhD6gB,sBAAuBE,MAExBC,EAAkBP,EAAsB,GAEzC,CAAEM,EAAkBC,EAAkBP,IAGjCD,GAAmCS,EAAAA,EAAAA,cAAa,KACrD5a,EAAU,CAAExF,KAAM,QACbggB,GACJG,EAAkBH,EACnB,GACE,CAAEG,EAAkBH,IAEvB,MAAO,CACNT,YAAaxX,EACb2X,2BACAC,iCACCE,EAAYxhB,OAAS,EAClBshB,OACA7f,EAEN,CH2SKwgB,CACHjC,EACAC,EACA,aAEK/P,EAAwC,gBAApBkR,GACpB,KACL5Y,EAAI,mBACJ0Z,EAAkB,gBAClBC,EAAe,mBACfC,EAAkB,iBAClBC,EAAgB,eAChBC,EAAc,kBACdC,EAAiB,cACjBC,EAAa,sBACbC,EAAqB,WACrBpS,EAAU,sBACVqS,EAAqB,gBACrBC,IACG3hB,EAAAA,EAAAA,YACDC,IAAY,IAAA2hB,EACb,MAAM,IAAE7jB,GAAQkC,EAAQoH,EAAAA,QAClB,gBAAE2G,EAAe,aAAE1C,GAAiBrL,EAAQ4P,KAC5C,QAAEoE,EAAO,YAAE5T,EAAW,cAAEiP,GAAkBzM,EAC/C5C,EAAQM,EAAAA,QAGHshB,EAAuB3C,EAAS2C,qBAChCle,EACmC,QADzBie,EACfvhB,EAAa+f,IAAmBrc,gBAAQ,IAAA6d,GAAAA,EACnCE,EAAkB7N,EAAS,OAAQ,CACxCI,KAAM,WACNpO,KAAM,iBAED,uBAAE8b,EAAsB,UAAEnC,GAAc/c,EAC7C5C,EAAQ0f,EAAAA,SAEH,cACL3T,EAAa,iBACb6U,EAAgB,wBAChBmB,EAAuB,cACvBnT,GACGhM,EAAQ5C,EAAQE,EAAAA,QACd8hB,EAA6C,cAAvBpB,IACtBqB,GACH3I,GAAkBjN,SAAU8T,GACzB+B,EACe,aAApB/B,IACEE,EACG8B,EAAc9S,EAAe8Q,EAAiBD,GAC9CkC,EAAcL,EAAyB5B,GAE7C,MAAO,CACN5Y,KAAMwE,IACNkV,mBAAoBlT,EAAiB,kBACrCoT,mBAAoB9V,IACpB6V,gBACiB,oBAAhBkB,IACMD,OACa3hB,IAAhB4hB,EACJhB,mBAAqBU,IACrBT,eAAgBvjB,EAAK,OAAQ,kBAC7BwjB,kBAAmBxjB,EAAK,OAAQ,mBAChCyjB,cACGU,IAAyBtC,KAC3BuC,EACDV,sBAAuBzT,EAAiB,gBACxCqB,WACCwS,GACAle,GACAme,IACE5S,EACCkT,EACA,KACJV,uBACG9B,KAAeqC,GAAuBC,EACzCP,gBAAqC,YAApB9S,IACjB,GAEF,CACCuR,EACAD,EACAjR,EACAgQ,EAAS2C,qBACTvB,II/buCpT,KACzC,MAAMoV,GAA0BtiB,EAAAA,EAAAA,YAC7BC,GACDiN,GAAWjN,EAAQE,EAAAA,OAAc4K,2BAClC,CAAEmC,KAEG,oBAAEpC,IAAwB8E,EAAAA,EAAAA,aAAaC,KAG7C1L,EAAAA,EAAAA,YAAW,KACLme,GACJxX,GACD,GACE,CAAEwX,EAAyBxX,GAAuB,EJsbrDyX,CAA0BnB,GAAsBD,GAEhD,MAAQqB,EAAoBC,GKzctB,SAA6BvV,GACnC,MAAMhH,GAAWwc,EAAAA,EAAAA,eACXC,GAAStI,EAAAA,EAAAA,eACZC,IACD,SAASsI,EAAatR,GACrB,GACCA,EAAM+M,SAAW/D,GAIjBhJ,EAAM+M,SAAW/D,EAAKgE,cAEtB,OAID,MAAMuE,EAAYvI,EAAKwI,iBACvB,IAAOD,EACN,OAGD,MAAME,EAAgBF,EAAUG,wBAChC,GAAK1R,EAAM2R,QAAUF,EAAc9F,OAClC,OAGD3L,EAAMC,iBAEN,MAAM2R,EAAahd,EACjBjG,OAAQ0f,EAAAA,OACRwD,cAAe,IACXC,EAAoBF,EAAYA,EAAWlkB,OAAS,GAEpDqkB,EAAYnd,EAChBjG,OAAQ0f,EAAAA,OACR2D,SAAUF,IACN,YAAEG,EAAW,mBAAEC,GACpBtd,EAASC,SAAUwZ,EAAAA,OAEf0D,IAAaI,EAAAA,EAAAA,0BAA0BJ,GAC3CE,EAAaH,GAEbI,GAEF,CACA,MAAM,cAAEE,GAAkBpJ,EAI1B,OADAoJ,EAAcC,iBAAkB,YAAaf,GACtC,KACNc,EAAcE,oBAAqB,YAAahB,EAAa,CAC7D,GAEF,CAAE1c,IAEH,OAAOgH,EAAU,CAAEyV,EAzDnB,4FAyDmC,EACpC,CLiZ8CkB,CAC5CnC,GAOD1I,GAHuBqI,EACpB,uBACA,eAEH,MAAMyC,GAAiBC,EAAAA,EAAAA,UACtB,KAAM,IACF7E,EACHmB,2BACAC,mCACAC,qBAAsB,eAEvB,CAAErB,EAAUmB,EAA0BC,IAEjC0D,EAnZP,YAA6BC,GAC5B,MAAM,qBAAEC,EAAoB,eAAEJ,IAAmB9jB,EAAAA,EAAAA,YAAaC,IACtD,CACNikB,qBACCjkB,EAAQ4P,IAAgB7B,gBAAiB,eAC1C8V,eAAgB7jB,EAAQE,EAAAA,OAAcqV,uBAErC,IAEG2O,EAAcF,EAAiBG,KAAM,MAG3C,OAAOL,EAAAA,EAAAA,UAAS,KAAM,IAAAM,EAAAC,EAAAC,EAAAC,EACrB,MAAMC,EAIJ,QAJgBJ,EACjBP,EAAeE,QAAQ/a,QACpB1E,GACDA,EAAMmgB,gBAA2C,UAAzBngB,EAAMmgB,wBAC/B,IAAAL,EAAAA,EAAI,GAEAM,EAAsB,IACa,QAAxCL,EAAKR,GAAgBa,2BAAmB,IAAAL,EAAAA,EAAI,MACzCG,GAIEG,EACLV,GACAO,EAAazlB,UAA0C,QAApCulB,EAAOT,EAAeE,QAAQhlB,cAAM,IAAAulB,EAAAA,EAAI,GAIrDT,EAAee,qBAAyBD,GAC9CD,EAAoBxf,KAAM,CACzB2f,IAAKhM,GAAiB,CACrBvU,MAAO,CAAC,EACRwgB,SAAU,OACVC,oBAAoB,EACpBC,uBAAuB,EACvBC,iBAAkB,YAKrB,MAAMC,EAAaP,EACK,QADSJ,EAC9BV,EAAeE,cAAM,IAAAQ,EAAAA,EAAI,GACzBG,EAEH,OAAKR,EACG,IAAKgB,EAAY,CAAEL,IAAKX,IAGzBgB,CAAU,GACf,CACFrB,EAAea,oBACfb,EAAee,oBACff,EAAeE,OACfE,EACAC,GAEF,CAwVgBiB,CAAiB3C,GAG3BnB,EACJjd,SAAS2F,KAAK4J,UAAUE,IAAK,oBAE7BzP,SAAS2F,KAAK4J,UAAUC,OAAQ,oBAGjC,MAAMwR,GAAuBC,EAAAA,EAAAA,gCAEvB1jB,EAAYG,EAAM,mBAAoB,WAAayF,EAAM,CAC9D,gBAAiB4Z,KAeZ,oBAAEmE,IAAwB3V,EAAAA,EAAAA,aAAalE,EAAAA,OAEvC8Z,GAAoBzE,EAAAA,EAAAA,cACzB,CAAE0E,EAAUC,KACX,OAASD,GACR,IAAK,gBAEHphB,SAASsB,SAASjG,MAAOuC,EAAAA,EAAAA,cAAc,WAAY,CAClD0jB,QAAS,EACTzjB,UAAWwjB,EAAO,GAAI/kB,KACtBilB,IAAKF,EAAO,GAAIxgB,KAGlB,MACD,IAAK,iBACJ,CACC,MAAM2gB,EAAUH,EAAO,GACjB/U,EACoB,iBAAlBkV,EAAQlV,MACZkV,EAAQlV,MACRkV,EAAQlV,OAAOmV,SACnBP,GACCQ,EAAAA,EAAAA;;;CAECpkB,EAAAA,EAAAA,IAAI,+BACJqkB,EAAAA,EAAAA,gBAAgBrV,IAEjB,CACChQ,KAAM,WACNuE,GAAI,wBACJ0G,QAAS,CACR,CACCjJ,OAAOhB,EAAAA,EAAAA,IAAI,QACXkK,QAASA,KACR,MAAMpD,EAASod,EAAQ3gB,GACvBb,SAASsB,SAASjG,MACjBuC,EAAAA,EAAAA,cAAc,WAAY,CACzByG,KAAMD,EACNjD,OAAQ,QACN,KAMV,EAEF,GAED,CAAE+f,IAGG5lB,GAAcokB,EAAAA,EAAAA,UAAS,KACrB,CACNpjB,KAAMse,EACN/Z,GAAI8Z,KAEH,CAAEC,EAAiBD,IAEhBiH,GACLjP,EAAAA,EAAAA,kBAAkB,WAAckK,GAC/BhiB,EAAAA,EAAAA,KAAC6D,EAAU,CAACpD,YAAcA,IACvB,KAEL,OACCT,EAAAA,EAAAA,KAACgnB,EAAAA,iBAAgB,CAAA5mB,UAChBoS,EAAAA,EAAAA,MAACyU,EAAAA,cAAa,CAACC,gBAAc,EAAA9mB,SAAA,EAC5BJ,EAAAA,EAAAA,KAACyZ,GAAY,CAAC7Y,SAAWsgB,KACzBlhB,EAAAA,EAAAA,KAAA,OACC0C,UAAYyjB,EAAqBzjB,aAC5ByjB,EACL9R,IAAM8R,EAAqB9R,IAAKjU,UAEhCoS,EAAAA,EAAAA,MAACwH,GAAM,CACNgG,SAAW4E,EACX3E,aAAeA,EACfrf,SAAWsgB,EACX3X,OAAS0X,EACT9Q,WAAaA,EACbzN,UAAYA,EACZoiB,OAASA,EACTqC,aAAejF,EACfkF,WAAa9D,EACb+D,eAAkB9G,EAGlB+G,WAAc/E,EACd+D,kBAAoBA,EACpBiB,mBACCjF,IAAiBtiB,EAAAA,EAAAA,KAAC6U,GAAS,CAACpO,SAAS,SAEtC+gB,cACGnF,GACFC,IACCtiB,EAAAA,EAAAA,KAACsa,GAAa,CACbC,UACGgG,GAAgBkC,IAIrBriB,SAAA,EAEDJ,EAAAA,EAAAA,KAACynB,EAAAA,gBAAe,KAChBznB,EAAAA,EAAAA,KAACuE,EAAoB,KACrBvE,EAAAA,EAAAA,KAACia,GAAc,CAACP,SAAWsI,KAC3BhiB,EAAAA,EAAAA,KAACwT,GAAU,KACXxT,EAAAA,EAAAA,KAAC0nB,EAAAA,sBAAqB,KACtB1nB,EAAAA,EAAAA,KAAC2nB,EAAAA,gBAAe,KAChB3nB,EAAAA,EAAAA,KAAC4nB,EAAAA,qBAAoB,KACrB5nB,EAAAA,EAAAA,KAAC6nB,GAAyB,KAC1B7nB,EAAAA,EAAAA,KAAC8nB,EAAAA,gCAA+B,KAChC9nB,EAAAA,EAAAA,KAACma,GAAsB,KACvBna,EAAAA,EAAAA,KAACoR,GAAgB,KACjBpR,EAAAA,EAAAA,KAAC+nB,EAAAA,WAAU,CAACC,QA7HjB,SAA4BjhB,GAC3Bga,GACC8F,EAAAA,EAAAA;CAECpkB,EAAAA,EAAAA,IACC,oEAEDsE,GAGH,KAoHK/G,EAAAA,EAAAA,KAACioB,GAAkB,IACjBlB,GACF/mB,EAAAA,EAAAA,KAACkoB,EAAAA,gBAAe,aAMtB,GMxmBM,kBAAEC,IAAsBxkB,EAAQI,EAAAA,aAEhCqkB,IAAeC,EAAAA,EAAAA,SAAS/oB,OAAOmH,SAASjG,OAAQ4M,SACrD,mBAGKkb,GAAkBvhB,IACvBO,IAAY,eAAgBP,IAAS,CACpCQ,MAAO,MACPC,YAAa,aAAcT,KACzB,EAOG,SAASwhB,GAA6B5R,GAC5C,OAAKyR,GACG,MAERE,GAAe,gCACRtoB,EAAAA,EAAAA,KAACwoB,EAAAA,4BAAiC,IAAM7R,IAChD,CAKO,SAAS8R,GAA4B9R,GAC3C,OAAKyR,GACG,MAERE,GAAe,+BACRtoB,EAAAA,EAAAA,KAAC0oB,EAAAA,2BAAgC,IAAM/R,IAC/C,CAKO,SAASgS,GAAoBhS,GACnC,OAAKyR,GACG,MAERE,GAAe,uBACRtoB,EAAAA,EAAAA,KAAC4oB,EAAAA,mBAAwB,IAAMjS,IACvC,CAKO,SAASkS,GAAuBlS,GACtC,OAAKyR,GACG,MAERE,GAAe,0BACRtoB,EAAAA,EAAAA,KAAC8oB,EAAAA,sBAA2B,IAAMnS,IAC1C,CAKO,SAASoS,GAAwBpS,GACvC,OAAKyR,GACG,MAERE,GAAe,2BACRtoB,EAAAA,EAAAA,KAACgpB,EAAAA,uBAA4B,IAAMrS,IAC3C,CAKO,SAASsS,GAAsBtS,GACrC,OAAKyR,GACG,MAERE,GAAe,yBACRtoB,EAAAA,EAAAA,KAACkpB,EAAAA,qBAA0B,IAAMvS,IACzC,CAKO,SAASwS,GAAexS,GAC9B,OAAKyR,GACG,MAERE,GAAe,kBACRtoB,EAAAA,EAAAA,KAACopB,EAAAA,cAAmB,IAAMzS,IAClC,CAKO,SAAS0S,GAA2B1S,GAC1C,OAAKyR,GACG,MAERE,GAAe,8BACRtoB,EAAAA,EAAAA,KAACspB,EAAAA,0BAA+B,IAAM3S,IAC9C,CAKO,SAAS4S,KACf,OAAKnB,GACG,MAER9gB,IAAY,8CAA+C,CAC1DC,MAAO,MACPqB,KAAM,gFACN9D,KAAM,8IAEAqjB,GACR,CC7GA,MACCtkB,WAAY2lB,GAAiC,iCAC7CC,IACG9lB,EAAQI,EAAAA,aAaL,SAAS2lB,GACf1jB,EACApF,EACA2I,EACAyW,EACAC,GAEA,MAAM0J,EAAmBrqB,OAAOsqB,WAAY,sBAAuBC,QAC7D1K,EAASha,SAASsP,eAAgBzO,GAClC8jB,GAAOC,EAAAA,EAAAA,YAAY5K,GA6GzB,OA3GAlY,EAAAA,EAAAA,UAAUkB,EAAAA,OAAmB6hB,YAAa,iBAAkB,CAC3DC,gBAAgB,EAChBC,aAAa,EACbC,cAAc,EACdC,sBAAsB,KAGvBnjB,EAAAA,EAAAA,UAAUkB,EAAAA,OAAmB6hB,YAAa,OAAQ,CACjDK,0BAA0B,EAC1BC,WAAY,SACZC,WAAY,OACZC,cAAc,EACdC,iBAAkB,GAClB9c,eAAgB,GAChBC,WAAY,CAAE,eACd8c,sBAAsB,EACtBtI,gBAAgB,EAChBuI,uBAAuB,EACvBC,0BAA0B,EAC1BC,yBAAyB,IAGrBvrB,OAAOwrB,gCACX7jB,EAAAA,EAAAA,UAAUkB,EAAAA,OAAmB6hB,YAAa,aAAc,CACvDe,iBAAiB,EACjBC,kBAAkB,KAIpB/jB,EAAAA,EAAAA,UAAU0Z,EAAAA,OAAcsK,0BAMvBtB,IACA5oB,EAAAA,EAAAA,QAAQoH,EAAAA,OAAmBtJ,IAAK,OAAQ,4BACtCkC,EAAAA,EAAAA,QAAQoH,EAAAA,OAAmBtJ,IAAK,OAAQ,qBAE1CoI,EAAAA,EAAAA,UAAUhG,EAAAA,OAAcsK,qBAAqB,IAG9C2f,EAAAA,EAAAA,sBACAzB,MACA0B,EAAAA,EAAAA,2BAA2B,CAAEC,UAAU,KACvCC,EAAAA,EAAAA,0BAA0B,CAAED,UAAU,KAErCE,EAAAA,EAAAA,8CAA8C,CAC7CC,gBAAiBvL,EAASwL,wCAON,cADG,eAAxBrmB,SAASsmB,WAA8B,YAAc,WAGrDC,QAAQC,KACP,yXAWmE,IAApDrsB,OAAOssB,UAAUC,UAAUC,QAAS,WAEpDxsB,OAAOmlB,iBAAkB,UAAYrS,IACpC,MAAM2Z,EAAwB5mB,SAAS6mB,uBACtC,sCACE,GACE5Z,EAAM+M,SAAWha,WAGhB7F,OAAO2sB,QAAU,MACrBF,EAAsBG,UACrBH,EAAsBG,UAAY5sB,OAAO2sB,SAI1C9mB,SAAS6mB,uBAAwB,kBAAoB,IAErD1sB,OAAO6sB,SAAU,EAAG,GAEtB,IAKF7sB,OAAOmlB,iBAAkB,YAAcjlB,GAAOA,EAAE6S,mBAAkB,GAClE/S,OAAOmlB,iBAAkB,QAAUjlB,GAAOA,EAAE6S,mBAAkB,GAE9DyX,EAAKsC,QACJpsB,EAAAA,EAAAA,KAACqsB,EAAAA,WAAU,CAAAjsB,UACVJ,EAAAA,EAAAA,KAACssB,GAAM,CACNtM,SAAWA,EACXzW,OAASA,EACT3I,SAAWA,EACXqf,aAAeA,OAKX6J,CACR,CAKO,SAASyC,KACfjlB,IAAY,iCAAkC,CAC7CC,MAAO,MACP6D,QAAS,OAEX,E","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"blockLibrary\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"preferences\"]","webpack://wp/external window [\"wp\",\"widgets\"]","webpack://wp/external window [\"wp\",\"editor\"]","webpack://wp/./node_modules/clsx/dist/clsx.mjs","webpack://wp/external window [\"wp\",\"blockEditor\"]","webpack://wp/external window [\"wp\",\"plugins\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/external window \"ReactJSXRuntime\"","../../packages/icons/src/library/chevron-up.tsx","../../packages/icons/src/library/chevron-down.tsx","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"commands\"]","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/external window [\"wp\",\"htmlEntities\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"compose\"]","../../packages/icons/src/library/wordpress.tsx","../../packages/edit-post/src/components/back-button/fullscreen-mode-close.js","webpack://wp/external window [\"wp\",\"privateApis\"]","../../packages/edit-post/src/lock-unlock.js","../../packages/edit-post/src/components/back-button/index.js","../../packages/edit-post/src/components/editor-initialization/index.js","../../packages/edit-post/src/components/editor-initialization/listener-hooks.js","../../packages/edit-post/src/store/constants.js","webpack://wp/external window [\"wp\",\"keyboardShortcuts\"]","../../packages/edit-post/src/store/reducer.js","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/external window [\"wp\",\"hooks\"]","../../packages/edit-post/src/store/actions.js","../../packages/edit-post/src/utils/meta-boxes.js","../../packages/edit-post/src/store/selectors.js","../../packages/edit-post/src/store/index.js","../../packages/edit-post/src/components/keyboard-shortcuts/index.js","../../packages/edit-post/src/components/init-pattern-modal/index.js","../../packages/edit-post/src/components/browser-url/index.js","../../packages/edit-post/src/components/meta-boxes/meta-boxes-area/index.js","../../packages/edit-post/src/components/meta-boxes/meta-box-visibility.js","../../packages/edit-post/src/components/meta-boxes/index.js","webpack://wp/external window [\"wp\",\"keycodes\"]","../../packages/edit-post/src/components/more-menu/manage-patterns-menu-item.js","../../packages/edit-post/src/components/more-menu/welcome-guide-menu-item.js","../../packages/edit-post/src/components/preferences-modal/enable-custom-fields.js","../../packages/edit-post/src/components/preferences-modal/enable-panel.js","../../packages/edit-post/src/components/preferences-modal/meta-boxes-section.js","../../packages/edit-post/src/components/preferences-modal/index.js","../../packages/edit-post/src/components/more-menu/index.js","../../packages/edit-post/src/components/welcome-guide/image.js","../../packages/edit-post/src/components/welcome-guide/default.js","../../packages/edit-post/src/components/welcome-guide/template.js","../../packages/edit-post/src/components/welcome-guide/index.js","../../packages/icons/src/library/fullscreen.tsx","../../packages/edit-post/src/components/layout/index.js","../../packages/edit-post/src/commands/use-commands.js","../../packages/edit-post/src/components/layout/use-should-iframe.js","../../packages/edit-post/src/hooks/use-navigate-to-entity-record.js","../../packages/edit-post/src/components/meta-boxes/use-meta-box-initialization.js","../../packages/edit-post/src/components/layout/use-padding-appender.js","../../packages/edit-post/src/deprecated.js","../../packages/edit-post/src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockLibrary\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"deprecated\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"preferences\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"widgets\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronUp = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M6.5 12.4L12 8l5.5 4.4-.9 1.2L12 10l-4.5 3.6-1-1.2z\" />\n\t</SVG>\n);\n\nexport default chevronUp;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronDown = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M17.5 11.6L12 16l-5.5-4.4.9-1.2L12 14l4.5-3.6 1 1.2z\" />\n\t</SVG>\n);\n\nexport default chevronDown;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"commands\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst wordpress = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 24 24\">\n\t\t<Path d=\"M20 10c0-5.51-4.49-10-10-10C4.48 0 0 4.49 0 10c0 5.52 4.48 10 10 10 5.51 0 10-4.48 10-10zM7.78 15.37L4.37 6.22c.55-.02 1.17-.08 1.17-.08.5-.06.44-1.13-.06-1.11 0 0-1.45.11-2.37.11-.18 0-.37 0-.58-.01C4.12 2.69 6.87 1.11 10 1.11c2.33 0 4.45.87 6.05 2.34-.68-.11-1.65.39-1.65 1.58 0 .74.45 1.36.9 2.1.35.61.55 1.36.55 2.46 0 1.49-1.4 5-1.4 5l-3.03-8.37c.54-.02.82-.17.82-.17.5-.05.44-1.25-.06-1.22 0 0-1.44.12-2.38.12-.87 0-2.33-.12-2.33-.12-.5-.03-.56 1.2-.06 1.22l.92.08 1.26 3.41zM17.41 10c.24-.64.74-1.87.43-4.25.7 1.29 1.05 2.71 1.05 4.25 0 3.29-1.73 6.24-4.4 7.78.97-2.59 1.94-5.2 2.92-7.78zM6.1 18.09C3.12 16.65 1.11 13.53 1.11 10c0-1.3.23-2.48.72-3.59C3.25 10.3 4.67 14.2 6.1 18.09zm4.03-6.63l2.58 6.98c-.86.29-1.76.45-2.71.45-.79 0-1.57-.11-2.29-.33.81-2.38 1.62-4.74 2.42-7.1z\" />\n\t</SVG>\n);\n\nexport default wordpress;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\tButton,\n\tIcon,\n\t__unstableMotion as motion,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { wordpress } from '@wordpress/icons';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useReducedMotion } from '@wordpress/compose';\n\nfunction FullscreenModeClose( { showTooltip, icon, href, initialPost } ) {\n\tconst { isRequestingSiteIcon, postType, siteIconUrl } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPostType } = select( editorStore );\n\t\t\tconst { getEntityRecord, getPostType, isResolving } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst siteData =\n\t\t\t\tgetEntityRecord( 'root', '__unstableBase', undefined ) || {};\n\t\t\tconst _postType = initialPost?.type || getCurrentPostType();\n\t\t\treturn {\n\t\t\t\tisRequestingSiteIcon: isResolving( 'getEntityRecord', [\n\t\t\t\t\t'root',\n\t\t\t\t\t'__unstableBase',\n\t\t\t\t\tundefined,\n\t\t\t\t] ),\n\t\t\t\tpostType: getPostType( _postType ),\n\t\t\t\tsiteIconUrl: siteData.site_icon_url,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst disableMotion = useReducedMotion();\n\n\tif ( ! postType ) {\n\t\treturn null;\n\t}\n\n\tlet buttonIcon = <Icon size=\"36px\" icon={ wordpress } />;\n\n\tconst effect = {\n\t\texpand: {\n\t\t\tscale: 1.25,\n\t\t\ttransition: { type: 'tween', duration: '0.3' },\n\t\t},\n\t};\n\n\tif ( siteIconUrl ) {\n\t\tbuttonIcon = (\n\t\t\t<motion.img\n\t\t\t\tvariants={ ! disableMotion && effect }\n\t\t\t\talt={ __( 'Site Icon' ) }\n\t\t\t\tclassName=\"edit-post-fullscreen-mode-close_site-icon\"\n\t\t\t\tsrc={ siteIconUrl }\n\t\t\t/>\n\t\t);\n\t}\n\n\tif ( isRequestingSiteIcon ) {\n\t\tbuttonIcon = null;\n\t}\n\n\t// Override default icon if custom icon is provided via props.\n\tif ( icon ) {\n\t\tbuttonIcon = <Icon size=\"36px\" icon={ icon } />;\n\t}\n\n\tconst classes = clsx( 'edit-post-fullscreen-mode-close', {\n\t\t'has-icon': siteIconUrl,\n\t} );\n\n\tconst buttonHref =\n\t\thref ??\n\t\taddQueryArgs( 'edit.php', {\n\t\t\tpost_type: postType.slug,\n\t\t} );\n\n\tconst buttonLabel = postType?.labels?.view_items ?? __( 'Back' );\n\n\treturn (\n\t\t<motion.div whileHover=\"expand\">\n\t\t\t<Button\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tclassName={ classes }\n\t\t\t\thref={ buttonHref }\n\t\t\t\tlabel={ buttonLabel }\n\t\t\t\tshowTooltip={ showTooltip }\n\t\t\t>\n\t\t\t\t{ buttonIcon }\n\t\t\t</Button>\n\t\t</motion.div>\n\t);\n}\n\nexport default FullscreenModeClose;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\n\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I acknowledge private features are not for use in themes or plugins and doing so will break in the next version of WordPress.',\n\t\t'@wordpress/edit-post'\n\t);\n","/**\n * WordPress dependencies\n */\nimport { privateApis as editorPrivateApis } from '@wordpress/editor';\nimport { __unstableMotion as motion } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport FullscreenModeClose from './fullscreen-mode-close';\nimport { unlock } from '../../lock-unlock';\n\nconst { BackButton: BackButtonFill } = unlock( editorPrivateApis );\n\nconst slideX = {\n\thidden: { x: '-100%' },\n\tdistractionFreeInactive: { x: 0 },\n\thover: { x: 0, transition: { type: 'tween', delay: 0.2 } },\n};\n\nfunction BackButton( { initialPost } ) {\n\treturn (\n\t\t<BackButtonFill>\n\t\t\t{ ( { length } ) =>\n\t\t\t\tlength <= 1 && (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tvariants={ slideX }\n\t\t\t\t\t\ttransition={ { type: 'tween', delay: 0.8 } }\n\t\t\t\t\t>\n\t\t\t\t\t\t<FullscreenModeClose\n\t\t\t\t\t\t\tshowTooltip\n\t\t\t\t\t\t\tinitialPost={ initialPost }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.div>\n\t\t\t\t)\n\t\t\t}\n\t\t</BackButtonFill>\n\t);\n}\n\nexport default BackButton;\n","/**\n * Internal dependencies\n */\nimport { useUpdatePostLinkListener } from './listener-hooks';\n\n/**\n * Data component used for initializing the editor and re-initializes\n * when postId changes or on unmount.\n *\n * @return {null} This is a data component so does not render any ui.\n */\nexport default function EditorInitialization() {\n\tuseUpdatePostLinkListener();\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tVIEW_AS_LINK_SELECTOR,\n\tVIEW_AS_PREVIEW_LINK_SELECTOR,\n} from '../../store/constants';\n\n/**\n * This listener hook monitors any change in permalink and updates the view\n * post link in the admin bar.\n */\nexport const useUpdatePostLinkListener = () => {\n\tconst { isViewable, newPermalink } = useSelect( ( select ) => {\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst { getCurrentPost, getEditedPostAttribute } =\n\t\t\tselect( editorStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\t\treturn {\n\t\t\tisViewable: postType?.viewable,\n\t\t\tnewPermalink: getCurrentPost().link,\n\t\t};\n\t}, [] );\n\n\tconst nodeToUpdateRef = useRef();\n\n\tuseEffect( () => {\n\t\tnodeToUpdateRef.current =\n\t\t\tdocument.querySelector( VIEW_AS_PREVIEW_LINK_SELECTOR ) ||\n\t\t\tdocument.querySelector( VIEW_AS_LINK_SELECTOR );\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( ! newPermalink || ! nodeToUpdateRef.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isViewable ) {\n\t\t\tnodeToUpdateRef.current.style.display = 'none';\n\t\t\treturn;\n\t\t}\n\n\t\tnodeToUpdateRef.current.style.display = '';\n\t\tnodeToUpdateRef.current.setAttribute( 'href', newPermalink );\n\t}, [ newPermalink, isViewable ] );\n};\n","/**\n * The identifier for the data store.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/edit-post';\n\n/**\n * CSS selector string for the admin bar view post link anchor tag.\n *\n * @type {string}\n */\nexport const VIEW_AS_LINK_SELECTOR = '#wp-admin-bar-view a';\n\n/**\n * CSS selector string for the admin bar preview post link anchor tag.\n *\n * @type {string}\n */\nexport const VIEW_AS_PREVIEW_LINK_SELECTOR = '#wp-admin-bar-preview a';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keyboardShortcuts\"];","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer keeping track of the meta boxes isSaving state.\n * A \"true\" value means the meta boxes saving request is in-flight.\n *\n *\n * @param {boolean} state  Previous state.\n * @param {Object}  action Action Object.\n *\n * @return {Object} Updated state.\n */\nexport function isSavingMetaBoxes( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REQUEST_META_BOX_UPDATES':\n\t\t\treturn true;\n\t\tcase 'META_BOX_UPDATES_SUCCESS':\n\t\tcase 'META_BOX_UPDATES_FAILURE':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction mergeMetaboxes( metaboxes = [], newMetaboxes ) {\n\tconst mergedMetaboxes = [ ...metaboxes ];\n\tfor ( const metabox of newMetaboxes ) {\n\t\tconst existing = mergedMetaboxes.findIndex(\n\t\t\t( box ) => box.id === metabox.id\n\t\t);\n\t\tif ( existing !== -1 ) {\n\t\t\tmergedMetaboxes[ existing ] = metabox;\n\t\t} else {\n\t\t\tmergedMetaboxes.push( metabox );\n\t\t}\n\t}\n\treturn mergedMetaboxes;\n}\n\n/**\n * Reducer keeping track of the meta boxes per location.\n *\n * @param {boolean} state  Previous state.\n * @param {Object}  action Action Object.\n *\n * @return {Object} Updated state.\n */\nexport function metaBoxLocations( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_META_BOXES_PER_LOCATIONS': {\n\t\t\tconst newState = { ...state };\n\t\t\tfor ( const [ location, metaboxes ] of Object.entries(\n\t\t\t\taction.metaBoxesPerLocation\n\t\t\t) ) {\n\t\t\t\tnewState[ location ] = mergeMetaboxes(\n\t\t\t\t\tnewState[ location ],\n\t\t\t\t\tmetaboxes\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn newState;\n\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer tracking whether meta boxes are initialized.\n *\n * @param {boolean} state\n * @param {Object}  action\n *\n * @return {boolean} Updated state.\n */\nfunction metaBoxesInitialized( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'META_BOXES_INITIALIZED':\n\t\t\treturn true;\n\t}\n\treturn state;\n}\n\nconst metaBoxes = combineReducers( {\n\tisSaving: isSavingMetaBoxes,\n\tlocations: metaBoxLocations,\n\tinitialized: metaBoxesInitialized,\n} );\n\nexport default combineReducers( {\n\tmetaBoxes,\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport {\n\tstore as editorStore,\n\tprivateApis as editorPrivateApis,\n} from '@wordpress/editor';\nimport deprecated from '@wordpress/deprecated';\nimport { addAction } from '@wordpress/hooks';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { getMetaBoxContainer } from '../utils/meta-boxes';\nimport { unlock } from '../lock-unlock';\n\nconst { interfaceStore } = unlock( editorPrivateApis );\n\n/**\n * Returns an action object used in signalling that the user opened an editor sidebar.\n *\n * @param {?string} name Sidebar name to be opened.\n */\nexport const openGeneralSidebar =\n\t( name ) =>\n\t( { registry } ) => {\n\t\tregistry\n\t\t\t.dispatch( interfaceStore )\n\t\t\t.enableComplementaryArea( 'core', name );\n\t};\n\n/**\n * Returns an action object signalling that the user closed the sidebar.\n */\nexport const closeGeneralSidebar =\n\t() =>\n\t( { registry } ) =>\n\t\tregistry.dispatch( interfaceStore ).disableComplementaryArea( 'core' );\n\n/**\n * Returns an action object used in signalling that the user opened a modal.\n *\n * @deprecated since WP 6.3 use `core/interface` store's action with the same name instead.\n *\n *\n * @param {string} name A string that uniquely identifies the modal.\n *\n * @return {Object} Action object.\n */\nexport const openModal =\n\t( name ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"select( 'core/edit-post' ).openModal( name )\", {\n\t\t\tsince: '6.3',\n\t\t\talternative: \"select( 'core/interface').openModal( name )\",\n\t\t} );\n\t\treturn registry.dispatch( interfaceStore ).openModal( name );\n\t};\n\n/**\n * Returns an action object signalling that the user closed a modal.\n *\n * @deprecated since WP 6.3 use `core/interface` store's action with the same name instead.\n *\n * @return {Object} Action object.\n */\nexport const closeModal =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"select( 'core/edit-post' ).closeModal()\", {\n\t\t\tsince: '6.3',\n\t\t\talternative: \"select( 'core/interface').closeModal()\",\n\t\t} );\n\t\treturn registry.dispatch( interfaceStore ).closeModal();\n\t};\n\n/**\n * Returns an action object used in signalling that the user opened the publish\n * sidebar.\n * @deprecated\n *\n * @return {Object} Action object\n */\nexport const openPublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).openPublishSidebar\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').openPublishSidebar\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).openPublishSidebar();\n\t};\n\n/**\n * Returns an action object used in signalling that the user closed the\n * publish sidebar.\n * @deprecated\n *\n * @return {Object} Action object.\n */\nexport const closePublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).closePublishSidebar\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').closePublishSidebar\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).closePublishSidebar();\n\t};\n\n/**\n * Returns an action object used in signalling that the user toggles the publish sidebar.\n * @deprecated\n *\n * @return {Object} Action object\n */\nexport const togglePublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).togglePublishSidebar\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').togglePublishSidebar\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).togglePublishSidebar();\n\t};\n\n/**\n * Returns an action object used to enable or disable a panel in the editor.\n *\n * @deprecated\n *\n * @param {string} panelName A string that identifies the panel to enable or disable.\n *\n * @return {Object} Action object.\n */\nexport const toggleEditorPanelEnabled =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleEditorPanelEnabled\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').toggleEditorPanelEnabled\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).toggleEditorPanelEnabled( panelName );\n\t};\n\n/**\n * Opens a closed panel and closes an open panel.\n *\n * @deprecated\n *\n * @param {string} panelName A string that identifies the panel to open or close.\n */\nexport const toggleEditorPanelOpened =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleEditorPanelOpened\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').toggleEditorPanelOpened\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).toggleEditorPanelOpened( panelName );\n\t};\n\n/**\n * Returns an action object used to remove a panel from the editor.\n *\n * @deprecated\n *\n * @param {string} panelName A string that identifies the panel to remove.\n *\n * @return {Object} Action object.\n */\nexport const removeEditorPanel =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).removeEditorPanel\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').removeEditorPanel\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).removeEditorPanel( panelName );\n\t};\n\n/**\n * Triggers an action used to toggle a feature flag.\n *\n * @param {string} feature Feature name.\n */\nexport const toggleFeature =\n\t( feature ) =>\n\t( { registry } ) =>\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.toggle( 'core/edit-post', feature );\n\n/**\n * Triggers an action used to switch editor mode.\n *\n * @deprecated\n *\n * @param {string} mode The editor mode.\n */\nexport const switchEditorMode =\n\t( mode ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).switchEditorMode\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').switchEditorMode\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).switchEditorMode( mode );\n\t};\n\n/**\n * Triggers an action object used to toggle a plugin name flag.\n *\n * @param {string} pluginName Plugin name.\n */\nexport const togglePinnedPluginItem =\n\t( pluginName ) =>\n\t( { registry } ) => {\n\t\tconst isPinned = registry\n\t\t\t.select( interfaceStore )\n\t\t\t.isItemPinned( 'core', pluginName );\n\n\t\tregistry\n\t\t\t.dispatch( interfaceStore )\n\t\t\t[ isPinned ? 'unpinItem' : 'pinItem' ]( 'core', pluginName );\n\t};\n\n/**\n * Returns an action object used in signaling that a style should be auto-applied when a block is created.\n *\n * @deprecated\n */\nexport function updatePreferredStyleVariations() {\n\tdeprecated( \"dispatch( 'core/edit-post' ).updatePreferredStyleVariations\", {\n\t\tsince: '6.6',\n\t\thint: 'Preferred Style Variations are not supported anymore.',\n\t} );\n\treturn { type: 'NOTHING' };\n}\n\n/**\n * Update the provided block types to be visible.\n *\n * @param {string[]} blockNames Names of block types to show.\n */\nexport const showBlockTypes =\n\t( blockNames ) =>\n\t( { registry } ) => {\n\t\tunlock( registry.dispatch( editorStore ) ).showBlockTypes( blockNames );\n\t};\n\n/**\n * Update the provided block types to be hidden.\n *\n * @param {string[]} blockNames Names of block types to hide.\n */\nexport const hideBlockTypes =\n\t( blockNames ) =>\n\t( { registry } ) => {\n\t\tunlock( registry.dispatch( editorStore ) ).hideBlockTypes( blockNames );\n\t};\n\n/**\n * Stores info about which Meta boxes are available in which location.\n *\n * @param {Object} metaBoxesPerLocation Meta boxes per location.\n */\nexport function setAvailableMetaBoxesPerLocation( metaBoxesPerLocation ) {\n\treturn {\n\t\ttype: 'SET_META_BOXES_PER_LOCATIONS',\n\t\tmetaBoxesPerLocation,\n\t};\n}\n\n/**\n * Update a metabox.\n */\nexport const requestMetaBoxUpdates =\n\t() =>\n\tasync ( { registry, select, dispatch } ) => {\n\t\tdispatch( {\n\t\t\ttype: 'REQUEST_META_BOX_UPDATES',\n\t\t} );\n\n\t\t// Saves the wp_editor fields.\n\t\tif ( window.tinyMCE ) {\n\t\t\twindow.tinyMCE.triggerSave();\n\t\t}\n\n\t\t// We gather the base form data.\n\t\tconst baseFormData = new window.FormData(\n\t\t\tdocument.querySelector( '.metabox-base-form' )\n\t\t);\n\n\t\tconst postId = baseFormData.get( 'post_ID' );\n\t\tconst postType = baseFormData.get( 'post_type' );\n\n\t\t// Additional data needed for backward compatibility.\n\t\t// If we do not provide this data, the post will be overridden with the default values.\n\t\t// We cannot rely on getCurrentPost because right now on the editor we may be editing a pattern or a template.\n\t\t// We need to retrieve the post that the base form data is referring to.\n\t\tconst post = registry\n\t\t\t.select( coreStore )\n\t\t\t.getEditedEntityRecord( 'postType', postType, postId );\n\t\tconst additionalData = [\n\t\t\tpost.comment_status\n\t\t\t\t? [ 'comment_status', post.comment_status ]\n\t\t\t\t: false,\n\t\t\tpost.ping_status ? [ 'ping_status', post.ping_status ] : false,\n\t\t\tpost.sticky ? [ 'sticky', post.sticky ] : false,\n\t\t\tpost.author ? [ 'post_author', post.author ] : false,\n\t\t].filter( Boolean );\n\n\t\t// We gather all the metaboxes locations.\n\t\tconst activeMetaBoxLocations = select.getActiveMetaBoxLocations();\n\t\tconst formDataToMerge = [\n\t\t\tbaseFormData,\n\t\t\t...activeMetaBoxLocations.map(\n\t\t\t\t( location ) =>\n\t\t\t\t\tnew window.FormData( getMetaBoxContainer( location ) )\n\t\t\t),\n\t\t];\n\n\t\t// Merge all form data objects into a single one.\n\t\tconst formData = formDataToMerge.reduce( ( memo, currentFormData ) => {\n\t\t\tfor ( const [ key, value ] of currentFormData ) {\n\t\t\t\tmemo.append( key, value );\n\t\t\t}\n\t\t\treturn memo;\n\t\t}, new window.FormData() );\n\t\tadditionalData.forEach( ( [ key, value ] ) =>\n\t\t\tformData.append( key, value )\n\t\t);\n\n\t\ttry {\n\t\t\t// Save the metaboxes.\n\t\t\tawait apiFetch( {\n\t\t\t\turl: window._wpMetaBoxUrl,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: formData,\n\t\t\t\tparse: false,\n\t\t\t} );\n\t\t\tdispatch.metaBoxUpdatesSuccess();\n\t\t} catch {\n\t\t\tdispatch.metaBoxUpdatesFailure();\n\t\t}\n\t};\n\n/**\n * Returns an action object used to signal a successful meta box update.\n *\n * @return {Object} Action object.\n */\nexport function metaBoxUpdatesSuccess() {\n\treturn {\n\t\ttype: 'META_BOX_UPDATES_SUCCESS',\n\t};\n}\n\n/**\n * Returns an action object used to signal a failed meta box update.\n *\n * @return {Object} Action object.\n */\nexport function metaBoxUpdatesFailure() {\n\treturn {\n\t\ttype: 'META_BOX_UPDATES_FAILURE',\n\t};\n}\n\n/**\n * Action that changes the width of the editing canvas.\n *\n * @deprecated\n *\n * @param {string} deviceType\n */\nexport const __experimentalSetPreviewDeviceType =\n\t( deviceType ) =>\n\t( { registry } ) => {\n\t\tdeprecated(\n\t\t\t\"dispatch( 'core/edit-post' ).__experimentalSetPreviewDeviceType\",\n\t\t\t{\n\t\t\t\tsince: '6.5',\n\t\t\t\tversion: '6.7',\n\t\t\t\thint: 'registry.dispatch( editorStore ).setDeviceType',\n\t\t\t}\n\t\t);\n\t\tregistry.dispatch( editorStore ).setDeviceType( deviceType );\n\t};\n\n/**\n * Returns an action object used to open/close the inserter.\n *\n * @deprecated\n *\n * @param {boolean|Object} value Whether the inserter should be opened (true) or closed (false).\n */\nexport const setIsInserterOpened =\n\t( value ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).setIsInserterOpened\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').setIsInserterOpened\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).setIsInserterOpened( value );\n\t};\n\n/**\n * Returns an action object used to open/close the list view.\n *\n * @deprecated\n *\n * @param {boolean} isOpen A boolean representing whether the list view should be opened or closed.\n */\nexport const setIsListViewOpened =\n\t( isOpen ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).setIsListViewOpened\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').setIsListViewOpened\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).setIsListViewOpened( isOpen );\n\t};\n\n/**\n * Returns an action object used to switch to template editing.\n *\n * @deprecated\n */\nexport function setIsEditingTemplate() {\n\tdeprecated( \"dispatch( 'core/edit-post' ).setIsEditingTemplate\", {\n\t\tsince: '6.5',\n\t\talternative: \"dispatch( 'core/editor').setRenderingMode\",\n\t} );\n\treturn { type: 'NOTHING' };\n}\n\n/**\n * Create a block based template.\n *\n * @deprecated\n */\nexport function __unstableCreateTemplate() {\n\tdeprecated( \"dispatch( 'core/edit-post' ).__unstableCreateTemplate\", {\n\t\tsince: '6.5',\n\t} );\n\treturn { type: 'NOTHING' };\n}\n\nlet metaBoxesInitialized = false;\n\n/**\n * Initializes WordPress `postboxes` script and the logic for saving meta boxes.\n */\nexport const initializeMetaBoxes =\n\t() =>\n\t( { registry, select, dispatch } ) => {\n\t\tconst isEditorReady = registry\n\t\t\t.select( editorStore )\n\t\t\t.__unstableIsEditorReady();\n\n\t\tif ( ! isEditorReady ) {\n\t\t\treturn;\n\t\t}\n\t\t// Only initialize once.\n\t\tif ( metaBoxesInitialized ) {\n\t\t\treturn;\n\t\t}\n\t\tconst postType = registry.select( editorStore ).getCurrentPostType();\n\t\tif ( window.postboxes.page !== postType ) {\n\t\t\twindow.postboxes.add_postbox_toggles( postType );\n\t\t}\n\n\t\tmetaBoxesInitialized = true;\n\n\t\t// Save metaboxes on save completion, except for autosaves.\n\t\taddAction(\n\t\t\t'editor.savePost',\n\t\t\t'core/edit-post/save-metaboxes',\n\t\t\tasync ( post, options ) => {\n\t\t\t\tif ( ! options.isAutosave && select.hasMetaBoxes() ) {\n\t\t\t\t\tawait dispatch.requestMetaBoxUpdates();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tdispatch( {\n\t\t\ttype: 'META_BOXES_INITIALIZED',\n\t\t} );\n\t};\n\n/**\n * Action that toggles Distraction free mode.\n * Distraction free mode expects there are no sidebars, as due to the\n * z-index values set, you can't close sidebars.\n *\n * @deprecated\n */\nexport const toggleDistractionFree =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleDistractionFree\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').toggleDistractionFree\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).toggleDistractionFree();\n\t};\n\n/**\n * Action that toggles the Fullscreen Mode view option.\n */\nexport const toggleFullscreenMode =\n\t() =>\n\t( { registry } ) => {\n\t\tconst isFullscreen = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( 'core/edit-post', 'fullscreenMode' );\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.toggle( 'core/edit-post', 'fullscreenMode' );\n\n\t\tregistry\n\t\t\t.dispatch( noticesStore )\n\t\t\t.createInfoNotice(\n\t\t\t\tisFullscreen\n\t\t\t\t\t? __( 'Fullscreen mode deactivated.' )\n\t\t\t\t\t: __( 'Fullscreen mode activated.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/edit-post/toggle-fullscreen-mode/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\tregistry\n\t\t\t\t\t\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t\t\t\t\t\t.toggle(\n\t\t\t\t\t\t\t\t\t\t'core/edit-post',\n\t\t\t\t\t\t\t\t\t\t'fullscreenMode'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t};\n","/**\n * Function returning the current Meta Boxes DOM Node in the editor\n * whether the meta box area is opened or not.\n * If the MetaBox Area is visible returns it, and returns the original container instead.\n *\n * @param {string} location Meta Box location.\n *\n * @return {string} HTML content.\n */\nexport const getMetaBoxContainer = ( location ) => {\n\tconst area = document.querySelector(\n\t\t`.edit-post-meta-boxes-area.is-${ location } .metabox-location-${ location }`\n\t);\n\tif ( area ) {\n\t\treturn area;\n\t}\n\n\treturn document.querySelector( '#metaboxes .metabox-location-' + location );\n};\n","/**\n * WordPress dependencies\n */\nimport { createSelector, createRegistrySelector } from '@wordpress/data';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { store as coreStore } from '@wordpress/core-data';\nimport {\n\tstore as editorStore,\n\tprivateApis as editorPrivateApis,\n} from '@wordpress/editor';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\nconst { interfaceStore } = unlock( editorPrivateApis );\nconst EMPTY_ARRAY = [];\nconst EMPTY_OBJECT = {};\n\n/**\n * Returns the current editing mode.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Editing mode.\n */\nexport const getEditorMode = createRegistrySelector(\n\t( select ) => () =>\n\t\tselect( preferencesStore ).get( 'core', 'editorMode' ) ?? 'visual'\n);\n\n/**\n * Returns true if the editor sidebar is opened.\n *\n * @param {Object} state Global application state\n *\n * @return {boolean} Whether the editor sidebar is opened.\n */\nexport const isEditorSidebarOpened = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst activeGeneralSidebar =\n\t\t\tselect( interfaceStore ).getActiveComplementaryArea( 'core' );\n\t\treturn [ 'edit-post/document', 'edit-post/block' ].includes(\n\t\t\tactiveGeneralSidebar\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the plugin sidebar is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the plugin sidebar is opened.\n */\nexport const isPluginSidebarOpened = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst activeGeneralSidebar =\n\t\t\tselect( interfaceStore ).getActiveComplementaryArea( 'core' );\n\t\treturn (\n\t\t\t!! activeGeneralSidebar &&\n\t\t\t! [ 'edit-post/document', 'edit-post/block' ].includes(\n\t\t\t\tactiveGeneralSidebar\n\t\t\t)\n\t\t);\n\t}\n);\n\n/**\n * Returns the current active general sidebar name, or null if there is no\n * general sidebar active. The active general sidebar is a unique name to\n * identify either an editor or plugin sidebar.\n *\n * Examples:\n *\n *  - `edit-post/document`\n *  - `my-plugin/insert-image-sidebar`\n *\n * @param {Object} state Global application state.\n *\n * @return {?string} Active general sidebar name.\n */\nexport const getActiveGeneralSidebarName = createRegistrySelector(\n\t( select ) => () => {\n\t\treturn select( interfaceStore ).getActiveComplementaryArea( 'core' );\n\t}\n);\n\n/**\n * Converts panels from the new preferences store format to the old format\n * that the post editor previously used.\n *\n * The resultant converted data should look like this:\n * {\n *     panelName: {\n *         enabled: false,\n *         opened: true,\n *     },\n *     anotherPanelName: {\n *         opened: true\n *     },\n * }\n *\n * @param {string[] | undefined} inactivePanels An array of inactive panel names.\n * @param {string[] | undefined} openPanels     An array of open panel names.\n *\n * @return {Object} The converted panel data.\n */\nfunction convertPanelsToOldFormat( inactivePanels, openPanels ) {\n\t// First reduce the inactive panels.\n\tconst panelsWithEnabledState = inactivePanels?.reduce(\n\t\t( accumulatedPanels, panelName ) => ( {\n\t\t\t...accumulatedPanels,\n\t\t\t[ panelName ]: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t} ),\n\t\t{}\n\t);\n\n\t// Then reduce the open panels, passing in the result of the previous\n\t// reduction as the initial value so that both open and inactive\n\t// panel state is combined.\n\tconst panels = openPanels?.reduce( ( accumulatedPanels, panelName ) => {\n\t\tconst currentPanelState = accumulatedPanels?.[ panelName ];\n\t\treturn {\n\t\t\t...accumulatedPanels,\n\t\t\t[ panelName ]: {\n\t\t\t\t...currentPanelState,\n\t\t\t\topened: true,\n\t\t\t},\n\t\t};\n\t}, panelsWithEnabledState ?? {} );\n\n\t// The panels variable will only be set if openPanels wasn't `undefined`.\n\t// If it isn't set just return `panelsWithEnabledState`, and if that isn't\n\t// set return an empty object.\n\treturn panels ?? panelsWithEnabledState ?? EMPTY_OBJECT;\n}\n\n/**\n * Returns the preferences (these preferences are persisted locally).\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} Preferences Object.\n */\nexport const getPreferences = createRegistrySelector( ( select ) => () => {\n\tdeprecated( `select( 'core/edit-post' ).getPreferences`, {\n\t\tsince: '6.0',\n\t\talternative: `select( 'core/preferences' ).get`,\n\t} );\n\n\tconst corePreferences = [ 'editorMode', 'hiddenBlockTypes' ].reduce(\n\t\t( accumulatedPrefs, preferenceKey ) => {\n\t\t\tconst value = select( preferencesStore ).get(\n\t\t\t\t'core',\n\t\t\t\tpreferenceKey\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\t...accumulatedPrefs,\n\t\t\t\t[ preferenceKey ]: value,\n\t\t\t};\n\t\t},\n\t\t{}\n\t);\n\n\t// Panels were a preference, but the data structure changed when the state\n\t// was migrated to the preferences store. They need to be converted from\n\t// the new preferences store format to old format to ensure no breaking\n\t// changes for plugins.\n\tconst inactivePanels = select( preferencesStore ).get(\n\t\t'core',\n\t\t'inactivePanels'\n\t);\n\tconst openPanels = select( preferencesStore ).get( 'core', 'openPanels' );\n\tconst panels = convertPanelsToOldFormat( inactivePanels, openPanels );\n\n\treturn {\n\t\t...corePreferences,\n\t\tpanels,\n\t};\n} );\n\n/**\n *\n * @param {Object} state         Global application state.\n * @param {string} preferenceKey Preference Key.\n * @param {*}      defaultValue  Default Value.\n *\n * @return {*} Preference Value.\n */\nexport function getPreference( state, preferenceKey, defaultValue ) {\n\tdeprecated( `select( 'core/edit-post' ).getPreference`, {\n\t\tsince: '6.0',\n\t\talternative: `select( 'core/preferences' ).get`,\n\t} );\n\n\t// Avoid using the `getPreferences` registry selector where possible.\n\tconst preferences = getPreferences( state );\n\tconst value = preferences[ preferenceKey ];\n\treturn value === undefined ? defaultValue : value;\n}\n\n/**\n * Returns an array of blocks that are hidden.\n *\n * @return {Array} A list of the hidden block types\n */\nexport const getHiddenBlockTypes = createRegistrySelector( ( select ) => () => {\n\treturn (\n\t\tselect( preferencesStore ).get( 'core', 'hiddenBlockTypes' ) ??\n\t\tEMPTY_ARRAY\n\t);\n} );\n\n/**\n * Returns true if the publish sidebar is opened.\n *\n * @deprecated\n *\n * @param {Object} state Global application state\n *\n * @return {boolean} Whether the publish sidebar is open.\n */\nexport const isPublishSidebarOpened = createRegistrySelector(\n\t( select ) => () => {\n\t\tdeprecated( `select( 'core/edit-post' ).isPublishSidebarOpened`, {\n\t\t\tsince: '6.6',\n\t\t\talternative: `select( 'core/editor' ).isPublishSidebarOpened`,\n\t\t} );\n\t\treturn select( editorStore ).isPublishSidebarOpened();\n\t}\n);\n\n/**\n * Returns true if the given panel was programmatically removed, or false otherwise.\n * All panels are not removed by default.\n *\n * @deprecated\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is removed.\n */\nexport const isEditorPanelRemoved = createRegistrySelector(\n\t( select ) => ( state, panelName ) => {\n\t\tdeprecated( `select( 'core/edit-post' ).isEditorPanelRemoved`, {\n\t\t\tsince: '6.5',\n\t\t\talternative: `select( 'core/editor' ).isEditorPanelRemoved`,\n\t\t} );\n\t\treturn select( editorStore ).isEditorPanelRemoved( panelName );\n\t}\n);\n\n/**\n * Returns true if the given panel is enabled, or false otherwise. Panels are\n * enabled by default.\n *\n * @deprecated\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is enabled.\n */\nexport const isEditorPanelEnabled = createRegistrySelector(\n\t( select ) => ( state, panelName ) => {\n\t\tdeprecated( `select( 'core/edit-post' ).isEditorPanelEnabled`, {\n\t\t\tsince: '6.5',\n\t\t\talternative: `select( 'core/editor' ).isEditorPanelEnabled`,\n\t\t} );\n\t\treturn select( editorStore ).isEditorPanelEnabled( panelName );\n\t}\n);\n\n/**\n * Returns true if the given panel is open, or false otherwise. Panels are\n * closed by default.\n *\n * @deprecated\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is open.\n */\nexport const isEditorPanelOpened = createRegistrySelector(\n\t( select ) => ( state, panelName ) => {\n\t\tdeprecated( `select( 'core/edit-post' ).isEditorPanelOpened`, {\n\t\t\tsince: '6.5',\n\t\t\talternative: `select( 'core/editor' ).isEditorPanelOpened`,\n\t\t} );\n\t\treturn select( editorStore ).isEditorPanelOpened( panelName );\n\t}\n);\n\n/**\n * Returns true if a modal is active, or false otherwise.\n *\n * @deprecated since WP 6.3 use `core/interface` store's selector with the same name instead.\n *\n * @param {Object} state     Global application state.\n * @param {string} modalName A string that uniquely identifies the modal.\n *\n * @return {boolean} Whether the modal is active.\n */\nexport const isModalActive = createRegistrySelector(\n\t( select ) => ( state, modalName ) => {\n\t\tdeprecated( `select( 'core/edit-post' ).isModalActive`, {\n\t\t\tsince: '6.3',\n\t\t\talternative: `select( 'core/interface' ).isModalActive`,\n\t\t} );\n\t\treturn !! select( interfaceStore ).isModalActive( modalName );\n\t}\n);\n\n/**\n * Returns whether the given feature is enabled or not.\n *\n * @param {Object} state   Global application state.\n * @param {string} feature Feature slug.\n *\n * @return {boolean} Is active.\n */\nexport const isFeatureActive = createRegistrySelector(\n\t( select ) => ( state, feature ) => {\n\t\treturn !! select( preferencesStore ).get( 'core/edit-post', feature );\n\t}\n);\n\n/**\n * Returns true if the plugin item is pinned to the header.\n * When the value is not set it defaults to true.\n *\n * @param {Object} state      Global application state.\n * @param {string} pluginName Plugin item name.\n *\n * @return {boolean} Whether the plugin item is pinned.\n */\nexport const isPluginItemPinned = createRegistrySelector(\n\t( select ) => ( state, pluginName ) => {\n\t\treturn select( interfaceStore ).isItemPinned( 'core', pluginName );\n\t}\n);\n\n/**\n * Returns an array of active meta box locations.\n *\n * @param {Object} state Post editor state.\n *\n * @return {string[]} Active meta box locations.\n */\nexport const getActiveMetaBoxLocations = createSelector(\n\t( state ) => {\n\t\treturn Object.keys( state.metaBoxes.locations ).filter( ( location ) =>\n\t\t\tisMetaBoxLocationActive( state, location )\n\t\t);\n\t},\n\t( state ) => [ state.metaBoxes.locations ]\n);\n\n/**\n * Returns true if a metabox location is active and visible\n *\n * @param {Object} state    Post editor state.\n * @param {string} location Meta box location to test.\n *\n * @return {boolean} Whether the meta box location is active and visible.\n */\nexport const isMetaBoxLocationVisible = createRegistrySelector(\n\t( select ) => ( state, location ) => {\n\t\treturn (\n\t\t\tisMetaBoxLocationActive( state, location ) &&\n\t\t\tgetMetaBoxesPerLocation( state, location )?.some( ( { id } ) => {\n\t\t\t\treturn select( editorStore ).isEditorPanelEnabled(\n\t\t\t\t\t`meta-box-${ id }`\n\t\t\t\t);\n\t\t\t} )\n\t\t);\n\t}\n);\n\n/**\n * Returns true if there is an active meta box in the given location, or false\n * otherwise.\n *\n * @param {Object} state    Post editor state.\n * @param {string} location Meta box location to test.\n *\n * @return {boolean} Whether the meta box location is active.\n */\nexport function isMetaBoxLocationActive( state, location ) {\n\tconst metaBoxes = getMetaBoxesPerLocation( state, location );\n\treturn !! metaBoxes && metaBoxes.length !== 0;\n}\n\n/**\n * Returns the list of all the available meta boxes for a given location.\n *\n * @param {Object} state    Global application state.\n * @param {string} location Meta box location to test.\n *\n * @return {?Array} List of meta boxes.\n */\nexport function getMetaBoxesPerLocation( state, location ) {\n\treturn state.metaBoxes.locations[ location ];\n}\n\n/**\n * Returns the list of all the available meta boxes.\n *\n * @param {Object} state Global application state.\n *\n * @return {Array} List of meta boxes.\n */\nexport const getAllMetaBoxes = createSelector(\n\t( state ) => {\n\t\treturn Object.values( state.metaBoxes.locations ).flat();\n\t},\n\t( state ) => [ state.metaBoxes.locations ]\n);\n\n/**\n * Returns true if the post is using Meta Boxes\n *\n * @param {Object} state Global application state\n *\n * @return {boolean} Whether there are metaboxes or not.\n */\nexport function hasMetaBoxes( state ) {\n\treturn getActiveMetaBoxLocations( state ).length > 0;\n}\n\n/**\n * Returns true if the Meta Boxes are being saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the metaboxes are being saved.\n */\nexport function isSavingMetaBoxes( state ) {\n\treturn state.metaBoxes.isSaving;\n}\n\n/**\n * Returns the current editing canvas device type.\n *\n * @deprecated\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Device type.\n */\nexport const __experimentalGetPreviewDeviceType = createRegistrySelector(\n\t( select ) => () => {\n\t\tdeprecated(\n\t\t\t`select( 'core/edit-site' ).__experimentalGetPreviewDeviceType`,\n\t\t\t{\n\t\t\t\tsince: '6.5',\n\t\t\t\tversion: '6.7',\n\t\t\t\talternative: `select( 'core/editor' ).getDeviceType`,\n\t\t\t}\n\t\t);\n\t\treturn select( editorStore ).getDeviceType();\n\t}\n);\n\n/**\n * Returns true if the inserter is opened.\n *\n * @deprecated\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the inserter is opened.\n */\nexport const isInserterOpened = createRegistrySelector( ( select ) => () => {\n\tdeprecated( `select( 'core/edit-post' ).isInserterOpened`, {\n\t\tsince: '6.5',\n\t\talternative: `select( 'core/editor' ).isInserterOpened`,\n\t} );\n\treturn select( editorStore ).isInserterOpened();\n} );\n\n/**\n * Get the insertion point for the inserter.\n *\n * @deprecated\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The root client ID, index to insert at and starting filter value.\n */\nexport const __experimentalGetInsertionPoint = createRegistrySelector(\n\t( select ) => () => {\n\t\tdeprecated(\n\t\t\t`select( 'core/edit-post' ).__experimentalGetInsertionPoint`,\n\t\t\t{\n\t\t\t\tsince: '6.5',\n\t\t\t\tversion: '6.7',\n\t\t\t}\n\t\t);\n\t\treturn unlock( select( editorStore ) ).getInserter();\n\t}\n);\n\n/**\n * Returns true if the list view is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the list view is opened.\n */\nexport const isListViewOpened = createRegistrySelector( ( select ) => () => {\n\tdeprecated( `select( 'core/edit-post' ).isListViewOpened`, {\n\t\tsince: '6.5',\n\t\talternative: `select( 'core/editor' ).isListViewOpened`,\n\t} );\n\treturn select( editorStore ).isListViewOpened();\n} );\n\n/**\n * Returns true if the template editing mode is enabled.\n *\n * @deprecated\n */\nexport const isEditingTemplate = createRegistrySelector( ( select ) => () => {\n\tdeprecated( `select( 'core/edit-post' ).isEditingTemplate`, {\n\t\tsince: '6.5',\n\t\talternative: `select( 'core/editor' ).getRenderingMode`,\n\t} );\n\treturn select( editorStore ).getCurrentPostType() === 'wp_template';\n} );\n\n/**\n * Returns true if meta boxes are initialized.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether meta boxes are initialized.\n */\nexport function areMetaBoxesInitialized( state ) {\n\treturn state.metaBoxes.initialized;\n}\n\n/**\n * Retrieves the template of the currently edited post.\n *\n * @return {?Object} Post Template.\n */\nexport const getEditedPostTemplate = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst { id: postId, type: postType } =\n\t\t\tselect( editorStore ).getCurrentPost();\n\t\tconst templateId = unlock( select( coreStore ) ).getTemplateId(\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tif ( ! templateId ) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn select( coreStore ).getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\t'wp_template',\n\t\t\ttemplateId\n\t\t);\n\t}\n);\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { STORE_NAME } from './constants';\n\n/**\n * Store definition for the edit post namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\nregister( store );\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport {\n\tuseShortcut,\n\tstore as keyboardShortcutsStore,\n} from '@wordpress/keyboard-shortcuts';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\nfunction KeyboardShortcuts() {\n\tconst { toggleFullscreenMode } = useDispatch( editPostStore );\n\tconst { registerShortcut } = useDispatch( keyboardShortcutsStore );\n\n\tuseEffect( () => {\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-post/toggle-fullscreen',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Enable or disable fullscreen mode.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'secondary',\n\t\t\t\tcharacter: 'f',\n\t\t\t},\n\t\t} );\n\t}, [] );\n\n\tuseShortcut( 'core/edit-post/toggle-fullscreen', () => {\n\t\ttoggleFullscreenMode();\n\t} );\n\n\treturn null;\n}\n\nexport default KeyboardShortcuts;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tModal,\n\tButton,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tToggleControl,\n\tTextControl,\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { store as editorStore } from '@wordpress/editor';\n\nexport default function InitPatternModal() {\n\tconst { editPost } = useDispatch( editorStore );\n\tconst [ syncType, setSyncType ] = useState( undefined );\n\tconst [ title, setTitle ] = useState( '' );\n\n\tconst { postType, isNewPost } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, isCleanNewPost } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tpostType: getEditedPostAttribute( 'type' ),\n\t\t\tisNewPost: isCleanNewPost(),\n\t\t};\n\t}, [] );\n\tconst [ isModalOpen, setIsModalOpen ] = useState(\n\t\t() => isNewPost && postType === 'wp_block'\n\t);\n\n\tif ( postType !== 'wp_block' || ! isNewPost ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ __( 'Create pattern' ) }\n\t\t\t\t\tonRequestClose={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t\toverlayClassName=\"reusable-blocks-menu-items__convert-modal\"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\teditPost( {\n\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\tmeta: {\n\t\t\t\t\t\t\t\t\twp_pattern_sync_status: syncType,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\t\t\tplaceholder={ __( 'My pattern' ) }\n\t\t\t\t\t\t\t\tclassName=\"patterns-create-modal__name-input\"\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={ _x( 'Synced', 'pattern (singular)' ) }\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Sync this pattern across multiple locations.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tchecked={ ! syncType }\n\t\t\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\t\t\tsetSyncType(\n\t\t\t\t\t\t\t\t\t\t! syncType ? 'unsynced' : undefined\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={ ! title }\n\t\t\t\t\t\t\t\t\taccessibleWhenDisabled\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Create' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t</VStack>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useState } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Returns the Post's Edit URL.\n *\n * @param {number} postId Post ID.\n *\n * @return {string} Post edit URL.\n */\nexport function getPostEditURL( postId ) {\n\treturn addQueryArgs( 'post.php', { post: postId, action: 'edit' } );\n}\n\nexport default function BrowserURL() {\n\tconst [ historyId, setHistoryId ] = useState( null );\n\tconst { postId, postStatus } = useSelect( ( select ) => {\n\t\tconst { getCurrentPost } = select( editorStore );\n\t\tconst post = getCurrentPost();\n\t\tlet { id, status, type } = post;\n\t\tconst isTemplate = [ 'wp_template', 'wp_template_part' ].includes(\n\t\t\ttype\n\t\t);\n\t\tif ( isTemplate ) {\n\t\t\tid = post.wp_id;\n\t\t}\n\n\t\treturn {\n\t\t\tpostId: id,\n\t\t\tpostStatus: status,\n\t\t};\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( postId && postId !== historyId && postStatus !== 'auto-draft' ) {\n\t\t\twindow.history.replaceState(\n\t\t\t\t{ id: postId },\n\t\t\t\t'Post ' + postId,\n\t\t\t\tgetPostEditURL( postId )\n\t\t\t);\n\t\t\tsetHistoryId( postId );\n\t\t}\n\t}, [ postId, postStatus, historyId ] );\n\n\treturn null;\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect } from '@wordpress/element';\nimport { Spinner } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Render metabox area.\n *\n * @param {Object} props          Component props.\n * @param {string} props.location metabox location.\n * @return {Component} The component to be rendered.\n */\nfunction MetaBoxesArea( { location } ) {\n\tconst container = useRef( null );\n\tconst formRef = useRef( null );\n\n\tuseEffect( () => {\n\t\tformRef.current = document.querySelector(\n\t\t\t'.metabox-location-' + location\n\t\t);\n\n\t\tif ( formRef.current ) {\n\t\t\tcontainer.current.appendChild( formRef.current );\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( formRef.current ) {\n\t\t\t\tdocument\n\t\t\t\t\t.querySelector( '#metaboxes' )\n\t\t\t\t\t.appendChild( formRef.current );\n\t\t\t}\n\t\t};\n\t}, [ location ] );\n\n\tconst isSaving = useSelect( ( select ) => {\n\t\treturn select( editPostStore ).isSavingMetaBoxes();\n\t}, [] );\n\n\tconst classes = clsx( 'edit-post-meta-boxes-area', `is-${ location }`, {\n\t\t'is-loading': isSaving,\n\t} );\n\n\treturn (\n\t\t<div className={ classes }>\n\t\t\t{ isSaving && <Spinner /> }\n\t\t\t<div\n\t\t\t\tclassName=\"edit-post-meta-boxes-area__container\"\n\t\t\t\tref={ container }\n\t\t\t/>\n\t\t\t<div className=\"edit-post-meta-boxes-area__clear\" />\n\t\t</div>\n\t);\n}\n\nexport default MetaBoxesArea;\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\n\nexport default function MetaBoxVisibility( { id } ) {\n\tconst isVisible = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( editorStore ).isEditorPanelEnabled(\n\t\t\t\t`meta-box-${ id }`\n\t\t\t);\n\t\t},\n\t\t[ id ]\n\t);\n\n\tuseEffect( () => {\n\t\tconst element = document.getElementById( id );\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isVisible ) {\n\t\t\telement.classList.remove( 'is-hidden' );\n\t\t} else {\n\t\t\telement.classList.add( 'is-hidden' );\n\t\t}\n\t}, [ id, isVisible ] );\n\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport MetaBoxesArea from './meta-boxes-area';\nimport MetaBoxVisibility from './meta-box-visibility';\nimport { store as editPostStore } from '../../store';\n\nexport default function MetaBoxes( { location } ) {\n\tconst metaBoxes = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editPostStore ).getMetaBoxesPerLocation( location ),\n\t\t[ location ]\n\t);\n\treturn (\n\t\t<>\n\t\t\t{ ( metaBoxes ?? [] ).map( ( { id } ) => (\n\t\t\t\t<MetaBoxVisibility key={ id } id={ id } />\n\t\t\t) ) }\n\t\t\t<MetaBoxesArea location={ location } />\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keycodes\"];","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\n\nfunction ManagePatternsMenuItem() {\n\tconst url = useSelect( ( select ) => {\n\t\tconst { canUser } = select( coreStore );\n\t\tconst defaultUrl = addQueryArgs( 'edit.php', {\n\t\t\tpost_type: 'wp_block',\n\t\t} );\n\t\tconst patternsUrl = addQueryArgs( 'site-editor.php', {\n\t\t\tp: '/pattern',\n\t\t} );\n\n\t\t// The site editor and templates both check whether the user has\n\t\t// edit_theme_options capabilities. We can leverage that here and not\n\t\t// display the manage patterns link if the user can't access it.\n\t\treturn canUser( 'create', {\n\t\t\tkind: 'postType',\n\t\t\tname: 'wp_template',\n\t\t} )\n\t\t\t? patternsUrl\n\t\t\t: defaultUrl;\n\t}, [] );\n\n\treturn (\n\t\t<MenuItem role=\"menuitem\" href={ url }>\n\t\t\t{ __( 'Manage patterns' ) }\n\t\t</MenuItem>\n\t);\n}\n\nexport default ManagePatternsMenuItem;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { PreferenceToggleMenuItem } from '@wordpress/preferences';\nimport { __ } from '@wordpress/i18n';\nimport { store as editorStore } from '@wordpress/editor';\n\nexport default function WelcomeGuideMenuItem() {\n\tconst isEditingTemplate = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getCurrentPostType() === 'wp_template',\n\t\t[]\n\t);\n\n\treturn (\n\t\t<PreferenceToggleMenuItem\n\t\t\tscope=\"core/edit-post\"\n\t\t\tname={ isEditingTemplate ? 'welcomeGuideTemplate' : 'welcomeGuide' }\n\t\t\tlabel={ __( 'Welcome Guide' ) }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { privateApis as preferencesPrivateApis } from '@wordpress/preferences';\nimport { getPathAndQueryString } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\nconst { PreferenceBaseOption } = unlock( preferencesPrivateApis );\n\nfunction submitCustomFieldsForm() {\n\tconst customFieldsForm = document.getElementById(\n\t\t'toggle-custom-fields-form'\n\t);\n\n\t// Ensure the referrer values is up to update with any\n\tcustomFieldsForm\n\t\t.querySelector( '[name=\"_wp_http_referer\"]' )\n\t\t.setAttribute( 'value', getPathAndQueryString( window.location.href ) );\n\n\tcustomFieldsForm.submit();\n}\n\nexport function CustomFieldsConfirmation( { willEnable } ) {\n\tconst [ isReloading, setIsReloading ] = useState( false );\n\treturn (\n\t\t<>\n\t\t\t<p className=\"edit-post-preferences-modal__custom-fields-confirmation-message\">\n\t\t\t\t{ __(\n\t\t\t\t\t'A page reload is required for this change. Make sure your content is saved before reloading.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<Button\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tisBusy={ isReloading }\n\t\t\t\taccessibleWhenDisabled\n\t\t\t\tdisabled={ isReloading }\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tsetIsReloading( true );\n\t\t\t\t\tsubmitCustomFieldsForm();\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ willEnable\n\t\t\t\t\t? __( 'Show & Reload Page' )\n\t\t\t\t\t: __( 'Hide & Reload Page' ) }\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\nexport default function EnableCustomFieldsOption( { label } ) {\n\tconst areCustomFieldsEnabled = useSelect( ( select ) => {\n\t\treturn !! select( editorStore ).getEditorSettings().enableCustomFields;\n\t}, [] );\n\tconst [ isChecked, setIsChecked ] = useState( areCustomFieldsEnabled );\n\n\treturn (\n\t\t<PreferenceBaseOption\n\t\t\tlabel={ label }\n\t\t\tisChecked={ isChecked }\n\t\t\tonChange={ setIsChecked }\n\t\t>\n\t\t\t{ isChecked !== areCustomFieldsEnabled && (\n\t\t\t\t<CustomFieldsConfirmation willEnable={ isChecked } />\n\t\t\t) }\n\t\t</PreferenceBaseOption>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { privateApis as preferencesPrivateApis } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\nconst { PreferenceBaseOption } = unlock( preferencesPrivateApis );\n\nexport default function EnablePanelOption( props ) {\n\tconst { toggleEditorPanelEnabled } = useDispatch( editorStore );\n\tconst { isChecked, isRemoved } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { isEditorPanelEnabled, isEditorPanelRemoved } =\n\t\t\t\tselect( editorStore );\n\t\t\treturn {\n\t\t\t\tisChecked: isEditorPanelEnabled( props.panelName ),\n\t\t\t\tisRemoved: isEditorPanelRemoved( props.panelName ),\n\t\t\t};\n\t\t},\n\t\t[ props.panelName ]\n\t);\n\n\tif ( isRemoved ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PreferenceBaseOption\n\t\t\tisChecked={ isChecked }\n\t\t\tonChange={ () => toggleEditorPanelEnabled( props.panelName ) }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { withSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { privateApis as preferencesPrivateApis } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport EnableCustomFieldsOption from './enable-custom-fields';\nimport EnablePanelOption from './enable-panel';\nimport { store as editPostStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst { PreferencesModalSection } = unlock( preferencesPrivateApis );\n\nexport function MetaBoxesSection( {\n\tareCustomFieldsRegistered,\n\tmetaBoxes,\n\t...sectionProps\n} ) {\n\t// The 'Custom Fields' meta box is a special case that we handle separately.\n\tconst thirdPartyMetaBoxes = metaBoxes.filter(\n\t\t( { id } ) => id !== 'postcustom'\n\t);\n\n\tif ( ! areCustomFieldsRegistered && thirdPartyMetaBoxes.length === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PreferencesModalSection { ...sectionProps }>\n\t\t\t{ areCustomFieldsRegistered && (\n\t\t\t\t<EnableCustomFieldsOption label={ __( 'Custom fields' ) } />\n\t\t\t) }\n\t\t\t{ thirdPartyMetaBoxes.map( ( { id, title } ) => (\n\t\t\t\t<EnablePanelOption\n\t\t\t\t\tkey={ id }\n\t\t\t\t\tlabel={ title }\n\t\t\t\t\tpanelName={ `meta-box-${ id }` }\n\t\t\t\t/>\n\t\t\t) ) }\n\t\t</PreferencesModalSection>\n\t);\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getEditorSettings } = select( editorStore );\n\tconst { getAllMetaBoxes } = select( editPostStore );\n\n\treturn {\n\t\t// This setting should not live in the block editor's store.\n\t\tareCustomFieldsRegistered:\n\t\t\tgetEditorSettings().enableCustomFields !== undefined,\n\t\tmetaBoxes: getAllMetaBoxes(),\n\t};\n} )( MetaBoxesSection );\n","/**\n * WordPress dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { privateApis as preferencesPrivateApis } from '@wordpress/preferences';\nimport { privateApis as editorPrivateApis } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport MetaBoxesSection from './meta-boxes-section';\n\nconst { PreferenceToggleControl } = unlock( preferencesPrivateApis );\nconst { PreferencesModal } = unlock( editorPrivateApis );\n\nexport default function EditPostPreferencesModal() {\n\tconst extraSections = {\n\t\tgeneral: <MetaBoxesSection title={ __( 'Advanced' ) } />,\n\t\tappearance: (\n\t\t\t<PreferenceToggleControl\n\t\t\t\tscope=\"core/edit-post\"\n\t\t\t\tfeatureName=\"themeStyles\"\n\t\t\t\thelp={ __( 'Make the editor look like your theme.' ) }\n\t\t\t\tlabel={ __( 'Use theme styles' ) }\n\t\t\t/>\n\t\t),\n\t};\n\n\treturn <PreferencesModal extraSections={ extraSections } />;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { privateApis as editorPrivateApis } from '@wordpress/editor';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { PreferenceToggleMenuItem } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport ManagePatternsMenuItem from './manage-patterns-menu-item';\nimport WelcomeGuideMenuItem from './welcome-guide-menu-item';\nimport EditPostPreferencesModal from '../preferences-modal';\n\nconst { ToolsMoreMenuGroup, ViewMoreMenuGroup } = unlock( editorPrivateApis );\n\nconst MoreMenu = () => {\n\tconst isLargeViewport = useViewportMatch( 'large' );\n\n\treturn (\n\t\t<>\n\t\t\t{ isLargeViewport && (\n\t\t\t\t<ViewMoreMenuGroup>\n\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\tscope=\"core/edit-post\"\n\t\t\t\t\t\tname=\"fullscreenMode\"\n\t\t\t\t\t\tlabel={ __( 'Fullscreen mode' ) }\n\t\t\t\t\t\tinfo={ __( 'Show and hide the admin user interface' ) }\n\t\t\t\t\t\tmessageActivated={ __( 'Fullscreen mode activated.' ) }\n\t\t\t\t\t\tmessageDeactivated={ __(\n\t\t\t\t\t\t\t'Fullscreen mode deactivated.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tshortcut={ displayShortcut.secondary( 'f' ) }\n\t\t\t\t\t/>\n\t\t\t\t</ViewMoreMenuGroup>\n\t\t\t) }\n\t\t\t<ToolsMoreMenuGroup>\n\t\t\t\t<ManagePatternsMenuItem />\n\t\t\t\t<WelcomeGuideMenuItem />\n\t\t\t</ToolsMoreMenuGroup>\n\t\t\t<EditPostPreferencesModal />\n\t\t</>\n\t);\n};\n\nexport default MoreMenu;\n","export default function WelcomeGuideImage( { nonAnimatedSrc, animatedSrc } ) {\n\treturn (\n\t\t<picture className=\"edit-post-welcome-guide__image\">\n\t\t\t<source\n\t\t\t\tsrcSet={ nonAnimatedSrc }\n\t\t\t\tmedia=\"(prefers-reduced-motion: reduce)\"\n\t\t\t/>\n\t\t\t<img src={ animatedSrc } width=\"312\" height=\"240\" alt=\"\" />\n\t\t</picture>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { ExternalLink, Guide } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { createInterpolateElement } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport WelcomeGuideImage from './image';\nimport { store as editPostStore } from '../../store';\n\nexport default function WelcomeGuideDefault() {\n\tconst { toggleFeature } = useDispatch( editPostStore );\n\n\treturn (\n\t\t<Guide\n\t\t\tclassName=\"edit-post-welcome-guide\"\n\t\t\tcontentLabel={ __( 'Welcome to the editor' ) }\n\t\t\tfinishButtonText={ __( 'Get started' ) }\n\t\t\tonFinish={ () => toggleFeature( 'welcomeGuide' ) }\n\t\t\tpages={ [\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-canvas.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-canvas.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Welcome to the editor' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'In the WordPress editor, each paragraph, image, or video is presented as a distinct “block” of content.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-editor.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-editor.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Customize each block' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Each block comes with its own set of controls for changing things like color, width, and alignment. These will show and hide automatically when you have a block selected.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-library.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-library.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Explore all blocks' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ createInterpolateElement(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t'All of the blocks available to you live in the block library. You’ll find it wherever you see the <InserterIconImage /> icon.'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tInserterIconImage: (\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\talt={ __( 'inserter' ) }\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='18' height='18' rx='2' fill='%231E1E1E'/%3E%3Cpath d='M9.22727 4V14M4 8.77273H14' stroke='white' stroke-width='1.5'/%3E%3C/svg%3E%0A\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-documentation.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-documentation.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Learn more' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ createInterpolateElement(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\"New to the block editor? Want to learn more about using it? <a>Here's a detailed guide.</a>\"\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ta: (\n\t\t\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'https://wordpress.org/documentation/article/wordpress-block-editor/'\n\t\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t] }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { Guide } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport WelcomeGuideImage from './image';\nimport { store as editPostStore } from '../../store';\n\nexport default function WelcomeGuideTemplate() {\n\tconst { toggleFeature } = useDispatch( editPostStore );\n\n\treturn (\n\t\t<Guide\n\t\t\tclassName=\"edit-template-welcome-guide\"\n\t\t\tcontentLabel={ __( 'Welcome to the template editor' ) }\n\t\t\tfinishButtonText={ __( 'Get started' ) }\n\t\t\tonFinish={ () => toggleFeature( 'welcomeGuideTemplate' ) }\n\t\t\tpages={ [\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-template-editor.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-template-editor.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-post-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Welcome to the template editor' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-post-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Templates help define the layout of the site. You can customize all aspects of your posts and pages using blocks and patterns in this editor.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t] }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport WelcomeGuideDefault from './default';\nimport WelcomeGuideTemplate from './template';\nimport { store as editPostStore } from '../../store';\n\nexport default function WelcomeGuide( { postType } ) {\n\tconst { isActive, isEditingTemplate } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { isFeatureActive } = select( editPostStore );\n\t\t\tconst _isEditingTemplate = postType === 'wp_template';\n\t\t\tconst feature = _isEditingTemplate\n\t\t\t\t? 'welcomeGuideTemplate'\n\t\t\t\t: 'welcomeGuide';\n\n\t\t\treturn {\n\t\t\t\tisActive: isFeatureActive( feature ),\n\t\t\t\tisEditingTemplate: _isEditingTemplate,\n\t\t\t};\n\t\t},\n\t\t[ postType ]\n\t);\n\n\tif ( ! isActive ) {\n\t\treturn null;\n\t}\n\n\treturn isEditingTemplate ? (\n\t\t<WelcomeGuideTemplate />\n\t) : (\n\t\t<WelcomeGuideDefault />\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst fullscreen = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M6 4a2 2 0 0 0-2 2v3h1.5V6a.5.5 0 0 1 .5-.5h3V4H6Zm3 14.5H6a.5.5 0 0 1-.5-.5v-3H4v3a2 2 0 0 0 2 2h3v-1.5Zm6 1.5v-1.5h3a.5.5 0 0 0 .5-.5v-3H20v3a2 2 0 0 1-2 2h-3Zm3-16a2 2 0 0 1 2 2v3h-1.5V6a.5.5 0 0 0-.5-.5h-3V4h3Z\" />\n\t</SVG>\n);\n\nexport default fullscreen;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAutosaveMonitor,\n\tLocalAutosaveMonitor,\n\tUnsavedChangesWarning,\n\tEditorKeyboardShortcutsRegister,\n\tEditorSnackbars,\n\tErrorBoundary,\n\tPostLockedModal,\n\tstore as editorStore,\n\tprivateApis as editorPrivateApis,\n} from '@wordpress/editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tprivateApis as blockEditorPrivateApis,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { PluginArea } from '@wordpress/plugins';\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tuseCallback,\n\tuseMemo,\n\tuseId,\n\tuseRef,\n\tuseState,\n} from '@wordpress/element';\nimport { chevronDown, chevronUp } from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { privateApis as commandsPrivateApis } from '@wordpress/commands';\nimport { privateApis as blockLibraryPrivateApis } from '@wordpress/block-library';\nimport { addQueryArgs } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { store as coreStore } from '@wordpress/core-data';\nimport {\n\tIcon,\n\tResizableBox,\n\tSlotFillProvider,\n\tTooltip,\n\tVisuallyHidden,\n\t__unstableUseNavigateRegions as useNavigateRegions,\n} from '@wordpress/components';\nimport {\n\tuseMediaQuery,\n\tuseRefEffect,\n\tuseViewportMatch,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BackButton from '../back-button';\nimport EditorInitialization from '../editor-initialization';\nimport EditPostKeyboardShortcuts from '../keyboard-shortcuts';\nimport InitPatternModal from '../init-pattern-modal';\nimport BrowserURL from '../browser-url';\nimport MetaBoxes from '../meta-boxes';\nimport PostEditorMoreMenu from '../more-menu';\nimport WelcomeGuide from '../welcome-guide';\nimport { store as editPostStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\nimport useEditPostCommands from '../../commands/use-commands';\nimport { usePaddingAppender } from './use-padding-appender';\nimport { useShouldIframe } from './use-should-iframe';\nimport useNavigateToEntityRecord from '../../hooks/use-navigate-to-entity-record';\nimport { useMetaBoxInitialization } from '../meta-boxes/use-meta-box-initialization';\n\nconst { getLayoutStyles } = unlock( blockEditorPrivateApis );\nconst { useCommandContext } = unlock( commandsPrivateApis );\nconst { Editor, FullscreenMode, NavigableRegion } = unlock( editorPrivateApis );\nconst { BlockKeyboardShortcuts } = unlock( blockLibraryPrivateApis );\nconst DESIGN_POST_TYPES = [\n\t'wp_template',\n\t'wp_template_part',\n\t'wp_block',\n\t'wp_navigation',\n];\n\nfunction useEditorStyles( ...additionalStyles ) {\n\tconst { hasThemeStyleSupport, editorSettings } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\thasThemeStyleSupport:\n\t\t\t\tselect( editPostStore ).isFeatureActive( 'themeStyles' ),\n\t\t\teditorSettings: select( editorStore ).getEditorSettings(),\n\t\t};\n\t}, [] );\n\n\tconst addedStyles = additionalStyles.join( '\\n' );\n\n\t// Compute the default styles.\n\treturn useMemo( () => {\n\t\tconst presetStyles =\n\t\t\teditorSettings.styles?.filter(\n\t\t\t\t( style ) =>\n\t\t\t\t\tstyle.__unstableType && style.__unstableType !== 'theme'\n\t\t\t) ?? [];\n\n\t\tconst defaultEditorStyles = [\n\t\t\t...( editorSettings?.defaultEditorStyles ?? [] ),\n\t\t\t...presetStyles,\n\t\t];\n\n\t\t// Has theme styles if the theme supports them and if some styles were not preset styles (in which case they're theme styles).\n\t\tconst hasThemeStyles =\n\t\t\thasThemeStyleSupport &&\n\t\t\tpresetStyles.length !== ( editorSettings.styles?.length ?? 0 );\n\n\t\t// If theme styles are not present or displayed, ensure that\n\t\t// base layout styles are still present in the editor.\n\t\tif ( ! editorSettings.disableLayoutStyles && ! hasThemeStyles ) {\n\t\t\tdefaultEditorStyles.push( {\n\t\t\t\tcss: getLayoutStyles( {\n\t\t\t\t\tstyle: {},\n\t\t\t\t\tselector: 'body',\n\t\t\t\t\thasBlockGapSupport: false,\n\t\t\t\t\thasFallbackGapSupport: true,\n\t\t\t\t\tfallbackGapValue: '0.5em',\n\t\t\t\t} ),\n\t\t\t} );\n\t\t}\n\n\t\tconst baseStyles = hasThemeStyles\n\t\t\t? editorSettings.styles ?? []\n\t\t\t: defaultEditorStyles;\n\n\t\tif ( addedStyles ) {\n\t\t\treturn [ ...baseStyles, { css: addedStyles } ];\n\t\t}\n\n\t\treturn baseStyles;\n\t}, [\n\t\teditorSettings.defaultEditorStyles,\n\t\teditorSettings.disableLayoutStyles,\n\t\teditorSettings.styles,\n\t\thasThemeStyleSupport,\n\t\taddedStyles,\n\t] );\n}\n\n/**\n * @param {Object}  props\n * @param {boolean} props.isLegacy True when the editor canvas is not in an iframe.\n */\nfunction MetaBoxesMain( { isLegacy } ) {\n\tconst [ isOpen, openHeight, hasAnyVisible ] = useSelect( ( select ) => {\n\t\tconst { get } = select( preferencesStore );\n\t\tconst { isMetaBoxLocationVisible } = select( editPostStore );\n\t\treturn [\n\t\t\tget( 'core/edit-post', 'metaBoxesMainIsOpen' ),\n\t\t\tget( 'core/edit-post', 'metaBoxesMainOpenHeight' ),\n\t\t\tisMetaBoxLocationVisible( 'normal' ) ||\n\t\t\t\tisMetaBoxLocationVisible( 'advanced' ) ||\n\t\t\t\tisMetaBoxLocationVisible( 'side' ),\n\t\t];\n\t}, [] );\n\tconst { set: setPreference } = useDispatch( preferencesStore );\n\tconst metaBoxesMainRef = useRef();\n\tconst isShort = useMediaQuery( '(max-height: 549px)' );\n\n\tconst [ { min, max }, setHeightConstraints ] = useState( () => ( {} ) );\n\t// Keeps the resizable area’s size constraints updated taking into account\n\t// editor notices. The constraints are also used to derive the value for the\n\t// aria-valuenow attribute on the separator.\n\tconst effectSizeConstraints = useRefEffect( ( node ) => {\n\t\tconst container = node.closest(\n\t\t\t'.interface-interface-skeleton__content'\n\t\t);\n\t\tif ( ! container ) {\n\t\t\treturn;\n\t\t}\n\t\tconst noticeLists = container.querySelectorAll(\n\t\t\t':scope > .components-notice-list'\n\t\t);\n\t\tconst resizeHandle = container.querySelector(\n\t\t\t'.edit-post-meta-boxes-main__presenter'\n\t\t);\n\t\tconst deriveConstraints = () => {\n\t\t\tconst fullHeight = container.offsetHeight;\n\t\t\tlet nextMax = fullHeight;\n\t\t\tfor ( const element of noticeLists ) {\n\t\t\t\tnextMax -= element.offsetHeight;\n\t\t\t}\n\t\t\tconst nextMin = resizeHandle.offsetHeight;\n\t\t\tsetHeightConstraints( { min: nextMin, max: nextMax } );\n\t\t};\n\t\tconst observer = new window.ResizeObserver( deriveConstraints );\n\t\tobserver.observe( container );\n\t\tfor ( const element of noticeLists ) {\n\t\t\tobserver.observe( element );\n\t\t}\n\t\treturn () => observer.disconnect();\n\t}, [] );\n\n\tconst separatorRef = useRef();\n\tconst separatorHelpId = useId();\n\n\tconst [ isUntouched, setIsUntouched ] = useState( true );\n\tconst applyHeight = ( candidateHeight, isPersistent, isInstant ) => {\n\t\tconst nextHeight = Math.min( max, Math.max( min, candidateHeight ) );\n\t\tif ( isPersistent ) {\n\t\t\tsetPreference(\n\t\t\t\t'core/edit-post',\n\t\t\t\t'metaBoxesMainOpenHeight',\n\t\t\t\tnextHeight\n\t\t\t);\n\t\t} else {\n\t\t\tseparatorRef.current.ariaValueNow = getAriaValueNow( nextHeight );\n\t\t}\n\t\tif ( isInstant ) {\n\t\t\tmetaBoxesMainRef.current.updateSize( {\n\t\t\t\theight: nextHeight,\n\t\t\t\t// Oddly, when the event that triggered this was not from the mouse (e.g. keydown),\n\t\t\t\t// if `width` is left unspecified a subsequent drag gesture applies a fixed\n\t\t\t\t// width and the pane fails to widen/narrow with parent width changes from\n\t\t\t\t// sidebars opening/closing or window resizes.\n\t\t\t\twidth: 'auto',\n\t\t\t} );\n\t\t}\n\t};\n\n\tif ( ! hasAnyVisible ) {\n\t\treturn;\n\t}\n\n\tconst contents = (\n\t\t<div\n\t\t\tclassName={ clsx(\n\t\t\t\t// The class name 'edit-post-layout__metaboxes' is retained because some plugins use it.\n\t\t\t\t'edit-post-layout__metaboxes',\n\t\t\t\t! isLegacy && 'edit-post-meta-boxes-main__liner'\n\t\t\t) }\n\t\t\thidden={ ! isLegacy && isShort && ! isOpen }\n\t\t>\n\t\t\t<MetaBoxes location=\"normal\" />\n\t\t\t<MetaBoxes location=\"advanced\" />\n\t\t</div>\n\t);\n\n\tif ( isLegacy ) {\n\t\treturn contents;\n\t}\n\n\tconst isAutoHeight = openHeight === undefined;\n\tlet usedMax = '50%'; // Approximation before max has a value.\n\tif ( max !== undefined ) {\n\t\t// Halves the available max height until a user height is set.\n\t\tusedMax = isAutoHeight && isUntouched ? max / 2 : max;\n\t}\n\n\tconst getAriaValueNow = ( height ) =>\n\t\tMath.round( ( ( height - min ) / ( max - min ) ) * 100 );\n\tconst usedAriaValueNow =\n\t\tmax === undefined || isAutoHeight ? 50 : getAriaValueNow( openHeight );\n\n\tconst toggle = () =>\n\t\tsetPreference( 'core/edit-post', 'metaBoxesMainIsOpen', ! isOpen );\n\n\t// TODO: Support more/all keyboard interactions from the window splitter pattern:\n\t// https://www.w3.org/WAI/ARIA/apg/patterns/windowsplitter/\n\tconst onSeparatorKeyDown = ( event ) => {\n\t\tconst delta = { ArrowUp: 20, ArrowDown: -20 }[ event.key ];\n\t\tif ( delta ) {\n\t\t\tconst pane = metaBoxesMainRef.current.resizable;\n\t\t\tconst fromHeight = isAutoHeight ? pane.offsetHeight : openHeight;\n\t\t\tconst nextHeight = delta + fromHeight;\n\t\t\tapplyHeight( nextHeight, true, true );\n\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\tconst className = 'edit-post-meta-boxes-main';\n\tconst paneLabel = __( 'Meta Boxes' );\n\tlet Pane, paneProps;\n\tif ( isShort ) {\n\t\tPane = NavigableRegion;\n\t\tpaneProps = {\n\t\t\tclassName: clsx( className, 'is-toggle-only' ),\n\t\t};\n\t} else {\n\t\tPane = ResizableBox;\n\t\tpaneProps = /** @type {Parameters<typeof ResizableBox>[0]} */ ( {\n\t\t\tas: NavigableRegion,\n\t\t\tref: metaBoxesMainRef,\n\t\t\tclassName: clsx( className, 'is-resizable' ),\n\t\t\tdefaultSize: { height: openHeight },\n\t\t\tminHeight: min,\n\t\t\tmaxHeight: usedMax,\n\t\t\tenable: {\n\t\t\t\ttop: true,\n\t\t\t\tright: false,\n\t\t\t\tbottom: false,\n\t\t\t\tleft: false,\n\t\t\t\ttopLeft: false,\n\t\t\t\ttopRight: false,\n\t\t\t\tbottomRight: false,\n\t\t\t\tbottomLeft: false,\n\t\t\t},\n\t\t\thandleClasses: { top: 'edit-post-meta-boxes-main__presenter' },\n\t\t\thandleComponent: {\n\t\t\t\ttop: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Tooltip text={ __( 'Drag to resize' ) }>\n\t\t\t\t\t\t\t<button // eslint-disable-line jsx-a11y/role-supports-aria-props\n\t\t\t\t\t\t\t\tref={ separatorRef }\n\t\t\t\t\t\t\t\trole=\"separator\" // eslint-disable-line jsx-a11y/no-interactive-element-to-noninteractive-role\n\t\t\t\t\t\t\t\taria-valuenow={ usedAriaValueNow }\n\t\t\t\t\t\t\t\taria-label={ __( 'Drag to resize' ) }\n\t\t\t\t\t\t\t\taria-describedby={ separatorHelpId }\n\t\t\t\t\t\t\t\tonKeyDown={ onSeparatorKeyDown }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<VisuallyHidden id={ separatorHelpId }>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'Use up and down arrow keys to resize the meta box panel.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t// Avoids hiccups while dragging over objects like iframes and ensures that\n\t\t\t// the event to end the drag is captured by the target (resize handle)\n\t\t\t// whether or not it’s under the pointer.\n\t\t\tonPointerDown: ( { pointerId, target } ) => {\n\t\t\t\tif ( separatorRef.current.parentElement.contains( target ) ) {\n\t\t\t\t\ttarget.setPointerCapture( pointerId );\n\t\t\t\t}\n\t\t\t},\n\t\t\tonResizeStart: ( event, direction, elementRef ) => {\n\t\t\t\tif ( isAutoHeight ) {\n\t\t\t\t\t// Sets the starting height to avoid visual jumps in height and\n\t\t\t\t\t// aria-valuenow being `NaN` for the first (few) resize events.\n\t\t\t\t\tapplyHeight( elementRef.offsetHeight, false, true );\n\t\t\t\t\tsetIsUntouched( false );\n\t\t\t\t}\n\t\t\t},\n\t\t\tonResize: () =>\n\t\t\t\tapplyHeight( metaBoxesMainRef.current.state.height ),\n\t\t\tonResizeStop: () =>\n\t\t\t\tapplyHeight( metaBoxesMainRef.current.state.height, true ),\n\t\t} );\n\t}\n\n\treturn (\n\t\t<Pane aria-label={ paneLabel } { ...paneProps }>\n\t\t\t{ isShort ? (\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\tclassName=\"edit-post-meta-boxes-main__presenter\"\n\t\t\t\t\tonClick={ toggle }\n\t\t\t\t>\n\t\t\t\t\t{ paneLabel }\n\t\t\t\t\t<Icon icon={ isOpen ? chevronUp : chevronDown } />\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<meta ref={ effectSizeConstraints } />\n\t\t\t) }\n\t\t\t{ contents }\n\t\t</Pane>\n\t);\n}\n\nfunction Layout( {\n\tpostId: initialPostId,\n\tpostType: initialPostType,\n\tsettings,\n\tinitialEdits,\n} ) {\n\tuseEditPostCommands();\n\tconst shouldIframe = useShouldIframe();\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\tconst {\n\t\tcurrentPost: { postId: currentPostId, postType: currentPostType },\n\t\tonNavigateToEntityRecord,\n\t\tonNavigateToPreviousEntityRecord,\n\t} = useNavigateToEntityRecord(\n\t\tinitialPostId,\n\t\tinitialPostType,\n\t\t'post-only'\n\t);\n\tconst isEditingTemplate = currentPostType === 'wp_template';\n\tconst {\n\t\tmode,\n\t\tisFullscreenActive,\n\t\thasResolvedMode,\n\t\thasActiveMetaboxes,\n\t\thasBlockSelected,\n\t\tshowIconLabels,\n\t\tisDistractionFree,\n\t\tshowMetaBoxes,\n\t\tisWelcomeGuideVisible,\n\t\ttemplateId,\n\t\tenablePaddingAppender,\n\t\tisDevicePreview,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { get } = select( preferencesStore );\n\t\t\tconst { isFeatureActive, hasMetaBoxes } = select( editPostStore );\n\t\t\tconst { canUser, getPostType, getTemplateId } = unlock(\n\t\t\t\tselect( coreStore )\n\t\t\t);\n\n\t\t\tconst supportsTemplateMode = settings.supportsTemplateMode;\n\t\t\tconst isViewable =\n\t\t\t\tgetPostType( currentPostType )?.viewable ?? false;\n\t\t\tconst canViewTemplate = canUser( 'read', {\n\t\t\t\tkind: 'postType',\n\t\t\t\tname: 'wp_template',\n\t\t\t} );\n\t\t\tconst { getBlockSelectionStart, isZoomOut } = unlock(\n\t\t\t\tselect( blockEditorStore )\n\t\t\t);\n\t\t\tconst {\n\t\t\t\tgetEditorMode,\n\t\t\t\tgetRenderingMode,\n\t\t\t\tgetDefaultRenderingMode,\n\t\t\t\tgetDeviceType,\n\t\t\t} = unlock( select( editorStore ) );\n\t\t\tconst isRenderingPostOnly = getRenderingMode() === 'post-only';\n\t\t\tconst isNotDesignPostType =\n\t\t\t\t! DESIGN_POST_TYPES.includes( currentPostType );\n\t\t\tconst isDirectlyEditingPattern =\n\t\t\t\tcurrentPostType === 'wp_block' &&\n\t\t\t\t! onNavigateToPreviousEntityRecord;\n\t\t\tconst _templateId = getTemplateId( currentPostType, currentPostId );\n\t\t\tconst defaultMode = getDefaultRenderingMode( currentPostType );\n\n\t\t\treturn {\n\t\t\t\tmode: getEditorMode(),\n\t\t\t\tisFullscreenActive: isFeatureActive( 'fullscreenMode' ),\n\t\t\t\thasActiveMetaboxes: hasMetaBoxes(),\n\t\t\t\thasResolvedMode:\n\t\t\t\t\tdefaultMode === 'template-locked'\n\t\t\t\t\t\t? !! _templateId\n\t\t\t\t\t\t: defaultMode !== undefined,\n\t\t\t\thasBlockSelected: !! getBlockSelectionStart(),\n\t\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\t\tisDistractionFree: get( 'core', 'distractionFree' ),\n\t\t\t\tshowMetaBoxes:\n\t\t\t\t\t( isNotDesignPostType && ! isZoomOut() ) ||\n\t\t\t\t\tisDirectlyEditingPattern,\n\t\t\t\tisWelcomeGuideVisible: isFeatureActive( 'welcomeGuide' ),\n\t\t\t\ttemplateId:\n\t\t\t\t\tsupportsTemplateMode &&\n\t\t\t\t\tisViewable &&\n\t\t\t\t\tcanViewTemplate &&\n\t\t\t\t\t! isEditingTemplate\n\t\t\t\t\t\t? _templateId\n\t\t\t\t\t\t: null,\n\t\t\t\tenablePaddingAppender:\n\t\t\t\t\t! isZoomOut() && isRenderingPostOnly && isNotDesignPostType,\n\t\t\t\tisDevicePreview: getDeviceType() !== 'Desktop',\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tcurrentPostType,\n\t\t\tcurrentPostId,\n\t\t\tisEditingTemplate,\n\t\t\tsettings.supportsTemplateMode,\n\t\t\tonNavigateToPreviousEntityRecord,\n\t\t]\n\t);\n\n\tuseMetaBoxInitialization( hasActiveMetaboxes && hasResolvedMode );\n\n\tconst [ paddingAppenderRef, paddingStyle ] = usePaddingAppender(\n\t\tenablePaddingAppender\n\t);\n\n\t// Set the right context for the command palette\n\tconst commandContext = hasBlockSelected\n\t\t? 'block-selection-edit'\n\t\t: 'entity-edit';\n\tuseCommandContext( commandContext );\n\tconst editorSettings = useMemo(\n\t\t() => ( {\n\t\t\t...settings,\n\t\t\tonNavigateToEntityRecord,\n\t\t\tonNavigateToPreviousEntityRecord,\n\t\t\tdefaultRenderingMode: 'post-only',\n\t\t} ),\n\t\t[ settings, onNavigateToEntityRecord, onNavigateToPreviousEntityRecord ]\n\t);\n\tconst styles = useEditorStyles( paddingStyle );\n\n\t// We need to add the show-icon-labels class to the body element so it is applied to modals.\n\tif ( showIconLabels ) {\n\t\tdocument.body.classList.add( 'show-icon-labels' );\n\t} else {\n\t\tdocument.body.classList.remove( 'show-icon-labels' );\n\t}\n\n\tconst navigateRegionsProps = useNavigateRegions();\n\n\tconst className = clsx( 'edit-post-layout', 'is-mode-' + mode, {\n\t\t'has-metaboxes': hasActiveMetaboxes,\n\t} );\n\n\tfunction onPluginAreaError( name ) {\n\t\tcreateErrorNotice(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s: plugin name */\n\t\t\t\t__(\n\t\t\t\t\t'The \"%s\" plugin has encountered an error and cannot be rendered.'\n\t\t\t\t),\n\t\t\t\tname\n\t\t\t)\n\t\t);\n\t}\n\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\n\tconst onActionPerformed = useCallback(\n\t\t( actionId, items ) => {\n\t\t\tswitch ( actionId ) {\n\t\t\t\tcase 'move-to-trash':\n\t\t\t\t\t{\n\t\t\t\t\t\tdocument.location.href = addQueryArgs( 'edit.php', {\n\t\t\t\t\t\t\ttrashed: 1,\n\t\t\t\t\t\t\tpost_type: items[ 0 ].type,\n\t\t\t\t\t\t\tids: items[ 0 ].id,\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'duplicate-post':\n\t\t\t\t\t{\n\t\t\t\t\t\tconst newItem = items[ 0 ];\n\t\t\t\t\t\tconst title =\n\t\t\t\t\t\t\ttypeof newItem.title === 'string'\n\t\t\t\t\t\t\t\t? newItem.title\n\t\t\t\t\t\t\t\t: newItem.title?.rendered;\n\t\t\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t// translators: %s: Title of the created post or template, e.g: \"Hello world\".\n\t\t\t\t\t\t\t\t__( '\"%s\" successfully created.' ),\n\t\t\t\t\t\t\t\tdecodeEntities( title )\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\tid: 'duplicate-post-action',\n\t\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: __( 'Edit' ),\n\t\t\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\t\t\tconst postId = newItem.id;\n\t\t\t\t\t\t\t\t\t\t\tdocument.location.href =\n\t\t\t\t\t\t\t\t\t\t\t\taddQueryArgs( 'post.php', {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: postId,\n\t\t\t\t\t\t\t\t\t\t\t\t\taction: 'edit',\n\t\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t[ createSuccessNotice ]\n\t);\n\n\tconst initialPost = useMemo( () => {\n\t\treturn {\n\t\t\ttype: initialPostType,\n\t\t\tid: initialPostId,\n\t\t};\n\t}, [ initialPostType, initialPostId ] );\n\n\tconst backButton =\n\t\tuseViewportMatch( 'medium' ) && isFullscreenActive ? (\n\t\t\t<BackButton initialPost={ initialPost } />\n\t\t) : null;\n\n\treturn (\n\t\t<SlotFillProvider>\n\t\t\t<ErrorBoundary canCopyContent>\n\t\t\t\t<WelcomeGuide postType={ currentPostType } />\n\t\t\t\t<div\n\t\t\t\t\tclassName={ navigateRegionsProps.className }\n\t\t\t\t\t{ ...navigateRegionsProps }\n\t\t\t\t\tref={ navigateRegionsProps.ref }\n\t\t\t\t>\n\t\t\t\t\t<Editor\n\t\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t\t\t\tpostType={ currentPostType }\n\t\t\t\t\t\tpostId={ currentPostId }\n\t\t\t\t\t\ttemplateId={ templateId }\n\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\tstyles={ styles }\n\t\t\t\t\t\tforceIsDirty={ hasActiveMetaboxes }\n\t\t\t\t\t\tcontentRef={ paddingAppenderRef }\n\t\t\t\t\t\tdisableIframe={ ! shouldIframe }\n\t\t\t\t\t\t// We should auto-focus the canvas (title) on load.\n\t\t\t\t\t\t// eslint-disable-next-line jsx-a11y/no-autofocus\n\t\t\t\t\t\tautoFocus={ ! isWelcomeGuideVisible }\n\t\t\t\t\t\tonActionPerformed={ onActionPerformed }\n\t\t\t\t\t\textraSidebarPanels={\n\t\t\t\t\t\t\tshowMetaBoxes && <MetaBoxes location=\"side\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\textraContent={\n\t\t\t\t\t\t\t! isDistractionFree &&\n\t\t\t\t\t\t\tshowMetaBoxes && (\n\t\t\t\t\t\t\t\t<MetaBoxesMain\n\t\t\t\t\t\t\t\t\tisLegacy={\n\t\t\t\t\t\t\t\t\t\t! shouldIframe || isDevicePreview\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<PostLockedModal />\n\t\t\t\t\t\t<EditorInitialization />\n\t\t\t\t\t\t<FullscreenMode isActive={ isFullscreenActive } />\n\t\t\t\t\t\t<BrowserURL />\n\t\t\t\t\t\t<UnsavedChangesWarning />\n\t\t\t\t\t\t<AutosaveMonitor />\n\t\t\t\t\t\t<LocalAutosaveMonitor />\n\t\t\t\t\t\t<EditPostKeyboardShortcuts />\n\t\t\t\t\t\t<EditorKeyboardShortcutsRegister />\n\t\t\t\t\t\t<BlockKeyboardShortcuts />\n\t\t\t\t\t\t<InitPatternModal />\n\t\t\t\t\t\t<PluginArea onError={ onPluginAreaError } />\n\t\t\t\t\t\t<PostEditorMoreMenu />\n\t\t\t\t\t\t{ backButton }\n\t\t\t\t\t\t<EditorSnackbars />\n\t\t\t\t\t</Editor>\n\t\t\t\t</div>\n\t\t\t</ErrorBoundary>\n\t\t</SlotFillProvider>\n\t);\n}\n\nexport default Layout;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { fullscreen } from '@wordpress/icons';\nimport { useCommand } from '@wordpress/commands';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { store as noticesStore } from '@wordpress/notices';\n\nexport default function useCommands() {\n\tconst { isFullscreen } = useSelect( ( select ) => {\n\t\tconst { get } = select( preferencesStore );\n\n\t\treturn {\n\t\t\tisFullscreen: get( 'core/edit-post', 'fullscreenMode' ),\n\t\t};\n\t}, [] );\n\tconst { toggle } = useDispatch( preferencesStore );\n\tconst { createInfoNotice } = useDispatch( noticesStore );\n\n\tuseCommand( {\n\t\tname: 'core/toggle-fullscreen-mode',\n\t\tlabel: isFullscreen\n\t\t\t? __( 'Exit fullscreen' )\n\t\t\t: __( 'Enter fullscreen' ),\n\t\ticon: fullscreen,\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggle( 'core/edit-post', 'fullscreenMode' );\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tisFullscreen ? __( 'Fullscreen off.' ) : __( 'Fullscreen on.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/edit-post/toggle-fullscreen-mode/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\ttoggle( 'core/edit-post', 'fullscreenMode' );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n}\n","/**\n * WordPress dependencies\n */\nimport { store as editorStore } from '@wordpress/editor';\nimport { useSelect } from '@wordpress/data';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\nconst isGutenbergPlugin = globalThis.IS_GUTENBERG_PLUGIN ? true : false;\n\nexport function useShouldIframe() {\n\treturn useSelect( ( select ) => {\n\t\tconst { getEditorSettings, getCurrentPostType, getDeviceType } =\n\t\t\tselect( editorStore );\n\t\treturn (\n\t\t\t// If the theme is block based and the Gutenberg plugin is active,\n\t\t\t// we ALWAYS use the iframe for consistency across the post and site\n\t\t\t// editor.\n\t\t\t( isGutenbergPlugin &&\n\t\t\t\tgetEditorSettings().__unstableIsBlockBasedTheme ) ||\n\t\t\t// We also still want to iframe all the special\n\t\t\t// editor features and modes such as device previews, zoom out, and\n\t\t\t// template/pattern editing.\n\t\t\tgetDeviceType() !== 'Desktop' ||\n\t\t\t[ 'wp_template', 'wp_block' ].includes( getCurrentPostType() ) ||\n\t\t\tunlock( select( blockEditorStore ) ).isZoomOut() ||\n\t\t\t// Finally, still iframe the editor if all blocks are v3 (which means\n\t\t\t// they are marked as iframe-compatible).\n\t\t\tselect( blocksStore )\n\t\t\t\t.getBlockTypes()\n\t\t\t\t.every( ( type ) => type.apiVersion >= 3 )\n\t\t);\n\t}, [] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useCallback, useReducer } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * A hook that records the 'entity' history in the post editor as a user\n * navigates between editing a post and editing the post template or patterns.\n *\n * Implemented as a stack, so a little similar to the browser history API.\n *\n * Used to control displaying UI elements like the back button.\n *\n * @param {number} initialPostId        The post id of the post when the editor loaded.\n * @param {string} initialPostType      The post type of the post when the editor loaded.\n * @param {string} defaultRenderingMode The rendering mode to switch to when navigating.\n *\n * @return {Object} An object containing the `currentPost` variable and\n *                 `onNavigateToEntityRecord` and `onNavigateToPreviousEntityRecord` functions.\n */\nexport default function useNavigateToEntityRecord(\n\tinitialPostId,\n\tinitialPostType,\n\tdefaultRenderingMode\n) {\n\tconst [ postHistory, dispatch ] = useReducer(\n\t\t( historyState, { type, post, previousRenderingMode } ) => {\n\t\t\tif ( type === 'push' ) {\n\t\t\t\treturn [ ...historyState, { post, previousRenderingMode } ];\n\t\t\t}\n\t\t\tif ( type === 'pop' ) {\n\t\t\t\t// Try to leave one item in the history.\n\t\t\t\tif ( historyState.length > 1 ) {\n\t\t\t\t\treturn historyState.slice( 0, -1 );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn historyState;\n\t\t},\n\t\t[\n\t\t\t{\n\t\t\t\tpost: { postId: initialPostId, postType: initialPostType },\n\t\t\t},\n\t\t]\n\t);\n\n\tconst { post, previousRenderingMode } =\n\t\tpostHistory[ postHistory.length - 1 ];\n\n\tconst { getRenderingMode } = useSelect( editorStore );\n\tconst { setRenderingMode } = useDispatch( editorStore );\n\n\tconst onNavigateToEntityRecord = useCallback(\n\t\t( params ) => {\n\t\t\tdispatch( {\n\t\t\t\ttype: 'push',\n\t\t\t\tpost: { postId: params.postId, postType: params.postType },\n\t\t\t\t// Save the current rendering mode so we can restore it when navigating back.\n\t\t\t\tpreviousRenderingMode: getRenderingMode(),\n\t\t\t} );\n\t\t\tsetRenderingMode( defaultRenderingMode );\n\t\t},\n\t\t[ getRenderingMode, setRenderingMode, defaultRenderingMode ]\n\t);\n\n\tconst onNavigateToPreviousEntityRecord = useCallback( () => {\n\t\tdispatch( { type: 'pop' } );\n\t\tif ( previousRenderingMode ) {\n\t\t\tsetRenderingMode( previousRenderingMode );\n\t\t}\n\t}, [ setRenderingMode, previousRenderingMode ] );\n\n\treturn {\n\t\tcurrentPost: post,\n\t\tonNavigateToEntityRecord,\n\t\tonNavigateToPreviousEntityRecord:\n\t\t\tpostHistory.length > 1\n\t\t\t\t? onNavigateToPreviousEntityRecord\n\t\t\t\t: undefined,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../store';\n\n/**\n * Initializes WordPress `postboxes` script and the logic for saving meta boxes.\n *\n * @param { boolean } enabled\n */\nexport const useMetaBoxInitialization = ( enabled ) => {\n\tconst isEnabledAndEditorReady = useSelect(\n\t\t( select ) =>\n\t\t\tenabled && select( editorStore ).__unstableIsEditorReady(),\n\t\t[ enabled ]\n\t);\n\tconst { initializeMetaBoxes } = useDispatch( editPostStore );\n\t// The effect has to rerun when the editor is ready because initializeMetaBoxes\n\t// will noop until then.\n\tuseEffect( () => {\n\t\tif ( isEnabledAndEditorReady ) {\n\t\t\tinitializeMetaBoxes();\n\t\t}\n\t}, [ isEnabledAndEditorReady, initializeMetaBoxes ] );\n};\n","/**\n * WordPress dependencies\n */\nimport { useRegistry } from '@wordpress/data';\nimport { useRefEffect } from '@wordpress/compose';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { isUnmodifiedDefaultBlock } from '@wordpress/blocks';\n\n// Ruleset to add space for the typewriter effect. When typing in the last\n// block, there needs to be room to scroll up.\nconst CSS =\n\t':root :where(.editor-styles-wrapper)::after {content: \"\"; display: block; height: 40vh;}';\n\nexport function usePaddingAppender( enabled ) {\n\tconst registry = useRegistry();\n\tconst effect = useRefEffect(\n\t\t( node ) => {\n\t\t\tfunction onMouseDown( event ) {\n\t\t\t\tif (\n\t\t\t\t\tevent.target !== node &&\n\t\t\t\t\t// Tests for the parent element because in the iframed editor if the click is\n\t\t\t\t\t// below the padding the target will be the parent element (html) and should\n\t\t\t\t\t// still be treated as intent to append.\n\t\t\t\t\tevent.target !== node.parentElement\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Only handle clicks under the last child.\n\t\t\t\tconst lastChild = node.lastElementChild;\n\t\t\t\tif ( ! lastChild ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst lastChildRect = lastChild.getBoundingClientRect();\n\t\t\t\tif ( event.clientY < lastChildRect.bottom ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tconst blockOrder = registry\n\t\t\t\t\t.select( blockEditorStore )\n\t\t\t\t\t.getBlockOrder( '' );\n\t\t\t\tconst lastBlockClientId = blockOrder[ blockOrder.length - 1 ];\n\n\t\t\t\tconst lastBlock = registry\n\t\t\t\t\t.select( blockEditorStore )\n\t\t\t\t\t.getBlock( lastBlockClientId );\n\t\t\t\tconst { selectBlock, insertDefaultBlock } =\n\t\t\t\t\tregistry.dispatch( blockEditorStore );\n\n\t\t\t\tif ( lastBlock && isUnmodifiedDefaultBlock( lastBlock ) ) {\n\t\t\t\t\tselectBlock( lastBlockClientId );\n\t\t\t\t} else {\n\t\t\t\t\tinsertDefaultBlock();\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst { ownerDocument } = node;\n\t\t\t// Adds the listener on the document so that in the iframed editor clicks below the\n\t\t\t// padding can be handled as they too should be treated as intent to append.\n\t\t\townerDocument.addEventListener( 'mousedown', onMouseDown );\n\t\t\treturn () => {\n\t\t\t\townerDocument.removeEventListener( 'mousedown', onMouseDown );\n\t\t\t};\n\t\t},\n\t\t[ registry ]\n\t);\n\treturn enabled ? [ effect, CSS ] : [];\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tprivateApis as editorPrivateApis,\n\tPluginBlockSettingsMenuItem as EditorPluginBlockSettingsMenuItem,\n\tPluginDocumentSettingPanel as EditorPluginDocumentSettingPanel,\n\tPluginMoreMenuItem as EditorPluginMoreMenuItem,\n\tPluginPrePublishPanel as EditorPluginPrePublishPanel,\n\tPluginPostPublishPanel as EditorPluginPostPublishPanel,\n\tPluginPostStatusInfo as EditorPluginPostStatusInfo,\n\tPluginSidebar as EditorPluginSidebar,\n\tPluginSidebarMoreMenuItem as EditorPluginSidebarMoreMenuItem,\n} from '@wordpress/editor';\nimport { getPath } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from './lock-unlock';\nconst { PluginPostExcerpt } = unlock( editorPrivateApis );\n\nconst isSiteEditor = getPath( window.location.href )?.includes(\n\t'site-editor.php'\n);\n\nconst deprecateSlot = ( name ) => {\n\tdeprecated( `wp.editPost.${ name }`, {\n\t\tsince: '6.6',\n\t\talternative: `wp.editor.${ name }`,\n\t} );\n};\n\n/* eslint-disable jsdoc/require-param */\n/**\n * @see PluginBlockSettingsMenuItem in @wordpress/editor package.\n */\nexport function PluginBlockSettingsMenuItem( props ) {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecateSlot( 'PluginBlockSettingsMenuItem' );\n\treturn <EditorPluginBlockSettingsMenuItem { ...props } />;\n}\n\n/**\n * @see PluginDocumentSettingPanel in @wordpress/editor package.\n */\nexport function PluginDocumentSettingPanel( props ) {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecateSlot( 'PluginDocumentSettingPanel' );\n\treturn <EditorPluginDocumentSettingPanel { ...props } />;\n}\n\n/**\n * @see PluginMoreMenuItem in @wordpress/editor package.\n */\nexport function PluginMoreMenuItem( props ) {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecateSlot( 'PluginMoreMenuItem' );\n\treturn <EditorPluginMoreMenuItem { ...props } />;\n}\n\n/**\n * @see PluginPrePublishPanel in @wordpress/editor package.\n */\nexport function PluginPrePublishPanel( props ) {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecateSlot( 'PluginPrePublishPanel' );\n\treturn <EditorPluginPrePublishPanel { ...props } />;\n}\n\n/**\n * @see PluginPostPublishPanel in @wordpress/editor package.\n */\nexport function PluginPostPublishPanel( props ) {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecateSlot( 'PluginPostPublishPanel' );\n\treturn <EditorPluginPostPublishPanel { ...props } />;\n}\n\n/**\n * @see PluginPostStatusInfo in @wordpress/editor package.\n */\nexport function PluginPostStatusInfo( props ) {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecateSlot( 'PluginPostStatusInfo' );\n\treturn <EditorPluginPostStatusInfo { ...props } />;\n}\n\n/**\n * @see PluginSidebar in @wordpress/editor package.\n */\nexport function PluginSidebar( props ) {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecateSlot( 'PluginSidebar' );\n\treturn <EditorPluginSidebar { ...props } />;\n}\n\n/**\n * @see PluginSidebarMoreMenuItem in @wordpress/editor package.\n */\nexport function PluginSidebarMoreMenuItem( props ) {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecateSlot( 'PluginSidebarMoreMenuItem' );\n\treturn <EditorPluginSidebarMoreMenuItem { ...props } />;\n}\n\n/**\n * @see PluginPostExcerpt in @wordpress/editor package.\n */\nexport function __experimentalPluginPostExcerpt() {\n\tif ( isSiteEditor ) {\n\t\treturn null;\n\t}\n\tdeprecated( 'wp.editPost.__experimentalPluginPostExcerpt', {\n\t\tsince: '6.6',\n\t\thint: 'Core and custom panels can be access programmatically using their panel name.',\n\t\tlink: 'https://developer.wordpress.org/block-editor/reference-guides/slotfills/plugin-document-setting-panel/#accessing-a-panel-programmatically',\n\t} );\n\treturn PluginPostExcerpt;\n}\n\n/* eslint-enable jsdoc/require-param */\n","/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport {\n\tregisterCoreBlocks,\n\t__experimentalRegisterExperimentalCoreBlocks,\n} from '@wordpress/block-library';\nimport deprecated from '@wordpress/deprecated';\nimport { createRoot, StrictMode } from '@wordpress/element';\nimport { dispatch, select } from '@wordpress/data';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport {\n\tregisterLegacyWidgetBlock,\n\tregisterWidgetGroupBlock,\n} from '@wordpress/widgets';\nimport {\n\tstore as editorStore,\n\tprivateApis as editorPrivateApis,\n} from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport Layout from './components/layout';\nimport { unlock } from './lock-unlock';\n\nconst {\n\tBackButton: __experimentalMainDashboardButton,\n\tregisterCoreBlockBindingsSources,\n} = unlock( editorPrivateApis );\n\n/**\n * Initializes and returns an instance of Editor.\n *\n * @param {string}  id           Unique identifier for editor instance.\n * @param {string}  postType     Post type of the post to edit.\n * @param {Object}  postId       ID of the post to edit.\n * @param {?Object} settings     Editor settings object.\n * @param {Object}  initialEdits Programmatic edits to apply initially, to be\n *                               considered as non-user-initiated (bypass for\n *                               unsaved changes prompt).\n */\nexport function initializeEditor(\n\tid,\n\tpostType,\n\tpostId,\n\tsettings,\n\tinitialEdits\n) {\n\tconst isMediumOrBigger = window.matchMedia( '(min-width: 782px)' ).matches;\n\tconst target = document.getElementById( id );\n\tconst root = createRoot( target );\n\n\tdispatch( preferencesStore ).setDefaults( 'core/edit-post', {\n\t\tfullscreenMode: true,\n\t\tthemeStyles: true,\n\t\twelcomeGuide: true,\n\t\twelcomeGuideTemplate: true,\n\t} );\n\n\tdispatch( preferencesStore ).setDefaults( 'core', {\n\t\tallowRightClickOverrides: true,\n\t\teditorMode: 'visual',\n\t\teditorTool: 'edit',\n\t\tfixedToolbar: false,\n\t\thiddenBlockTypes: [],\n\t\tinactivePanels: [],\n\t\topenPanels: [ 'post-status' ],\n\t\tshowBlockBreadcrumbs: true,\n\t\tshowIconLabels: false,\n\t\tshowListViewByDefault: false,\n\t\tenableChoosePatternModal: true,\n\t\tisPublishSidebarEnabled: true,\n\t} );\n\n\tif ( window.__experimentalMediaProcessing ) {\n\t\tdispatch( preferencesStore ).setDefaults( 'core/media', {\n\t\t\trequireApproval: true,\n\t\t\toptimizeOnUpload: true,\n\t\t} );\n\t}\n\n\tdispatch( blocksStore ).reapplyBlockTypeFilters();\n\n\t// Check if the block list view should be open by default.\n\t// If `distractionFree` mode is enabled, the block list view should not be open.\n\t// This behavior is disabled for small viewports.\n\tif (\n\t\tisMediumOrBigger &&\n\t\tselect( preferencesStore ).get( 'core', 'showListViewByDefault' ) &&\n\t\t! select( preferencesStore ).get( 'core', 'distractionFree' )\n\t) {\n\t\tdispatch( editorStore ).setIsListViewOpened( true );\n\t}\n\n\tregisterCoreBlocks();\n\tregisterCoreBlockBindingsSources();\n\tregisterLegacyWidgetBlock( { inserter: false } );\n\tregisterWidgetGroupBlock( { inserter: false } );\n\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\n\t\t__experimentalRegisterExperimentalCoreBlocks( {\n\t\t\tenableFSEBlocks: settings.__unstableEnableFullSiteEditingBlocks,\n\t\t} );\n\t}\n\n\t// Show a console log warning if the browser is not in Standards rendering mode.\n\tconst documentMode =\n\t\tdocument.compatMode === 'CSS1Compat' ? 'Standards' : 'Quirks';\n\tif ( documentMode !== 'Standards' ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(\n\t\t\t\"Your browser is using Quirks Mode. \\nThis can cause rendering issues such as blocks overlaying meta boxes in the editor. Quirks Mode can be triggered by PHP errors or HTML code appearing before the opening <!DOCTYPE html>. Try checking the raw page source or your site's PHP error log and resolving errors there, removing any HTML before the doctype, or disabling plugins.\"\n\t\t);\n\t}\n\n\t// This is a temporary fix for a couple of issues specific to Webkit on iOS.\n\t// Without this hack the browser scrolls the mobile toolbar off-screen.\n\t// Once supported in Safari we can replace this in favor of preventScroll.\n\t// For details see issue #18632 and PR #18686\n\t// Specifically, we scroll `interface-interface-skeleton__body` to enable a fixed top toolbar.\n\t// But Mobile Safari forces the `html` element to scroll upwards, hiding the toolbar.\n\n\tconst isIphone = window.navigator.userAgent.indexOf( 'iPhone' ) !== -1;\n\tif ( isIphone ) {\n\t\twindow.addEventListener( 'scroll', ( event ) => {\n\t\t\tconst editorScrollContainer = document.getElementsByClassName(\n\t\t\t\t'interface-interface-skeleton__body'\n\t\t\t)[ 0 ];\n\t\t\tif ( event.target === document ) {\n\t\t\t\t// Scroll element into view by scrolling the editor container by the same amount\n\t\t\t\t// that Mobile Safari tried to scroll the html element upwards.\n\t\t\t\tif ( window.scrollY > 100 ) {\n\t\t\t\t\teditorScrollContainer.scrollTop =\n\t\t\t\t\t\teditorScrollContainer.scrollTop + window.scrollY;\n\t\t\t\t}\n\t\t\t\t// Undo unwanted scroll on html element, but only in the visual editor.\n\t\t\t\tif (\n\t\t\t\t\tdocument.getElementsByClassName( 'is-mode-visual' )[ 0 ]\n\t\t\t\t) {\n\t\t\t\t\twindow.scrollTo( 0, 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t// Prevent the default browser action for files dropped outside of dropzones.\n\twindow.addEventListener( 'dragover', ( e ) => e.preventDefault(), false );\n\twindow.addEventListener( 'drop', ( e ) => e.preventDefault(), false );\n\n\troot.render(\n\t\t<StrictMode>\n\t\t\t<Layout\n\t\t\t\tsettings={ settings }\n\t\t\t\tpostId={ postId }\n\t\t\t\tpostType={ postType }\n\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t/>\n\t\t</StrictMode>\n\t);\n\n\treturn root;\n}\n\n/**\n * Used to reinitialize the editor after an error. Now it's a deprecated noop function.\n */\nexport function reinitializeEditor() {\n\tdeprecated( 'wp.editPost.reinitializeEditor', {\n\t\tsince: '6.2',\n\t\tversion: '6.3',\n\t} );\n}\n\nexport { default as __experimentalFullscreenModeClose } from './components/back-button/fullscreen-mode-close';\nexport { __experimentalMainDashboardButton };\nexport { store } from './store';\nexport * from './deprecated';\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","r","e","t","f","n","Array","isArray","length","arguments","_jsx","SVG","viewBox","xmlns","children","Path","showTooltip","icon","href","initialPost","_postType$labels$view","isRequestingSiteIcon","postType","siteIconUrl","useSelect","select","getCurrentPostType","editorStore","getEntityRecord","getPostType","isResolving","coreStore","siteData","undefined","_postType","type","site_icon_url","disableMotion","useReducedMotion","buttonIcon","Icon","size","wordpress","motion","img","variants","expand","scale","transition","duration","alt","__","className","src","classes","clsx","buttonHref","addQueryArgs","post_type","slug","buttonLabel","labels","view_items","div","whileHover","Button","__next40pxDefaultSize","label","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","BackButton","BackButtonFill","editorPrivateApis","slideX","hidden","x","distractionFreeInactive","hover","delay","FullscreenModeClose","EditorInitialization","useUpdatePostLinkListener","isViewable","newPermalink","getCurrentPost","getEditedPostAttribute","viewable","link","nodeToUpdateRef","useRef","useEffect","current","document","querySelector","style","display","setAttribute","mergeMetaboxes","metaboxes","newMetaboxes","mergedMetaboxes","metabox","existing","findIndex","box","id","push","metaBoxes","combineReducers","isSaving","state","action","locations","newState","location","entries","metaBoxesPerLocation","initialized","interfaceStore","openGeneralSidebar","name","registry","dispatch","enableComplementaryArea","closeGeneralSidebar","disableComplementaryArea","openModal","deprecated","since","alternative","closeModal","openPublishSidebar","closePublishSidebar","togglePublishSidebar","toggleEditorPanelEnabled","panelName","toggleEditorPanelOpened","removeEditorPanel","toggleFeature","feature","preferencesStore","toggle","switchEditorMode","mode","togglePinnedPluginItem","pluginName","isPinned","isItemPinned","updatePreferredStyleVariations","hint","showBlockTypes","blockNames","hideBlockTypes","setAvailableMetaBoxesPerLocation","requestMetaBoxUpdates","async","tinyMCE","triggerSave","baseFormData","FormData","postId","post","getEditedEntityRecord","additionalData","comment_status","ping_status","sticky","author","filter","Boolean","formData","getActiveMetaBoxLocations","map","getMetaBoxContainer","reduce","memo","currentFormData","append","forEach","apiFetch","url","_wpMetaBoxUrl","method","body","parse","metaBoxUpdatesSuccess","metaBoxUpdatesFailure","__experimentalSetPreviewDeviceType","deviceType","version","setDeviceType","setIsInserterOpened","setIsListViewOpened","isOpen","setIsEditingTemplate","__unstableCreateTemplate","metaBoxesInitialized","initializeMetaBoxes","__unstableIsEditorReady","postboxes","page","add_postbox_toggles","addAction","options","isAutosave","hasMetaBoxes","toggleDistractionFree","toggleFullscreenMode","isFullscreen","noticesStore","createInfoNotice","actions","onClick","EMPTY_ARRAY","EMPTY_OBJECT","getEditorMode","createRegistrySelector","_select$get","isEditorSidebarOpened","activeGeneralSidebar","getActiveComplementaryArea","includes","isPluginSidebarOpened","getActiveGeneralSidebarName","getPreferences","accumulatedPrefs","preferenceKey","panels","inactivePanels","openPanels","_ref","panelsWithEnabledState","accumulatedPanels","enabled","currentPanelState","opened","convertPanelsToOldFormat","getPreference","defaultValue","getHiddenBlockTypes","_select$get2","isPublishSidebarOpened","isEditorPanelRemoved","isEditorPanelEnabled","isEditorPanelOpened","isModalActive","modalName","isFeatureActive","isPluginItemPinned","createSelector","keys","isMetaBoxLocationActive","isMetaBoxLocationVisible","getMetaBoxesPerLocation","some","getAllMetaBoxes","values","flat","isSavingMetaBoxes","__experimentalGetPreviewDeviceType","getDeviceType","isInserterOpened","__experimentalGetInsertionPoint","getInserter","isListViewOpened","isEditingTemplate","areMetaBoxesInitialized","getEditedPostTemplate","templateId","getTemplateId","store","createReduxStore","reducer","selectors","register","useDispatch","editPostStore","registerShortcut","keyboardShortcutsStore","category","description","keyCombination","modifier","character","useShortcut","InitPatternModal","editPost","syncType","setSyncType","useState","title","setTitle","isNewPost","isCleanNewPost","isModalOpen","setIsModalOpen","_Fragment","Modal","onRequestClose","overlayClassName","onSubmit","event","preventDefault","meta","wp_pattern_sync_status","_jsxs","VStack","spacing","TextControl","onChange","placeholder","__nextHasNoMarginBottom","ToggleControl","_x","help","checked","HStack","justify","variant","disabled","accessibleWhenDisabled","BrowserURL","historyId","setHistoryId","postStatus","status","wp_id","history","replaceState","getPostEditURL","container","formRef","appendChild","Spinner","ref","MetaBoxVisibility","isVisible","element","getElementById","classList","remove","add","MetaBoxes","MetaBoxesArea","canUser","defaultUrl","patternsUrl","p","kind","MenuItem","role","WelcomeGuideMenuItem","PreferenceToggleMenuItem","scope","PreferenceBaseOption","preferencesPrivateApis","CustomFieldsConfirmation","willEnable","isReloading","setIsReloading","isBusy","customFieldsForm","getPathAndQueryString","submit","submitCustomFieldsForm","EnableCustomFieldsOption","areCustomFieldsEnabled","getEditorSettings","enableCustomFields","isChecked","setIsChecked","EnablePanelOption","props","isRemoved","PreferencesModalSection","withSelect","areCustomFieldsRegistered","sectionProps","thirdPartyMetaBoxes","PreferenceToggleControl","PreferencesModal","EditPostPreferencesModal","extraSections","general","MetaBoxesSection","appearance","featureName","ToolsMoreMenuGroup","ViewMoreMenuGroup","MoreMenu","isLargeViewport","useViewportMatch","info","messageActivated","messageDeactivated","shortcut","displayShortcut","secondary","ManagePatternsMenuItem","WelcomeGuideImage","nonAnimatedSrc","animatedSrc","srcSet","media","width","height","WelcomeGuideDefault","Guide","contentLabel","finishButtonText","onFinish","pages","image","content","createInterpolateElement","InserterIconImage","ExternalLink","WelcomeGuideTemplate","WelcomeGuide","isActive","_isEditingTemplate","getLayoutStyles","blockEditorPrivateApis","useCommandContext","commandsPrivateApis","Editor","FullscreenMode","NavigableRegion","BlockKeyboardShortcuts","blockLibraryPrivateApis","DESIGN_POST_TYPES","MetaBoxesMain","isLegacy","openHeight","hasAnyVisible","set","setPreference","metaBoxesMainRef","isShort","useMediaQuery","min","max","setHeightConstraints","effectSizeConstraints","useRefEffect","node","closest","noticeLists","querySelectorAll","resizeHandle","observer","ResizeObserver","deriveConstraints","nextMax","offsetHeight","nextMin","observe","disconnect","separatorRef","separatorHelpId","useId","isUntouched","setIsUntouched","applyHeight","candidateHeight","isPersistent","isInstant","nextHeight","Math","ariaValueNow","getAriaValueNow","updateSize","contents","isAutoHeight","usedMax","round","usedAriaValueNow","paneLabel","Pane","paneProps","ResizableBox","as","defaultSize","minHeight","maxHeight","enable","top","right","bottom","left","topLeft","topRight","bottomRight","bottomLeft","handleClasses","handleComponent","Tooltip","text","onKeyDown","delta","ArrowUp","ArrowDown","pane","resizable","fromHeight","VisuallyHidden","onPointerDown","pointerId","target","parentElement","contains","setPointerCapture","onResizeStart","direction","elementRef","onResize","onResizeStop","chevronUp","chevronDown","initialPostId","initialPostType","settings","initialEdits","useCommand","fullscreen","callback","close","useEditPostCommands","shouldIframe","__unstableIsBlockBasedTheme","blockEditorStore","isZoomOut","blocksStore","getBlockTypes","every","apiVersion","createErrorNotice","currentPost","currentPostId","currentPostType","onNavigateToEntityRecord","onNavigateToPreviousEntityRecord","defaultRenderingMode","postHistory","useReducer","historyState","previousRenderingMode","slice","getRenderingMode","setRenderingMode","useCallback","params","useNavigateToEntityRecord","isFullscreenActive","hasResolvedMode","hasActiveMetaboxes","hasBlockSelected","showIconLabels","isDistractionFree","showMetaBoxes","isWelcomeGuideVisible","enablePaddingAppender","isDevicePreview","_getPostType$viewable","supportsTemplateMode","canViewTemplate","getBlockSelectionStart","getDefaultRenderingMode","isRenderingPostOnly","isNotDesignPostType","isDirectlyEditingPattern","_templateId","defaultMode","isEnabledAndEditorReady","useMetaBoxInitialization","paddingAppenderRef","paddingStyle","useRegistry","effect","onMouseDown","lastChild","lastElementChild","lastChildRect","getBoundingClientRect","clientY","blockOrder","getBlockOrder","lastBlockClientId","lastBlock","getBlock","selectBlock","insertDefaultBlock","isUnmodifiedDefaultBlock","ownerDocument","addEventListener","removeEventListener","usePaddingAppender","editorSettings","useMemo","styles","additionalStyles","hasThemeStyleSupport","addedStyles","join","_editorSettings$style","_editorSettings$defau","_editorSettings$style2","_editorSettings$style3","presetStyles","__unstableType","defaultEditorStyles","hasThemeStyles","disableLayoutStyles","css","selector","hasBlockGapSupport","hasFallbackGapSupport","fallbackGapValue","baseStyles","useEditorStyles","navigateRegionsProps","useNavigateRegions","createSuccessNotice","onActionPerformed","actionId","items","trashed","ids","newItem","rendered","sprintf","decodeEntities","backButton","SlotFillProvider","ErrorBoundary","canCopyContent","forceIsDirty","contentRef","disableIframe","autoFocus","extraSidebarPanels","extraContent","PostLockedModal","UnsavedChangesWarning","AutosaveMonitor","LocalAutosaveMonitor","EditPostKeyboardShortcuts","EditorKeyboardShortcutsRegister","PluginArea","onError","PostEditorMoreMenu","EditorSnackbars","PluginPostExcerpt","isSiteEditor","getPath","deprecateSlot","PluginBlockSettingsMenuItem","EditorPluginBlockSettingsMenuItem","PluginDocumentSettingPanel","EditorPluginDocumentSettingPanel","PluginMoreMenuItem","EditorPluginMoreMenuItem","PluginPrePublishPanel","EditorPluginPrePublishPanel","PluginPostPublishPanel","EditorPluginPostPublishPanel","PluginPostStatusInfo","EditorPluginPostStatusInfo","PluginSidebar","EditorPluginSidebar","PluginSidebarMoreMenuItem","EditorPluginSidebarMoreMenuItem","__experimentalPluginPostExcerpt","__experimentalMainDashboardButton","registerCoreBlockBindingsSources","initializeEditor","isMediumOrBigger","matchMedia","matches","root","createRoot","setDefaults","fullscreenMode","themeStyles","welcomeGuide","welcomeGuideTemplate","allowRightClickOverrides","editorMode","editorTool","fixedToolbar","hiddenBlockTypes","showBlockBreadcrumbs","showListViewByDefault","enableChoosePatternModal","isPublishSidebarEnabled","__experimentalMediaProcessing","requireApproval","optimizeOnUpload","reapplyBlockTypeFilters","registerCoreBlocks","registerLegacyWidgetBlock","inserter","registerWidgetGroupBlock","__experimentalRegisterExperimentalCoreBlocks","enableFSEBlocks","__unstableEnableFullSiteEditingBlocks","compatMode","console","warn","navigator","userAgent","indexOf","editorScrollContainer","getElementsByClassName","scrollY","scrollTop","scrollTo","render","StrictMode","Layout","reinitializeEditor"],"sourceRoot":""}