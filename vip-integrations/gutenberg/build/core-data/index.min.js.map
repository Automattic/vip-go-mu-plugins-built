{"version":3,"file":"./build/core-data/index.min.js","mappings":"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","sources":["webpack://wp/./node_modules/equivalent-key-map/equivalent-key-map.js","webpack://wp/./node_modules/fast-deep-equal/es6/index.js","webpack://wp/./node_modules/fast-diff/diff.js","webpack://wp/./node_modules/lodash.clonedeep/index.js","webpack://wp/./node_modules/lodash.isequal/index.js","webpack://wp/./node_modules/quill-delta/src/AttributeMap.ts","webpack://wp/./node_modules/quill-delta/src/Delta.ts","webpack://wp/./node_modules/quill-delta/src/Op.ts","webpack://wp/./node_modules/quill-delta/src/OpIterator.ts","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/global","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/webpack/runtime/node module decorator","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"isShallowEqual\"]","../../packages/undo-manager/src/index.ts","../../packages/core-data/src/utils/if-matching-action.js","../../packages/core-data/src/utils/replace-action.js","../../packages/core-data/src/utils/on-sub-key.js","webpack://wp/./node_modules/tslib/tslib.es6.mjs","webpack://wp/./node_modules/lower-case/src/index.ts","webpack://wp/./node_modules/no-case/src/index.ts","webpack://wp/./node_modules/capital-case/src/index.ts","webpack://wp/./node_modules/upper-case-first/src/index.ts","webpack://wp/./node_modules/pascal-case/src/index.ts","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/./node_modules/lib0/object.js","webpack://wp/./node_modules/lib0/array.js","webpack://wp/./node_modules/lib0/traits.js","webpack://wp/./node_modules/lib0/function.js","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"hooks\"]","webpack://wp/external window [\"wp\",\"sync\"]","webpack://wp/./node_modules/uuid/dist/esm-browser/native.js","webpack://wp/./node_modules/uuid/dist/esm-browser/rng.js","webpack://wp/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://wp/./node_modules/uuid/dist/esm-browser/v4.js","webpack://wp/./node_modules/lib0/math.js","webpack://wp/external window [\"wp\",\"richText\"]","../../packages/core-data/src/utils/crdt-blocks.ts","../../packages/core-data/src/utils/crdt.ts","../../packages/core-data/src/entities.js","webpack://wp/external window [\"wp\",\"url\"]","../../packages/core-data/src/utils/get-normalized-comma-separable.js","../../packages/core-data/src/queried-data/get-query-parts.js","../../packages/core-data/src/utils/with-weak-map-cache.js","../../packages/core-data/src/queried-data/reducer.js","../../packages/core-data/src/utils/conservative-map-item.js","../../packages/core-data/src/reducer.js","webpack://wp/external window [\"wp\",\"deprecated\"]","../../packages/core-data/src/name.js","../../packages/core-data/src/utils/set-nested-value.js","../../packages/core-data/src/queried-data/selectors.js","webpack://wp/external window [\"wp\",\"privateApis\"]","../../packages/core-data/src/lock-unlock.ts","../../packages/core-data/src/utils/log-entity-deprecation.ts","../../packages/core-data/src/sync.ts","../../packages/core-data/src/private-selectors.ts","../../packages/core-data/src/utils/user-permissions.js","../../packages/core-data/src/selectors.ts","../../packages/core-data/src/utils/is-numeric-id.js","../../packages/core-data/src/utils/is-raw-attribute.js","../../packages/core-data/src/utils/get-nested-value.js","../../packages/core-data/src/queried-data/actions.js","../../packages/core-data/src/batch/default-processor.js","../../packages/core-data/src/batch/create-batch.js","../../packages/core-data/src/actions.js","../../packages/core-data/src/private-actions.js","webpack://wp/./node_modules/camel-case/src/index.ts","webpack://wp/external window [\"wp\",\"htmlEntities\"]","../../packages/core-data/src/utils/forward-resolver.js","../../packages/core-data/src/utils/receive-intermediate-results.js","../../packages/core-data/src/fetch/__experimental-fetch-link-suggestions.ts","../../packages/core-data/src/fetch/__experimental-fetch-url-data.js","../../packages/core-data/src/fetch/index.js","../../packages/core-data/src/resolvers.js","../../packages/core-data/src/locks/utils.js","../../packages/core-data/src/locks/reducer.js","../../packages/core-data/src/locks/selectors.js","../../packages/core-data/src/locks/engine.js","webpack://wp/external window [\"wp\",\"element\"]","../../packages/core-data/src/entity-context.js","webpack://wp/external window \"ReactJSXRuntime\"","../../packages/core-data/src/entity-provider.js","../../packages/core-data/src/hooks/constants.ts","../../packages/core-data/src/hooks/use-query-select.ts","webpack://wp/./node_modules/memize/dist/index.js","../../packages/core-data/src/hooks/use-entity-record.ts","../../packages/core-data/src/hooks/use-entity-records.ts","../../packages/core-data/src/hooks/use-resource-permissions.ts","webpack://wp/external window [\"wp\",\"warning\"]","../../packages/core-data/src/hooks/use-entity-id.js","webpack://wp/external window [\"wp\",\"blockEditor\"]","../../packages/core-data/src/footnotes/get-rich-text-values-cached.js","../../packages/core-data/src/footnotes/get-footnotes-order.js","../../packages/core-data/src/footnotes/index.js","../../packages/core-data/src/hooks/use-entity-block-editor.js","../../packages/core-data/src/hooks/use-entity-prop.js","../../packages/core-data/src/private-apis.js","../../packages/core-data/src/index.js","../../packages/core-data/src/locks/actions.js"],"sourcesContent":["'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Given an instance of EquivalentKeyMap, returns its internal value pair tuple\n * for a key, if one exists. The tuple members consist of the last reference\n * value for the key (used in efficient subsequent lookups) and the value\n * assigned for the key at the leaf node.\n *\n * @param {EquivalentKeyMap} instance EquivalentKeyMap instance.\n * @param {*} key                     The key for which to return value pair.\n *\n * @return {?Array} Value pair, if exists.\n */\nfunction getValuePair(instance, key) {\n  var _map = instance._map,\n      _arrayTreeMap = instance._arrayTreeMap,\n      _objectTreeMap = instance._objectTreeMap; // Map keeps a reference to the last object-like key used to set the\n  // value, which can be used to shortcut immediately to the value.\n\n  if (_map.has(key)) {\n    return _map.get(key);\n  } // Sort keys to ensure stable retrieval from tree.\n\n\n  var properties = Object.keys(key).sort(); // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n  var map = Array.isArray(key) ? _arrayTreeMap : _objectTreeMap;\n\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    map = map.get(property);\n\n    if (map === undefined) {\n      return;\n    }\n\n    var propertyValue = key[property];\n    map = map.get(propertyValue);\n\n    if (map === undefined) {\n      return;\n    }\n  }\n\n  var valuePair = map.get('_ekm_value');\n\n  if (!valuePair) {\n    return;\n  } // If reached, it implies that an object-like key was set with another\n  // reference, so delete the reference and replace with the current.\n\n\n  _map.delete(valuePair[0]);\n\n  valuePair[0] = key;\n  map.set('_ekm_value', valuePair);\n\n  _map.set(key, valuePair);\n\n  return valuePair;\n}\n/**\n * Variant of a Map object which enables lookup by equivalent (deeply equal)\n * object and array keys.\n */\n\n\nvar EquivalentKeyMap =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructs a new instance of EquivalentKeyMap.\n   *\n   * @param {Iterable.<*>} iterable Initial pair of key, value for map.\n   */\n  function EquivalentKeyMap(iterable) {\n    _classCallCheck(this, EquivalentKeyMap);\n\n    this.clear();\n\n    if (iterable instanceof EquivalentKeyMap) {\n      // Map#forEach is only means of iterating with support for IE11.\n      var iterablePairs = [];\n      iterable.forEach(function (value, key) {\n        iterablePairs.push([key, value]);\n      });\n      iterable = iterablePairs;\n    }\n\n    if (iterable != null) {\n      for (var i = 0; i < iterable.length; i++) {\n        this.set(iterable[i][0], iterable[i][1]);\n      }\n    }\n  }\n  /**\n   * Accessor property returning the number of elements.\n   *\n   * @return {number} Number of elements.\n   */\n\n\n  _createClass(EquivalentKeyMap, [{\n    key: \"set\",\n\n    /**\n     * Add or update an element with a specified key and value.\n     *\n     * @param {*} key   The key of the element to add.\n     * @param {*} value The value of the element to add.\n     *\n     * @return {EquivalentKeyMap} Map instance.\n     */\n    value: function set(key, value) {\n      // Shortcut non-object-like to set on internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        this._map.set(key, value);\n\n        return this;\n      } // Sort keys to ensure stable assignment into tree.\n\n\n      var properties = Object.keys(key).sort();\n      var valuePair = [key, value]; // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n      var map = Array.isArray(key) ? this._arrayTreeMap : this._objectTreeMap;\n\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n\n        if (!map.has(property)) {\n          map.set(property, new EquivalentKeyMap());\n        }\n\n        map = map.get(property);\n        var propertyValue = key[property];\n\n        if (!map.has(propertyValue)) {\n          map.set(propertyValue, new EquivalentKeyMap());\n        }\n\n        map = map.get(propertyValue);\n      } // If an _ekm_value exists, there was already an equivalent key. Before\n      // overriding, ensure that the old key reference is removed from map to\n      // avoid memory leak of accumulating equivalent keys. This is, in a\n      // sense, a poor man's WeakMap, while still enabling iterability.\n\n\n      var previousValuePair = map.get('_ekm_value');\n\n      if (previousValuePair) {\n        this._map.delete(previousValuePair[0]);\n      }\n\n      map.set('_ekm_value', valuePair);\n\n      this._map.set(key, valuePair);\n\n      return this;\n    }\n    /**\n     * Returns a specified element.\n     *\n     * @param {*} key The key of the element to return.\n     *\n     * @return {?*} The element associated with the specified key or undefined\n     *              if the key can't be found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      // Shortcut non-object-like to get from internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.get(key);\n      }\n\n      var valuePair = getValuePair(this, key);\n\n      if (valuePair) {\n        return valuePair[1];\n      }\n    }\n    /**\n     * Returns a boolean indicating whether an element with the specified key\n     * exists or not.\n     *\n     * @param {*} key The key of the element to test for presence.\n     *\n     * @return {boolean} Whether an element with the specified key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.has(key);\n      } // Test on the _presence_ of the pair, not its value, as even undefined\n      // can be a valid member value for a key.\n\n\n      return getValuePair(this, key) !== undefined;\n    }\n    /**\n     * Removes the specified element.\n     *\n     * @param {*} key The key of the element to remove.\n     *\n     * @return {boolean} Returns true if an element existed and has been\n     *                   removed, or false if the element does not exist.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      if (!this.has(key)) {\n        return false;\n      } // This naive implementation will leave orphaned child trees. A better\n      // implementation should traverse and remove orphans.\n\n\n      this.set(key, undefined);\n      return true;\n    }\n    /**\n     * Executes a provided function once per each key/value pair, in insertion\n     * order.\n     *\n     * @param {Function} callback Function to execute for each element.\n     * @param {*}        thisArg  Value to use as `this` when executing\n     *                            `callback`.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      var _this = this;\n\n      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n      this._map.forEach(function (value, key) {\n        // Unwrap value from object-like value pair.\n        if (key !== null && _typeof(key) === 'object') {\n          value = value[1];\n        }\n\n        callback.call(thisArg, value, key, _this);\n      });\n    }\n    /**\n     * Removes all elements.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map = new Map();\n      this._arrayTreeMap = new Map();\n      this._objectTreeMap = new Map();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._map.size;\n    }\n  }]);\n\n  return EquivalentKeyMap;\n}();\n\nmodule.exports = EquivalentKeyMap;\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @param {boolean} [cleanup] Apply semantic cleanup before returning.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return diffs;\n}\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n}\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = delta % 2 !== 0;\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length &&\n        y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length &&\n        y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) ===\n          text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ];\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n}\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\nfunction diff_commonOverlap_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (\n      found == 0 ||\n      text1.substring(text_length - length) == text2.substring(0, length)\n    ) {\n      best = length;\n      length++;\n    }\n  }\n}\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = \"\";\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i),\n        shorttext.substring(j)\n      );\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i),\n        shorttext.substring(0, j)\n      );\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common =\n          shorttext.substring(j - suffixLength, j) +\n          shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a,\n        best_longtext_b,\n        best_shorttext_a,\n        best_shorttext_b,\n        best_common,\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 4)\n  );\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 2)\n  );\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n}\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemantic(diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastequality &&\n        lastequality.length <=\n          Math.max(length_insertions1, length_deletions1) &&\n        lastequality.length <= Math.max(length_insertions2, length_deletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [\n          DIFF_DELETE,\n          lastequality,\n        ]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (\n      diffs[pointer - 1][0] == DIFF_DELETE &&\n      diffs[pointer][0] == DIFF_INSERT\n    ) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (\n          overlap_length1 >= deletion.length / 2 ||\n          overlap_length1 >= insertion.length / 2\n        ) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            insertion.substring(0, overlap_length1),\n          ]);\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (\n          overlap_length2 >= deletion.length / 2 ||\n          overlap_length2 >= insertion.length / 2\n        ) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            deletion.substring(0, overlap_length2),\n          ]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n}\n\nvar nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\nvar whitespaceRegex_ = /\\s/;\nvar linebreakRegex_ = /[\\r\\n]/;\nvar blanklineEndRegex_ = /\\n\\r?\\n$/;\nvar blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemanticLossless(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] == DIFF_EQUAL &&\n      diffs[pointer + 1][0] == DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore =\n        diff_cleanupSemanticScore_(equality1, edit) +\n        diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score =\n          diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = \"\";\n  var text_insert = \"\";\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (\n            previous_equality >= 0 &&\n            ends_with_pair_start(diffs[previous_equality][1])\n          ) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n              0,\n              -1\n            );\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(\n                  0,\n                  commonlength\n                );\n              } else {\n                diffs.splice(0, 0, [\n                  DIFF_EQUAL,\n                  text_insert.substring(0, commonlength),\n                ]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) +\n                diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(\n              pointer - n,\n              n,\n              [DIFF_DELETE, text_delete],\n              [DIFF_INSERT, text_insert]\n            );\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop(); // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        ) === diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(\n            0,\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n}\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xd800 && charCode <= 0xdbff;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xdc00 && charCode <= 0xdfff;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after],\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange =\n    typeof cursor_pos === \"number\"\n      ? { index: cursor_pos, length: 0 }\n      : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos, cleanup) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, cleanup, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","import cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\n\ninterface AttributeMap {\n  [key: string]: unknown;\n}\n\nnamespace AttributeMap {\n  export function compose(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n    keepNull = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    let attributes = cloneDeep(b);\n    if (!keepNull) {\n      attributes = Object.keys(attributes).reduce<AttributeMap>((copy, key) => {\n        if (attributes[key] != null) {\n          copy[key] = attributes[key];\n        }\n        return copy;\n      }, {});\n    }\n    for (const key in a) {\n      if (a[key] !== undefined && b[key] === undefined) {\n        attributes[key] = a[key];\n      }\n    }\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function diff(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    const attributes = Object.keys(a)\n      .concat(Object.keys(b))\n      .reduce<AttributeMap>((attrs, key) => {\n        if (!isEqual(a[key], b[key])) {\n          attrs[key] = b[key] === undefined ? null : b[key];\n        }\n        return attrs;\n      }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function invert(\n    attr: AttributeMap = {},\n    base: AttributeMap = {},\n  ): AttributeMap {\n    attr = attr || {};\n    const baseInverted = Object.keys(base).reduce<AttributeMap>((memo, key) => {\n      if (base[key] !== attr[key] && attr[key] !== undefined) {\n        memo[key] = base[key];\n      }\n      return memo;\n    }, {});\n    return Object.keys(attr).reduce<AttributeMap>((memo, key) => {\n      if (attr[key] !== base[key] && base[key] === undefined) {\n        memo[key] = null;\n      }\n      return memo;\n    }, baseInverted);\n  }\n\n  export function transform(\n    a: AttributeMap | undefined,\n    b: AttributeMap | undefined,\n    priority = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      return b;\n    }\n    if (typeof b !== 'object') {\n      return undefined;\n    }\n    if (!priority) {\n      return b; // b simply overwrites us without priority\n    }\n    const attributes = Object.keys(b).reduce<AttributeMap>((attrs, key) => {\n      if (a[key] === undefined) {\n        attrs[key] = b[key]; // null is a valid value\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n}\n\nexport default AttributeMap;\n","import * as diff from 'fast-diff';\nimport cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\nimport AttributeMap from './AttributeMap';\nimport Op from './Op';\nimport OpIterator from './OpIterator';\n\nconst NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\n\ninterface EmbedHandler<T> {\n  compose(a: T, b: T, keepNull: boolean): T;\n  invert(a: T, b: T): T;\n  transform(a: T, b: T, priority: boolean): T;\n}\n\nconst getEmbedTypeAndData = (\n  a: Op['insert'] | Op['retain'],\n  b: Op['insert'],\n): [string, unknown, unknown] => {\n  if (typeof a !== 'object' || a === null) {\n    throw new Error(`cannot retain a ${typeof a}`);\n  }\n  if (typeof b !== 'object' || b === null) {\n    throw new Error(`cannot retain a ${typeof b}`);\n  }\n  const embedType = Object.keys(a)[0];\n  if (!embedType || embedType !== Object.keys(b)[0]) {\n    throw new Error(\n      `embed types not matched: ${embedType} != ${Object.keys(b)[0]}`,\n    );\n  }\n  return [embedType, a[embedType], b[embedType]];\n};\n\nclass Delta {\n  static Op = Op;\n  static OpIterator = OpIterator;\n  static AttributeMap = AttributeMap;\n  private static handlers: { [embedType: string]: EmbedHandler<unknown> } = {};\n\n  static registerEmbed<T>(embedType: string, handler: EmbedHandler<T>): void {\n    this.handlers[embedType] = handler;\n  }\n\n  static unregisterEmbed(embedType: string): void {\n    delete this.handlers[embedType];\n  }\n\n  private static getHandler(embedType: string): EmbedHandler<unknown> {\n    const handler = this.handlers[embedType];\n    if (!handler) {\n      throw new Error(`no handlers for embed type \"${embedType}\"`);\n    }\n    return handler;\n  }\n\n  ops: Op[];\n  constructor(ops?: Op[] | { ops: Op[] }) {\n    // Assume we are given a well formed ops\n    if (Array.isArray(ops)) {\n      this.ops = ops;\n    } else if (ops != null && Array.isArray(ops.ops)) {\n      this.ops = ops.ops;\n    } else {\n      this.ops = [];\n    }\n  }\n\n  insert(\n    arg: string | Record<string, unknown>,\n    attributes?: AttributeMap | null,\n  ): this {\n    const newOp: Op = {};\n    if (typeof arg === 'string' && arg.length === 0) {\n      return this;\n    }\n    newOp.insert = arg;\n    if (\n      attributes != null &&\n      typeof attributes === 'object' &&\n      Object.keys(attributes).length > 0\n    ) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n\n  delete(length: number): this {\n    if (length <= 0) {\n      return this;\n    }\n    return this.push({ delete: length });\n  }\n\n  retain(\n    length: number | Record<string, unknown>,\n    attributes?: AttributeMap | null,\n  ): this {\n    if (typeof length === 'number' && length <= 0) {\n      return this;\n    }\n    const newOp: Op = { retain: length };\n    if (\n      attributes != null &&\n      typeof attributes === 'object' &&\n      Object.keys(attributes).length > 0\n    ) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n\n  push(newOp: Op): this {\n    let index = this.ops.length;\n    let lastOp = this.ops[index - 1];\n    newOp = cloneDeep(newOp);\n    if (typeof lastOp === 'object') {\n      if (\n        typeof newOp.delete === 'number' &&\n        typeof lastOp.delete === 'number'\n      ) {\n        this.ops[index - 1] = { delete: lastOp.delete + newOp.delete };\n        return this;\n      }\n      // Since it does not matter if we insert before or after deleting at the same index,\n      // always prefer to insert first\n      if (typeof lastOp.delete === 'number' && newOp.insert != null) {\n        index -= 1;\n        lastOp = this.ops[index - 1];\n        if (typeof lastOp !== 'object') {\n          this.ops.unshift(newOp);\n          return this;\n        }\n      }\n      if (isEqual(newOp.attributes, lastOp.attributes)) {\n        if (\n          typeof newOp.insert === 'string' &&\n          typeof lastOp.insert === 'string'\n        ) {\n          this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        } else if (\n          typeof newOp.retain === 'number' &&\n          typeof lastOp.retain === 'number'\n        ) {\n          this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        }\n      }\n    }\n    if (index === this.ops.length) {\n      this.ops.push(newOp);\n    } else {\n      this.ops.splice(index, 0, newOp);\n    }\n    return this;\n  }\n\n  chop(): this {\n    const lastOp = this.ops[this.ops.length - 1];\n    if (lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes) {\n      this.ops.pop();\n    }\n    return this;\n  }\n\n  filter(predicate: (op: Op, index: number) => boolean): Op[] {\n    return this.ops.filter(predicate);\n  }\n\n  forEach(predicate: (op: Op, index: number) => void): void {\n    this.ops.forEach(predicate);\n  }\n\n  map<T>(predicate: (op: Op, index: number) => T): T[] {\n    return this.ops.map(predicate);\n  }\n\n  partition(predicate: (op: Op) => boolean): [Op[], Op[]] {\n    const passed: Op[] = [];\n    const failed: Op[] = [];\n    this.forEach((op) => {\n      const target = predicate(op) ? passed : failed;\n      target.push(op);\n    });\n    return [passed, failed];\n  }\n\n  reduce<T>(\n    predicate: (accum: T, curr: Op, index: number) => T,\n    initialValue: T,\n  ): T {\n    return this.ops.reduce(predicate, initialValue);\n  }\n\n  changeLength(): number {\n    return this.reduce((length, elem) => {\n      if (elem.insert) {\n        return length + Op.length(elem);\n      } else if (elem.delete) {\n        return length - elem.delete;\n      }\n      return length;\n    }, 0);\n  }\n\n  length(): number {\n    return this.reduce((length, elem) => {\n      return length + Op.length(elem);\n    }, 0);\n  }\n\n  slice(start = 0, end = Infinity): Delta {\n    const ops = [];\n    const iter = new OpIterator(this.ops);\n    let index = 0;\n    while (index < end && iter.hasNext()) {\n      let nextOp;\n      if (index < start) {\n        nextOp = iter.next(start - index);\n      } else {\n        nextOp = iter.next(end - index);\n        ops.push(nextOp);\n      }\n      index += Op.length(nextOp);\n    }\n    return new Delta(ops);\n  }\n\n  compose(other: Delta): Delta {\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    const ops = [];\n    const firstOther = otherIter.peek();\n    if (\n      firstOther != null &&\n      typeof firstOther.retain === 'number' &&\n      firstOther.attributes == null\n    ) {\n      let firstLeft = firstOther.retain;\n      while (\n        thisIter.peekType() === 'insert' &&\n        thisIter.peekLength() <= firstLeft\n      ) {\n        firstLeft -= thisIter.peekLength();\n        ops.push(thisIter.next());\n      }\n      if (firstOther.retain - firstLeft > 0) {\n        otherIter.next(firstOther.retain - firstLeft);\n      }\n    }\n    const delta = new Delta(ops);\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else if (thisIter.peekType() === 'delete') {\n        delta.push(thisIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (otherOp.retain) {\n          const newOp: Op = {};\n          if (typeof thisOp.retain === 'number') {\n            newOp.retain =\n              typeof otherOp.retain === 'number' ? length : otherOp.retain;\n          } else {\n            if (typeof otherOp.retain === 'number') {\n              if (thisOp.retain == null) {\n                newOp.insert = thisOp.insert;\n              } else {\n                newOp.retain = thisOp.retain;\n              }\n            } else {\n              const action = thisOp.retain == null ? 'insert' : 'retain';\n              const [embedType, thisData, otherData] = getEmbedTypeAndData(\n                thisOp[action],\n                otherOp.retain,\n              );\n              const handler = Delta.getHandler(embedType);\n              newOp[action] = {\n                [embedType]: handler.compose(\n                  thisData,\n                  otherData,\n                  action === 'retain',\n                ),\n              };\n            }\n          }\n          // Preserve null when composing with a retain, otherwise remove it for inserts\n          const attributes = AttributeMap.compose(\n            thisOp.attributes,\n            otherOp.attributes,\n            typeof thisOp.retain === 'number',\n          );\n          if (attributes) {\n            newOp.attributes = attributes;\n          }\n          delta.push(newOp);\n\n          // Optimization if rest of other is just retain\n          if (\n            !otherIter.hasNext() &&\n            isEqual(delta.ops[delta.ops.length - 1], newOp)\n          ) {\n            const rest = new Delta(thisIter.rest());\n            return delta.concat(rest).chop();\n          }\n\n          // Other op should be delete, we could be an insert or retain\n          // Insert + delete cancels out\n        } else if (\n          typeof otherOp.delete === 'number' &&\n          (typeof thisOp.retain === 'number' ||\n            (typeof thisOp.retain === 'object' && thisOp.retain !== null))\n        ) {\n          delta.push(otherOp);\n        }\n      }\n    }\n    return delta.chop();\n  }\n\n  concat(other: Delta): Delta {\n    const delta = new Delta(this.ops.slice());\n    if (other.ops.length > 0) {\n      delta.push(other.ops[0]);\n      delta.ops = delta.ops.concat(other.ops.slice(1));\n    }\n    return delta;\n  }\n\n  diff(other: Delta, cursor?: number | diff.CursorInfo): Delta {\n    if (this.ops === other.ops) {\n      return new Delta();\n    }\n    const strings = [this, other].map((delta) => {\n      return delta\n        .map((op) => {\n          if (op.insert != null) {\n            return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\n          }\n          const prep = delta === other ? 'on' : 'with';\n          throw new Error('diff() called ' + prep + ' non-document');\n        })\n        .join('');\n    });\n    const retDelta = new Delta();\n    const diffResult = diff(strings[0], strings[1], cursor, true);\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    diffResult.forEach((component: diff.Diff) => {\n      let length = component[1].length;\n      while (length > 0) {\n        let opLength = 0;\n        switch (component[0]) {\n          case diff.INSERT:\n            opLength = Math.min(otherIter.peekLength(), length);\n            retDelta.push(otherIter.next(opLength));\n            break;\n          case diff.DELETE:\n            opLength = Math.min(length, thisIter.peekLength());\n            thisIter.next(opLength);\n            retDelta.delete(opLength);\n            break;\n          case diff.EQUAL:\n            opLength = Math.min(\n              thisIter.peekLength(),\n              otherIter.peekLength(),\n              length,\n            );\n            const thisOp = thisIter.next(opLength);\n            const otherOp = otherIter.next(opLength);\n            if (isEqual(thisOp.insert, otherOp.insert)) {\n              retDelta.retain(\n                opLength,\n                AttributeMap.diff(thisOp.attributes, otherOp.attributes),\n              );\n            } else {\n              retDelta.push(otherOp).delete(opLength);\n            }\n            break;\n        }\n        length -= opLength;\n      }\n    });\n    return retDelta.chop();\n  }\n\n  eachLine(\n    predicate: (\n      line: Delta,\n      attributes: AttributeMap,\n      index: number,\n    ) => boolean | void,\n    newline = '\\n',\n  ): void {\n    const iter = new OpIterator(this.ops);\n    let line = new Delta();\n    let i = 0;\n    while (iter.hasNext()) {\n      if (iter.peekType() !== 'insert') {\n        return;\n      }\n      const thisOp = iter.peek();\n      const start = Op.length(thisOp) - iter.peekLength();\n      const index =\n        typeof thisOp.insert === 'string'\n          ? thisOp.insert.indexOf(newline, start) - start\n          : -1;\n      if (index < 0) {\n        line.push(iter.next());\n      } else if (index > 0) {\n        line.push(iter.next(index));\n      } else {\n        if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n          return;\n        }\n        i += 1;\n        line = new Delta();\n      }\n    }\n    if (line.length() > 0) {\n      predicate(line, {}, i);\n    }\n  }\n\n  invert(base: Delta): Delta {\n    const inverted = new Delta();\n    this.reduce((baseIndex, op) => {\n      if (op.insert) {\n        inverted.delete(Op.length(op));\n      } else if (typeof op.retain === 'number' && op.attributes == null) {\n        inverted.retain(op.retain);\n        return baseIndex + op.retain;\n      } else if (op.delete || typeof op.retain === 'number') {\n        const length = (op.delete || op.retain) as number;\n        const slice = base.slice(baseIndex, baseIndex + length);\n        slice.forEach((baseOp) => {\n          if (op.delete) {\n            inverted.push(baseOp);\n          } else if (op.retain && op.attributes) {\n            inverted.retain(\n              Op.length(baseOp),\n              AttributeMap.invert(op.attributes, baseOp.attributes),\n            );\n          }\n        });\n        return baseIndex + length;\n      } else if (typeof op.retain === 'object' && op.retain !== null) {\n        const slice = base.slice(baseIndex, baseIndex + 1);\n        const baseOp = new OpIterator(slice.ops).next();\n        const [embedType, opData, baseOpData] = getEmbedTypeAndData(\n          op.retain,\n          baseOp.insert,\n        );\n        const handler = Delta.getHandler(embedType);\n        inverted.retain(\n          { [embedType]: handler.invert(opData, baseOpData) },\n          AttributeMap.invert(op.attributes, baseOp.attributes),\n        );\n        return baseIndex + 1;\n      }\n      return baseIndex;\n    }, 0);\n    return inverted.chop();\n  }\n\n  transform(index: number, priority?: boolean): number;\n  transform(other: Delta, priority?: boolean): Delta;\n  transform(arg: number | Delta, priority = false): typeof arg {\n    priority = !!priority;\n    if (typeof arg === 'number') {\n      return this.transformPosition(arg, priority);\n    }\n    const other: Delta = arg;\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    const delta = new Delta();\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (\n        thisIter.peekType() === 'insert' &&\n        (priority || otherIter.peekType() !== 'insert')\n      ) {\n        delta.retain(Op.length(thisIter.next()));\n      } else if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (thisOp.delete) {\n          // Our delete either makes their delete redundant or removes their retain\n          continue;\n        } else if (otherOp.delete) {\n          delta.push(otherOp);\n        } else {\n          const thisData = thisOp.retain;\n          const otherData = otherOp.retain;\n          let transformedData: Op['retain'] =\n            typeof otherData === 'object' && otherData !== null\n              ? otherData\n              : length;\n          if (\n            typeof thisData === 'object' &&\n            thisData !== null &&\n            typeof otherData === 'object' &&\n            otherData !== null\n          ) {\n            const embedType = Object.keys(thisData)[0];\n            if (embedType === Object.keys(otherData)[0]) {\n              const handler = Delta.getHandler(embedType);\n              if (handler) {\n                transformedData = {\n                  [embedType]: handler.transform(\n                    thisData[embedType],\n                    otherData[embedType],\n                    priority,\n                  ),\n                };\n              }\n            }\n          }\n\n          // We retain either their retain or insert\n          delta.retain(\n            transformedData,\n            AttributeMap.transform(\n              thisOp.attributes,\n              otherOp.attributes,\n              priority,\n            ),\n          );\n        }\n      }\n    }\n    return delta.chop();\n  }\n\n  transformPosition(index: number, priority = false): number {\n    priority = !!priority;\n    const thisIter = new OpIterator(this.ops);\n    let offset = 0;\n    while (thisIter.hasNext() && offset <= index) {\n      const length = thisIter.peekLength();\n      const nextType = thisIter.peekType();\n      thisIter.next();\n      if (nextType === 'delete') {\n        index -= Math.min(length, index - offset);\n        continue;\n      } else if (nextType === 'insert' && (offset < index || !priority)) {\n        index += length;\n      }\n      offset += length;\n    }\n    return index;\n  }\n}\n\nexport default Delta;\n\nexport { Op, OpIterator, AttributeMap };\n\nif (typeof module === 'object') {\n  module.exports = Delta;\n  module.exports.default = Delta;\n}\n","import AttributeMap from './AttributeMap';\n\ninterface Op {\n  // only one property out of {insert, delete, retain} will be present\n  insert?: string | Record<string, unknown>;\n  delete?: number;\n  retain?: number | Record<string, unknown>;\n\n  attributes?: AttributeMap;\n}\n\nnamespace Op {\n  export function length(op: Op): number {\n    if (typeof op.delete === 'number') {\n      return op.delete;\n    } else if (typeof op.retain === 'number') {\n      return op.retain;\n    } else if (typeof op.retain === 'object' && op.retain !== null) {\n      return 1;\n    } else {\n      return typeof op.insert === 'string' ? op.insert.length : 1;\n    }\n  }\n}\n\nexport default Op;\n","import Op from './Op';\n\nexport default class Iterator {\n  ops: Op[];\n  index: number;\n  offset: number;\n\n  constructor(ops: Op[]) {\n    this.ops = ops;\n    this.index = 0;\n    this.offset = 0;\n  }\n\n  hasNext(): boolean {\n    return this.peekLength() < Infinity;\n  }\n\n  next(length?: number): Op {\n    if (!length) {\n      length = Infinity;\n    }\n    const nextOp = this.ops[this.index];\n    if (nextOp) {\n      const offset = this.offset;\n      const opLength = Op.length(nextOp);\n      if (length >= opLength - offset) {\n        length = opLength - offset;\n        this.index += 1;\n        this.offset = 0;\n      } else {\n        this.offset += length;\n      }\n      if (typeof nextOp.delete === 'number') {\n        return { delete: length };\n      } else {\n        const retOp: Op = {};\n        if (nextOp.attributes) {\n          retOp.attributes = nextOp.attributes;\n        }\n        if (typeof nextOp.retain === 'number') {\n          retOp.retain = length;\n        } else if (\n          typeof nextOp.retain === 'object' &&\n          nextOp.retain !== null\n        ) {\n          // offset should === 0, length should === 1\n          retOp.retain = nextOp.retain;\n        } else if (typeof nextOp.insert === 'string') {\n          retOp.insert = nextOp.insert.substr(offset, length);\n        } else {\n          // offset should === 0, length should === 1\n          retOp.insert = nextOp.insert;\n        }\n        return retOp;\n      }\n    } else {\n      return { retain: Infinity };\n    }\n  }\n\n  peek(): Op {\n    return this.ops[this.index];\n  }\n\n  peekLength(): number {\n    if (this.ops[this.index]) {\n      // Should never return 0 if our index is being managed correctly\n      return Op.length(this.ops[this.index]) - this.offset;\n    } else {\n      return Infinity;\n    }\n  }\n\n  peekType(): string {\n    const op = this.ops[this.index];\n    if (op) {\n      if (typeof op.delete === 'number') {\n        return 'delete';\n      } else if (\n        typeof op.retain === 'number' ||\n        (typeof op.retain === 'object' && op.retain !== null)\n      ) {\n        return 'retain';\n      } else {\n        return 'insert';\n      }\n    }\n    return 'retain';\n  }\n\n  rest(): Op[] {\n    if (!this.hasNext()) {\n      return [];\n    } else if (this.offset === 0) {\n      return this.ops.slice(this.index);\n    } else {\n      const offset = this.offset;\n      const index = this.index;\n      const next = this.next();\n      const rest = this.ops.slice(this.index);\n      this.offset = offset;\n      this.index = index;\n      return [next].concat(rest);\n    }\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"isShallowEqual\"];","/**\n * WordPress dependencies\n */\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tHistoryChange as _HistoryChange,\n\tHistoryChanges as _HistoryChanges,\n\tHistoryRecord as _HistoryRecord,\n\tUndoManager as _UndoManager,\n} from './types';\n\n/**\n * Represents a single change in history.\n */\nexport type HistoryChange< T = unknown > = _HistoryChange< T >;\n\n/**\n * Represents changes for a single item.\n */\nexport type HistoryChanges< T = unknown > = _HistoryChanges< T >;\n\n/**\n * Represents a record of history changes.\n */\nexport type HistoryRecord< T = unknown > = _HistoryRecord< T >;\n\n/**\n * The undo manager interface.\n */\nexport type UndoManager< T = unknown > = _UndoManager< T >;\n\n/**\n * Merge changes for a single item into a record of changes.\n *\n * @param changes1 Previous changes\n * @param changes2 Next changes\n *\n * @return Merged changes\n */\nfunction mergeHistoryChanges< T >(\n\tchanges1: Record< string, HistoryChange< T > >,\n\tchanges2: Record< string, HistoryChange< T > >\n): Record< string, HistoryChange< T > > {\n\tconst newChanges: Record< string, HistoryChange< T > > = { ...changes1 };\n\tObject.entries( changes2 ).forEach( ( [ key, value ] ) => {\n\t\tif ( newChanges[ key ] ) {\n\t\t\tnewChanges[ key ] = { ...newChanges[ key ], to: value.to };\n\t\t} else {\n\t\t\tnewChanges[ key ] = value;\n\t\t}\n\t} );\n\n\treturn newChanges;\n}\n\n/**\n * Adds history changes for a single item into a record of changes.\n *\n * @param record  The record to merge into.\n * @param changes The changes to merge.\n */\nconst addHistoryChangesIntoRecord = < T >(\n\trecord: HistoryRecord< T >,\n\tchanges: HistoryChanges< T >\n): HistoryRecord< T > => {\n\tconst existingChangesIndex = record?.findIndex(\n\t\t( { id: recordIdentifier } ) => {\n\t\t\treturn typeof recordIdentifier === 'string'\n\t\t\t\t? recordIdentifier === changes.id\n\t\t\t\t: isShallowEqual( recordIdentifier, changes.id );\n\t\t}\n\t);\n\tconst nextRecord = [ ...record ];\n\n\tif ( existingChangesIndex !== -1 ) {\n\t\t// If the edit is already in the stack leave the initial \"from\" value.\n\t\tnextRecord[ existingChangesIndex ] = {\n\t\t\tid: changes.id,\n\t\t\tchanges: mergeHistoryChanges(\n\t\t\t\tnextRecord[ existingChangesIndex ].changes,\n\t\t\t\tchanges.changes\n\t\t\t),\n\t\t};\n\t} else {\n\t\tnextRecord.push( changes );\n\t}\n\treturn nextRecord;\n};\n\n/**\n * Creates an undo manager.\n *\n * @return Undo manager.\n */\nexport function createUndoManager< T = unknown >(): UndoManager< T > {\n\tlet history: HistoryRecord< T >[] = [];\n\tlet stagedRecord: HistoryRecord< T > = [];\n\tlet offset = 0;\n\n\tconst dropPendingRedos = (): void => {\n\t\thistory = history.slice( 0, offset || undefined );\n\t\toffset = 0;\n\t};\n\n\tconst appendStagedRecordToLatestHistoryRecord = (): void => {\n\t\tconst index = history.length === 0 ? 0 : history.length - 1;\n\t\tlet latestRecord = history[ index ] ?? [];\n\t\tstagedRecord.forEach( ( changes ) => {\n\t\t\tlatestRecord = addHistoryChangesIntoRecord( latestRecord, changes );\n\t\t} );\n\t\tstagedRecord = [];\n\t\thistory[ index ] = latestRecord;\n\t};\n\n\t/**\n\t * Checks whether a record is empty.\n\t * A record is considered empty if it the changes keep the same values.\n\t * Also updates to function values are ignored.\n\t *\n\t * @param record The record to check.\n\t * @return Whether the record is empty.\n\t */\n\tconst isRecordEmpty = ( record: HistoryRecord< T > ): boolean => {\n\t\tconst filteredRecord = record.filter( ( { changes } ) => {\n\t\t\treturn Object.values( changes ).some(\n\t\t\t\t( { from, to } ) =>\n\t\t\t\t\ttypeof from !== 'function' &&\n\t\t\t\t\ttypeof to !== 'function' &&\n\t\t\t\t\t! isShallowEqual( from, to )\n\t\t\t);\n\t\t} );\n\t\treturn ! filteredRecord.length;\n\t};\n\n\treturn {\n\t\taddRecord( record?: HistoryRecord< T >, isStaged = false ): void {\n\t\t\tconst isEmpty = ! record || isRecordEmpty( record );\n\t\t\tif ( isStaged ) {\n\t\t\t\tif ( isEmpty ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\trecord.forEach( ( changes ) => {\n\t\t\t\t\tstagedRecord = addHistoryChangesIntoRecord(\n\t\t\t\t\t\tstagedRecord,\n\t\t\t\t\t\tchanges\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tdropPendingRedos();\n\t\t\t\tif ( stagedRecord.length ) {\n\t\t\t\t\tappendStagedRecordToLatestHistoryRecord();\n\t\t\t\t}\n\t\t\t\tif ( isEmpty ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\thistory.push( record );\n\t\t\t}\n\t\t},\n\n\t\tundo(): HistoryRecord< T > | undefined {\n\t\t\tif ( stagedRecord.length ) {\n\t\t\t\tdropPendingRedos();\n\t\t\t\tappendStagedRecordToLatestHistoryRecord();\n\t\t\t}\n\t\t\tconst undoRecord = history[ history.length - 1 + offset ];\n\t\t\tif ( ! undoRecord ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toffset -= 1;\n\t\t\treturn undoRecord;\n\t\t},\n\n\t\tredo(): HistoryRecord< T > | undefined {\n\t\t\tconst redoRecord = history[ history.length + offset ];\n\t\t\tif ( ! redoRecord ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toffset += 1;\n\t\t\treturn redoRecord;\n\t\t},\n\n\t\thasUndo(): boolean {\n\t\t\treturn !! history[ history.length - 1 + offset ];\n\t\t},\n\n\t\thasRedo(): boolean {\n\t\t\treturn !! history[ history.length + offset ];\n\t\t},\n\t};\n}\n","/** @typedef {import('../types').AnyFunction} AnyFunction */\n\n/**\n * A higher-order reducer creator which invokes the original reducer only if\n * the dispatching action matches the given predicate, **OR** if state is\n * initializing (undefined).\n *\n * @param {AnyFunction} isMatch Function predicate for allowing reducer call.\n *\n * @return {AnyFunction} Higher-order reducer.\n */\nconst ifMatchingAction = ( isMatch ) => ( reducer ) => ( state, action ) => {\n\tif ( state === undefined || isMatch( action ) ) {\n\t\treturn reducer( state, action );\n\t}\n\n\treturn state;\n};\n\nexport default ifMatchingAction;\n","/** @typedef {import('../types').AnyFunction} AnyFunction */\n\n/**\n * Higher-order reducer creator which substitutes the action object before\n * passing to the original reducer.\n *\n * @param {AnyFunction} replacer Function mapping original action to replacement.\n *\n * @return {AnyFunction} Higher-order reducer.\n */\nconst replaceAction = ( replacer ) => ( reducer ) => ( state, action ) => {\n\treturn reducer( state, replacer( action ) );\n};\n\nexport default replaceAction;\n","/** @typedef {import('../types').AnyFunction} AnyFunction */\n\n/**\n * Higher-order reducer creator which creates a combined reducer object, keyed\n * by a property on the action object.\n *\n * @param {string} actionProperty Action property by which to key object.\n *\n * @return {AnyFunction} Higher-order reducer.\n */\nexport const onSubKey =\n\t( actionProperty ) =>\n\t( reducer ) =>\n\t( state = {}, action ) => {\n\t\t// Retrieve subkey from action. Do not track if undefined; useful for cases\n\t\t// where reducer is scoped by action shape.\n\t\tconst key = action[ actionProperty ];\n\t\tif ( key === undefined ) {\n\t\t\treturn state;\n\t\t}\n\n\t\t// Avoid updating state if unchanged. Note that this also accounts for a\n\t\t// reducer which returns undefined on a key which is not yet tracked.\n\t\tconst nextKeyState = reducer( state[ key ], action );\n\t\tif ( nextKeyState === state[ key ] ) {\n\t\t\treturn state;\n\t\t}\n\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ key ]: nextKeyState,\n\t\t};\n\t};\n\nexport default onSubKey;\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n","import { lowerCase } from \"lower-case\";\n\nexport interface Options {\n  splitRegexp?: RegExp | RegExp[];\n  stripRegexp?: RegExp | RegExp[];\n  delimiter?: string;\n  transform?: (part: string, index: number, parts: string[]) => string;\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n\n// Remove all non-word characters.\nconst DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input: string, options: Options = {}) {\n  const {\n    splitRegexp = DEFAULT_SPLIT_REGEXP,\n    stripRegexp = DEFAULT_STRIP_REGEXP,\n    transform = lowerCase,\n    delimiter = \" \",\n  } = options;\n\n  let result = replace(\n    replace(input, splitRegexp, \"$1\\0$2\"),\n    stripRegexp,\n    \"\\0\"\n  );\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  // Transform each token independently.\n  return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input: string, re: RegExp | RegExp[], value: string) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce((input, re) => input.replace(re, value), input);\n}\n","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n","/**\n * Upper case the first character of an input string.\n */\nexport function upperCaseFirst(input: string) {\n  return input.charAt(0).toUpperCase() + input.substr(1);\n}\n","import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options,\n  });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[key:string]: V}} obj\n * @return {Array<V>}\n */\nexport const values = Object.values\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @deprecated use object.size instead\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const size = obj => keys(obj).length\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|null|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line no-unreachable-loop\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|number|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (size(a) === size(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n\n/**\n * Make an object immutable. This hurts performance and is usually not needed if you perform good\n * coding practices.\n */\nexport const freeze = Object.freeze\n\n/**\n * Make an object and all its children immutable.\n * This *really* hurts performance and is usually not needed if you perform good coding practices.\n *\n * @template {any} T\n * @param {T} o\n * @return {Readonly<T>}\n */\nexport const deepFreeze = (o) => {\n  for (const key in o) {\n    const c = o[key]\n    if (typeof c === 'object' || typeof c === 'function') {\n      deepFreeze(o[key])\n    }\n  }\n  return freeze(o)\n}\n\n/**\n * Get object property. Create T if property is undefined and set T on object.\n *\n * @function\n * @template {object} KV\n * @template {keyof KV} [K=keyof KV]\n * @param {KV} o\n * @param {K} key\n * @param {() => KV[K]} createT\n * @return {KV[K]}\n */\nexport const setIfUndefined = (o, key, createT) => hasProperty(o, key) ? o[key] : (o[key] = createT())\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : any} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : never} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n\n/**\n * This function bubble-sorts a single item to the correct position. The sort happens in-place and\n * might be useful to ensure that a single item is at the correct position in an otherwise sorted\n * array.\n *\n * @example\n *  const arr = [3, 2, 5]\n *  arr.sort((a, b) => a - b)\n *  arr // => [2, 3, 5]\n *  arr.splice(1, 0, 7)\n *  array.bubbleSortItem(arr, 1, (a, b) => a - b)\n *  arr // => [2, 3, 5, 7]\n *\n * @template T\n * @param {Array<T>} arr\n * @param {number} i\n * @param {(a:T,b:T) => number} compareFn\n */\nexport const bubblesortItem = (arr, i, compareFn) => {\n  const n = arr[i]\n  let j = i\n  // try to sort to the right\n  while (j + 1 < arr.length && compareFn(n, arr[j + 1]) > 0) {\n    arr[j] = arr[j + 1]\n    arr[++j] = n\n  }\n  if (i === j && j > 0) { // no change yet\n    // sort to the left\n    while (j > 0 && compareFn(arr[j - 1], n) > 0) {\n      arr[j] = arr[j - 1]\n      arr[--j] = n\n    }\n  }\n  return j\n}\n","export const EqualityTraitSymbol = Symbol('Equality')\n\n/**\n * @typedef {{ [EqualityTraitSymbol]:(other:EqualityTrait)=>boolean }} EqualityTrait\n */\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\nimport * as traits from './traits.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a === b) {\n    return true\n  }\n  if (a == null || b == null || a.constructor !== b.constructor) {\n    return false\n  }\n  if (a[traits.EqualityTraitSymbol] != null) {\n    return a[traits.EqualityTraitSymbol](b)\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"sync\"];","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"richText\"];","/**\n * External dependencies\n */\nimport { v4 as uuidv4 } from 'uuid';\nimport * as math from 'lib0/math';\nimport * as fun from 'lib0/function';\nimport Delta from 'quill-delta';\n\n/**\n * WordPress dependencies\n */\nimport { RichTextData } from '@wordpress/rich-text';\nimport { Y } from '@wordpress/sync';\n\n// @ts-expect-error - This is a TypeScript file, and @wordpress/blocks doesn't have a tsconfig.json?\nimport { getBlockTypes } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport type { WPBlockSelection } from '../types';\n\ninterface BlockAttributes {\n\t[ key: string ]: unknown;\n}\n\ninterface BlockType {\n\tname: string;\n\tattributes?: Record< string, { type?: string } >;\n}\n\nexport interface Block {\n\tattributes: BlockAttributes;\n\tclientId?: string;\n\tinnerBlocks: Block[];\n\toriginalContent?: string; // unserializable\n\tvalidationIssues?: string[]; // unserializable\n\tname: string;\n}\n\nexport type YBlock = Y.Map<\n\t/* name, clientId, and originalContent are strings. */\n\t| string\n\t/* validationIssues? is an array of strings. */\n\t| string[]\n\t/* attributes is a Y.Map< unknown >. */\n\t| YBlockAttributes\n\t/* innerBlocks is a Y.Array< YBlock >. */\n\t| Y.Array< YBlock >\n>;\n\nexport type YBlockAttributes = Y.Map< Y.Text | unknown >;\n\n// The Y.Map type is not easy to work with. The generic type it accepts represents\n// the possible values of the map, which are varied in our case. This type is\n// accurate, but will require aggressive type narrowing when the map values are\n// accessed -- or type casting with `as`.\n// export type YBlock = Y.Map< Block[ keyof Block ] >;\n\nconst serializableBlocksCache = new WeakMap< WeakKey, Block[] >();\n\nfunction makeBlockAttributesSerializable(\n\tattributes: BlockAttributes\n): BlockAttributes {\n\tconst newAttributes = { ...attributes };\n\tfor ( const [ key, value ] of Object.entries( attributes ) ) {\n\t\tif ( value instanceof RichTextData ) {\n\t\t\tnewAttributes[ key ] = value.valueOf();\n\t\t}\n\t}\n\treturn newAttributes;\n}\n\nfunction makeBlocksSerializable(\n\tblocks: Block[] | Y.Array< YBlock >\n): Block[] {\n\treturn blocks.map( ( block: Block | YBlock ) => {\n\t\tconst blockAsJson = block instanceof Y.Map ? block.toJSON() : block;\n\t\tconst { name, innerBlocks, attributes, ...rest } = blockAsJson;\n\t\tdelete rest.validationIssues;\n\t\tdelete rest.originalContent;\n\t\t// delete rest.isValid\n\t\treturn {\n\t\t\t...rest,\n\t\t\tname,\n\t\t\tattributes: makeBlockAttributesSerializable( attributes ),\n\t\t\tinnerBlocks: makeBlocksSerializable( innerBlocks ),\n\t\t};\n\t} );\n}\n\n/**\n * @param {any}   gblock\n * @param {Y.Map} yblock\n */\nfunction areBlocksEqual( gblock: Block, yblock: YBlock ): boolean {\n\tconst yblockAsJson = yblock.toJSON();\n\n\t// we must not sync clientId, as this can't be generated consistently and\n\t// hence will lead to merge conflicts.\n\tconst overwrites = {\n\t\tinnerBlocks: null,\n\t\tclientId: null,\n\t};\n\tconst res = fun.equalityDeep(\n\t\tObject.assign( {}, gblock, overwrites ),\n\t\tObject.assign( {}, yblockAsJson, overwrites )\n\t);\n\tconst inners = gblock.innerBlocks || [];\n\tconst yinners = yblock.get( 'innerBlocks' ) as Y.Array< YBlock >;\n\treturn (\n\t\tres &&\n\t\tinners.length === yinners.length &&\n\t\tinners.every( ( block: Block, i: number ) =>\n\t\t\tareBlocksEqual( block, yinners.get( i ) )\n\t\t)\n\t);\n}\n\nfunction createNewYAttributeMap(\n\tblockName: string,\n\tattributes: BlockAttributes\n): YBlockAttributes {\n\treturn new Y.Map(\n\t\tObject.entries( attributes ).map(\n\t\t\t( [ attributeName, attributeValue ] ) => {\n\t\t\t\treturn [\n\t\t\t\t\tattributeName,\n\t\t\t\t\tcreateNewYAttributeValue(\n\t\t\t\t\t\tblockName,\n\t\t\t\t\t\tattributeName,\n\t\t\t\t\t\tattributeValue\n\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t}\n\t\t)\n\t);\n}\n\nfunction createNewYAttributeValue(\n\tblockName: string,\n\tattributeName: string,\n\tattributeValue: unknown\n): Y.Text | unknown {\n\tconst isRichText = isRichTextAttribute( blockName, attributeName );\n\n\tif ( isRichText ) {\n\t\treturn new Y.Text( attributeValue?.toString() ?? '' );\n\t}\n\n\treturn attributeValue;\n}\n\nfunction createNewYBlock( block: Block ): YBlock {\n\treturn new Y.Map(\n\t\tObject.entries( block ).map( ( [ key, value ] ) => {\n\t\t\tswitch ( key ) {\n\t\t\t\tcase 'attributes': {\n\t\t\t\t\treturn [ key, createNewYAttributeMap( block.name, value ) ];\n\t\t\t\t}\n\n\t\t\t\tcase 'innerBlocks': {\n\t\t\t\t\tconst innerBlocks = new Y.Array();\n\n\t\t\t\t\t// If not an array, set to empty Y.Array.\n\t\t\t\t\tif ( ! Array.isArray( value ) ) {\n\t\t\t\t\t\treturn [ key, innerBlocks ];\n\t\t\t\t\t}\n\n\t\t\t\t\tinnerBlocks.insert(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tvalue.map( ( innerBlock: Block ) =>\n\t\t\t\t\t\t\tcreateNewYBlock( innerBlock )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\treturn [ key, innerBlocks ];\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [ key, value ];\n\t\t\t}\n\t\t} )\n\t);\n}\n\n/**\n * Merge incoming block data into the local Y.Doc.\n * This function is called to sync local block changes to a shared Y.Doc.\n *\n * @param yblocks        The blocks in the local Y.Doc.\n * @param incomingBlocks Gutenberg blocks being synced.\n * @param lastSelection\n * @param _origin        The origin of the sync, either 'syncProvider' or 'gutenberg'.\n */\nexport function mergeCrdtBlocks(\n\tyblocks: Y.Array< YBlock >, // yblocks represent the blocks in the local Y.Doc\n\tincomingBlocks: Block[], // incomingBlocks represent JSON blocks being synced, either from a peer or from the local editor\n\tlastSelection: WPBlockSelection | null, // Last cursor position, used for hinting the diff algorithm\n\t_origin: string // eslint-disable-line @typescript-eslint/no-unused-vars\n): void {\n\t// Ensure we are working with serializable block data.\n\tif ( ! serializableBlocksCache.has( incomingBlocks ) ) {\n\t\tserializableBlocksCache.set(\n\t\t\tincomingBlocks,\n\t\t\tmakeBlocksSerializable( incomingBlocks )\n\t\t);\n\t}\n\tconst allBlocks = serializableBlocksCache.get( incomingBlocks ) ?? [];\n\n\t// Ensure we skip blocks that we don't want to sync at the moment\n\tconst blocksToSync = allBlocks.filter( ( block ) =>\n\t\tshouldBlockBeSynced( block )\n\t);\n\n\t// This is a rudimentary diff implementation similar to the y-prosemirror diffing\n\t// approach.\n\t// A better implementation would also diff the textual content and represent it\n\t// using a Y.Text type.\n\t// However, at this time it makes more sense to keep this algorithm generic to\n\t// support all kinds of block types.\n\t// Ideally, we ensure that block data structure have a consistent data format.\n\t// E.g.:\n\t//   - textual content (using rich-text formatting?) may always be stored under `block.text`\n\t//   - local information that shouldn't be shared (e.g. clientId or isDragging) is stored under `block.private`\n\tconst numOfCommonEntries = math.min(\n\t\tblocksToSync.length ?? 0,\n\t\tyblocks.length\n\t);\n\n\tlet left = 0;\n\tlet right = 0;\n\n\t// skip equal blocks from left\n\tfor (\n\t\t;\n\t\tleft < numOfCommonEntries &&\n\t\tareBlocksEqual( blocksToSync[ left ], yblocks.get( left ) );\n\t\tleft++\n\t) {\n\t\t/* nop */\n\t}\n\n\t// skip equal blocks from right\n\tfor (\n\t\t;\n\t\tright < numOfCommonEntries - left &&\n\t\tareBlocksEqual(\n\t\t\tblocksToSync[ blocksToSync.length - right - 1 ],\n\t\t\tyblocks.get( yblocks.length - right - 1 )\n\t\t);\n\t\tright++\n\t) {\n\t\t/* nop */\n\t}\n\n\tconst numOfUpdatesNeeded = numOfCommonEntries - left - right;\n\tconst numOfInsertionsNeeded = math.max(\n\t\t0,\n\t\tblocksToSync.length - yblocks.length\n\t);\n\tconst numOfDeletionsNeeded = math.max(\n\t\t0,\n\t\tyblocks.length - blocksToSync.length\n\t);\n\n\t// updates\n\tfor ( let i = 0; i < numOfUpdatesNeeded; i++, left++ ) {\n\t\tconst block = blocksToSync[ left ];\n\t\tconst yblock = yblocks.get( left );\n\t\tObject.entries( block ).forEach( ( [ key, value ] ) => {\n\t\t\tswitch ( key ) {\n\t\t\t\tcase 'attributes': {\n\t\t\t\t\tconst currentAttributes = yblock.get(\n\t\t\t\t\t\tkey\n\t\t\t\t\t) as YBlockAttributes;\n\n\t\t\t\t\t// If attributes are not set on the yblock, use the new values.\n\t\t\t\t\tif ( ! currentAttributes ) {\n\t\t\t\t\t\tyblock.set(\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tcreateNewYAttributeMap( block.name, value )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tObject.entries( value ).forEach(\n\t\t\t\t\t\t( [ attributeName, attributeValue ] ) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tfun.equalityDeep(\n\t\t\t\t\t\t\t\t\tcurrentAttributes?.get( attributeName ),\n\t\t\t\t\t\t\t\t\tattributeValue\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst isRichText = isRichTextAttribute(\n\t\t\t\t\t\t\t\tblock.name,\n\t\t\t\t\t\t\t\tattributeName\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tisRichText &&\n\t\t\t\t\t\t\t\t'string' === typeof attributeValue\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Rich text values are stored as persistent Y.Text instances.\n\t\t\t\t\t\t\t\t// Update the value with a delta in place.\n\t\t\t\t\t\t\t\tconst blockYText = currentAttributes.get(\n\t\t\t\t\t\t\t\t\tattributeName\n\t\t\t\t\t\t\t\t) as Y.Text;\n\n\t\t\t\t\t\t\t\tmergeRichTextUpdate(\n\t\t\t\t\t\t\t\t\tblockYText,\n\t\t\t\t\t\t\t\t\tattributeValue,\n\t\t\t\t\t\t\t\t\tlastSelection\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcurrentAttributes.set(\n\t\t\t\t\t\t\t\t\tattributeName,\n\t\t\t\t\t\t\t\t\tcreateNewYAttributeValue(\n\t\t\t\t\t\t\t\t\t\tblock.name,\n\t\t\t\t\t\t\t\t\t\tattributeName,\n\t\t\t\t\t\t\t\t\t\tattributeValue\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// Delete any attributes that are no longer present.\n\t\t\t\t\tcurrentAttributes.forEach(\n\t\t\t\t\t\t( _attrValue: unknown, attrName: string ) => {\n\t\t\t\t\t\t\tif ( ! value.hasOwnProperty( attrName ) ) {\n\t\t\t\t\t\t\t\tcurrentAttributes.delete( attrName );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'innerBlocks': {\n\t\t\t\t\t// Recursively merge innerBlocks\n\t\t\t\t\tconst yInnerBlocks = yblock.get( key ) as Y.Array< YBlock >;\n\t\t\t\t\tmergeCrdtBlocks(\n\t\t\t\t\t\tyInnerBlocks,\n\t\t\t\t\t\tvalue ?? [],\n\t\t\t\t\t\tlastSelection,\n\t\t\t\t\t\t_origin\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (\n\t\t\t\t\t\t! fun.equalityDeep( block[ key ], yblock.get( key ) )\n\t\t\t\t\t) {\n\t\t\t\t\t\tyblock.set( key, value );\n\t\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\tyblock.forEach( ( _v, k ) => {\n\t\t\tif ( ! block.hasOwnProperty( k ) ) {\n\t\t\t\tyblock.delete( k );\n\t\t\t}\n\t\t} );\n\t}\n\n\t// deletes\n\tyblocks.delete( left, numOfDeletionsNeeded );\n\n\t// inserts\n\tfor ( let i = 0; i < numOfInsertionsNeeded; i++, left++ ) {\n\t\tconst newBlock = [ createNewYBlock( blocksToSync[ left ] ) ];\n\n\t\tyblocks.insert( left, newBlock );\n\t}\n\n\t// remove duplicate clientids\n\tconst knownClientIds = new Set< string >();\n\tfor ( let j = 0; j < yblocks.length; j++ ) {\n\t\tconst yblock: YBlock = yblocks.get( j );\n\n\t\tlet clientId: string = yblock.get( 'clientId' ) as string;\n\n\t\tif ( knownClientIds.has( clientId ) ) {\n\t\t\tclientId = uuidv4();\n\t\t\tyblock.set( 'clientId', clientId );\n\t\t}\n\t\tknownClientIds.add( clientId );\n\t}\n}\n\n/**\n * Determine if a block should be synced.\n *\n * Ex: A gallery block should not be synced until the images have been\n * uploaded to WordPress, and their url is available. Before that,\n * it's not possible to access the blobs on a client as those are\n * local.\n *\n * @param block The block to check.\n * @return True if the block should be synced, false otherwise.\n */\nfunction shouldBlockBeSynced( block: Block ): boolean {\n\t// Verify that the gallery block is ready to be synced.\n\t// This means that, all images have had their blobs converted to full URLs.\n\t// Checking for only the blobs ensures that blocks that have just been inserted work as well.\n\tif ( 'core/gallery' === block.name ) {\n\t\treturn ! block.innerBlocks.some(\n\t\t\t( innerBlock ) =>\n\t\t\t\tinnerBlock.attributes && innerBlock.attributes.blob\n\t\t);\n\t}\n\n\t// Allow all other blocks to be synced.\n\treturn true;\n}\n\n// Cache rich-text attributes for all block types.\nlet cachedRichTextAttributes: Map< string, Map< string, true > >;\n\n/**\n * Given a block name and attribute key, return true if the attribute is rich-text typed.\n *\n * @param blockName     The name of the block, e.g. 'core/paragraph'.\n * @param attributeName The name of the attribute to check, e.g. 'content'.\n * @return True if the attribute is rich-text typed, false otherwise.\n */\nfunction isRichTextAttribute(\n\tblockName: string,\n\tattributeName: string\n): boolean {\n\tif ( ! cachedRichTextAttributes ) {\n\t\t// Parse the attributes for all blocks once.\n\t\tcachedRichTextAttributes = new Map< string, Map< string, true > >();\n\n\t\tfor ( const blockType of getBlockTypes() as BlockType[] ) {\n\t\t\tconst richTextAttributeMap = new Map< string, true >();\n\n\t\t\tfor ( const [ name, definition ] of Object.entries(\n\t\t\t\tblockType.attributes ?? {}\n\t\t\t) ) {\n\t\t\t\tif ( 'rich-text' === definition.type ) {\n\t\t\t\t\trichTextAttributeMap.set( name, true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcachedRichTextAttributes.set(\n\t\t\t\tblockType.name,\n\t\t\t\trichTextAttributeMap\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\tcachedRichTextAttributes.get( blockName )?.has( attributeName ) ?? false\n\t);\n}\n\nlet localDoc: Y.Doc | null = null;\n\n/**\n * Given a Y.Text object and an updated string value, diff the new value and\n * apply the delta to the Y.Text.\n *\n * @param blockYText    The Y.Text to update.\n * @param updatedValue  The updated value.\n * @param lastSelection The last cursor position before this update, used to hint the diff algorithm.\n */\nfunction mergeRichTextUpdate(\n\tblockYText: Y.Text,\n\tupdatedValue: string,\n\tlastSelection: WPBlockSelection | null\n): void {\n\tconst doc = blockYText.doc;\n\n\tif ( ! doc ) {\n\t\tthrow new Error( 'mergeCrdtBlocks: Y.Text is not attached to a Y.Doc' );\n\t}\n\n\tif ( ! localDoc ) {\n\t\t// Y.Text must be attached to a Y.Doc to be able to do operations on it.\n\t\t// Create a temporary Y.Text attached to a local Y.Doc for delta computation.\n\t\tlocalDoc = new Y.Doc();\n\t}\n\n\tconst localYText = localDoc.getText( 'temporary-text' );\n\tlocalYText.delete( 0, localYText.length );\n\tlocalYText.insert( 0, updatedValue );\n\n\tconst currentValueAsDelta = new Delta( blockYText.toDelta() );\n\tconst updatedValueAsDelta = new Delta( localYText.toDelta() );\n\n\tconst deltaDiff = currentValueAsDelta.diff(\n\t\tupdatedValueAsDelta,\n\t\tlastSelection?.offset\n\t);\n\n\tblockYText.applyDelta( deltaDiff.ops );\n}\n","/**\n * External dependencies\n */\nimport * as fun from 'lib0/function';\n\n/**\n * WordPress dependencies\n */\n// @ts-ignore No types available.\nimport { parse } from '@wordpress/blocks';\nimport { applyFilters } from '@wordpress/hooks';\nimport { type CRDTDoc, CRDT_RECORD_MAP_KEY, Y } from '@wordpress/sync';\n\n/**\n * Internal dependencies\n */\nimport { mergeCrdtBlocks, type Block, type YBlock } from './crdt-blocks';\nimport { type Post } from '../entity-types/post';\nimport { type Type } from '../entity-types';\nimport type { WPBlockSelection, WPSelection } from '../types';\n\ntype PostChanges = Partial< Post > & {\n\tblocks?: Block[];\n\tselection?: WPSelection;\n};\n\nlet lastSelection: WPBlockSelection | null = null;\n\n/**\n * Given a set of local changes to a post record, apply those changes to the\n * local Y.Doc.\n *\n * @param {CRDTDoc}       ydoc\n * @param {PostChanges}   changes\n * @param {Post}          rawRecord\n * @param {Type}          postType\n * @param {Set< string >} syncedProperties\n * @param {string}        origin\n * @return {void}\n */\nexport function applyPostChangesToCRDTDoc(\n\tydoc: CRDTDoc,\n\tchanges: PostChanges,\n\trawRecord: Post,\n\tpostType: Type,\n\tsyncedProperties: Set< string >,\n\torigin: string\n): void {\n\tconst ymap = ydoc.getMap( CRDT_RECORD_MAP_KEY );\n\n\tObject.entries( changes ).forEach( ( [ key, newValue ] ) => {\n\t\tif ( ! syncedProperties.has( key ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Cannot serialize function values, so cannot sync them.\n\t\tif ( 'function' === typeof newValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set the value in the root document.\n\t\tfunction setValue< T = unknown >( updatedValue: T ): void {\n\t\t\tymap.set( key, updatedValue );\n\t\t}\n\n\t\tswitch ( key ) {\n\t\t\tcase 'blocks': {\n\t\t\t\tlet currentBlocks = ymap.get( 'blocks' ) as Y.Array< YBlock >;\n\n\t\t\t\t// Initialize.\n\t\t\t\tif ( ! ( currentBlocks instanceof Y.Array ) ) {\n\t\t\t\t\tcurrentBlocks = new Y.Array();\n\t\t\t\t\tsetValue( currentBlocks );\n\t\t\t\t}\n\n\t\t\t\t// Block[] from local changes.\n\t\t\t\tconst newBlocks = ( newValue as PostChanges[ 'blocks' ] ) ?? [];\n\n\t\t\t\t// Merge blocks does not need `setValue` because it is operating on a\n\t\t\t\t// Yjs type that is already in the Y.Doc.\n\t\t\t\tmergeCrdtBlocks(\n\t\t\t\t\tcurrentBlocks,\n\t\t\t\t\tnewBlocks,\n\t\t\t\t\tlastSelection,\n\t\t\t\t\torigin\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'excerpt': {\n\t\t\t\tconst currentValue = ymap.get( 'excerpt' ) as\n\t\t\t\t\t| string\n\t\t\t\t\t| undefined;\n\t\t\t\tconst rawNewValue = getRawValue( newValue );\n\n\t\t\t\tmergeValue( currentValue, rawNewValue, setValue );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Meta is overloaded term in Core; here, it refers to post meta.\n\t\t\tcase 'meta': {\n\t\t\t\tlet metaMap = ymap.get( 'meta' ) as Y.Map< unknown >;\n\n\t\t\t\t// Initialize.\n\t\t\t\tif ( ! ( metaMap instanceof Y.Map ) ) {\n\t\t\t\t\tmetaMap = new Y.Map();\n\t\t\t\t\tsetValue( metaMap );\n\t\t\t\t}\n\n\t\t\t\t// Iterate over each meta property in the new value and merge it (if it\n\t\t\t\t// is a synced meta property).\n\t\t\t\tObject.entries( newValue ?? {} ).forEach(\n\t\t\t\t\t( [ metaKey, metaValue ] ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t! shouldSyncMetaForPostType( metaKey, postType )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmergeValue(\n\t\t\t\t\t\t\tmetaMap.get( metaKey ), // current value in CRDT\n\t\t\t\t\t\t\tmetaValue, // new value from local changes\n\t\t\t\t\t\t\t( updatedMetaValue: unknown ): void => {\n\t\t\t\t\t\t\t\tmetaMap.set( metaKey, updatedMetaValue );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'slug': {\n\t\t\t\t// Do not sync an empty slug. This indicates that the post is using\n\t\t\t\t// the default auto-generated slug.\n\t\t\t\tif ( ! newValue ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst currentValue = ymap.get( 'slug' ) as string;\n\t\t\t\tmergeValue( currentValue, newValue, setValue );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'status': {\n\t\t\t\tconst currentValue = ymap.get( 'status' ) as string | undefined;\n\t\t\t\tlet newStatus = newValue;\n\n\t\t\t\t// Undefined status indicates that we want to reset to the current\n\t\t\t\t// persisted value.\n\t\t\t\tif ( undefined === newStatus ) {\n\t\t\t\t\tnewStatus = rawRecord.status;\n\t\t\t\t}\n\n\t\t\t\tmergeValue( currentValue, newStatus, setValue );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'title': {\n\t\t\t\tconst currentValue = ymap.get( 'title' ) as string | undefined;\n\n\t\t\t\t// Copy logic from prePersistPostType to ensure that the \"Auto\n\t\t\t\t// Draft\" template title is not synced.\n\t\t\t\tlet rawNewValue = getRawValue( newValue );\n\t\t\t\tif ( ! currentValue && 'Auto Draft' === rawNewValue ) {\n\t\t\t\t\trawNewValue = '';\n\t\t\t\t}\n\n\t\t\t\tmergeValue( currentValue, rawNewValue, setValue );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Add support for additional data types here.\n\n\t\t\tdefault: {\n\t\t\t\tconst currentValue = ymap.get( key );\n\t\t\t\tmergeValue( currentValue, newValue, setValue );\n\t\t\t}\n\t\t}\n\t} );\n\n\t// Update the lastSelection for CRDT use\n\tif ( 'selection' in changes ) {\n\t\tlastSelection = changes.selection?.selectionStart ?? null;\n\t}\n}\n\n/**\n * Given a local Y.Doc that *may* contain changes from remote peers, compare\n * against the local record and determine if there are changes (edits) we want\n * to dispatch.\n *\n * @param {CRDTDoc}       ydoc\n * @param {Post}          record\n * @param {Type}          postType\n * @param {Set< string >} syncedProperties\n * @return {Partial<PostChanges>} The changes that should be applied to the local record.\n */\nexport function getPostChangesFromCRDTDoc(\n\tydoc: CRDTDoc,\n\trecord: Post,\n\tpostType: Type,\n\tsyncedProperties: Set< string >\n): PostChanges {\n\tconst ymap = ydoc.getMap( CRDT_RECORD_MAP_KEY );\n\n\treturn Object.fromEntries(\n\t\tObject.entries( ymap.toJSON() ).filter( ( [ key, newValue ] ) => {\n\t\t\tif ( ! syncedProperties.has( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst currentValue = record[ key ];\n\n\t\t\tswitch ( key ) {\n\t\t\t\tcase 'blocks': {\n\t\t\t\t\t// We don't need to add special equality checks for `blocks` here\n\t\t\t\t\t// since that is done by the store for us!\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcase 'date': {\n\t\t\t\t\t// Do not sync an empty date if our current value is a \"floating\" date.\n\t\t\t\t\t// Borrowing logic from the isEditedPostDateFloating selector.\n\t\t\t\t\tconst currentDateIsFloating =\n\t\t\t\t\t\t[ 'draft', 'auto-draft', 'pending' ].includes(\n\t\t\t\t\t\t\tymap.get( 'status' ) as string\n\t\t\t\t\t\t) &&\n\t\t\t\t\t\t( null === currentValue ||\n\t\t\t\t\t\t\trecord.modified === currentValue );\n\n\t\t\t\t\tif ( ! newValue && currentDateIsFloating ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn haveValuesChanged( currentValue, newValue );\n\t\t\t\t}\n\n\t\t\t\tcase 'meta': {\n\t\t\t\t\tconst allowedMeta = Object.fromEntries(\n\t\t\t\t\t\tObject.entries( newValue ?? {} ).filter(\n\t\t\t\t\t\t\t( [ metaKey ] ) =>\n\t\t\t\t\t\t\t\tshouldSyncMetaForPostType( metaKey, postType )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\t// Merge the allowed meta changes with the current meta values since\n\t\t\t\t\t// not all meta properties are synced.\n\t\t\t\t\tconst mergedValue = {\n\t\t\t\t\t\t...( currentValue as PostChanges[ 'meta' ] ),\n\t\t\t\t\t\t...allowedMeta,\n\t\t\t\t\t};\n\n\t\t\t\t\treturn haveValuesChanged( currentValue, mergedValue );\n\t\t\t\t}\n\n\t\t\t\tcase 'status': {\n\t\t\t\t\t// Do not sync an invalid status.\n\t\t\t\t\tif ( 'auto-draft' === newValue ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn haveValuesChanged( currentValue, newValue );\n\t\t\t\t}\n\n\t\t\t\tcase 'excerpt':\n\t\t\t\tcase 'title': {\n\t\t\t\t\treturn haveValuesChanged(\n\t\t\t\t\t\tgetRawValue( currentValue ),\n\t\t\t\t\t\tnewValue\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Add support for additional data types here.\n\n\t\t\t\tdefault: {\n\t\t\t\t\treturn haveValuesChanged( currentValue, newValue );\n\t\t\t\t}\n\t\t\t}\n\t\t} )\n\t);\n}\n\nexport function getInitialPostObjectData(\n\trecord: Post,\n\tpostType: Type,\n\tsyncedProperties: Set< string >\n): PostChanges {\n\t// Mix in the parsed blocks.\n\tconst blocks = parse( getRawValue( record.content ) );\n\n\treturn Object.fromEntries(\n\t\tObject.entries( { ...record, blocks } )\n\t\t\t// Only allow properties in the synced properties set.\n\t\t\t.filter( ( [ key ] ) => syncedProperties.has( key ) )\n\t\t\t.map( ( [ key, value ] ) => {\n\t\t\t\tswitch ( key ) {\n\t\t\t\t\tcase 'content':\n\t\t\t\t\tcase 'excerpt':\n\t\t\t\t\tcase 'title': {\n\t\t\t\t\t\treturn [ key, getRawValue( value ) ];\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'meta': {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tObject.fromEntries(\n\t\t\t\t\t\t\t\tObject.entries( value ?? {} ).filter(\n\t\t\t\t\t\t\t\t\t( [ metaKey ] ) =>\n\t\t\t\t\t\t\t\t\t\tshouldSyncMetaForPostType(\n\t\t\t\t\t\t\t\t\t\t\tmetaKey,\n\t\t\t\t\t\t\t\t\t\t\tpostType\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [ key, value ];\n\t\t\t} )\n\t);\n}\n\n/**\n * Extract the raw string value from a property that may be a string or an object\n * with a `raw` property (`RenderedText`).\n *\n * @param {unknown} value The value to extract from.\n * @return {string|undefined} The raw string value, or undefined if it could not be determined.\n */\nfunction getRawValue( value?: unknown ): string | undefined {\n\t// Value may be a string property or a nested object with a `raw` property.\n\tif ( 'string' === typeof value ) {\n\t\treturn value;\n\t}\n\n\tif (\n\t\tvalue &&\n\t\t'object' === typeof value &&\n\t\t'raw' in value &&\n\t\t'string' === typeof value.raw\n\t) {\n\t\treturn value.raw;\n\t}\n\n\treturn undefined;\n}\n\nfunction haveValuesChanged< ValueType = any >(\n\tcurrentValue: ValueType,\n\tnewValue: ValueType\n): boolean {\n\treturn ! fun.equalityDeep( currentValue, newValue );\n}\n\nfunction mergeValue< ValueType = any >(\n\tcurrentValue: ValueType,\n\tnewValue: ValueType,\n\tsetValue: ( value: ValueType ) => void\n): void {\n\tif ( haveValuesChanged< ValueType >( currentValue, newValue ) ) {\n\t\tsetValue( newValue );\n\t}\n}\n\n/**\n * Given a post type definition, return the set of properties that should be\n * synced for that post type.\n *\n * @param {Type} postType The post type definition.\n * @return {Set<string>} The set of properties that should be synced.\n */\nexport function getSyncedPropertiesForPostType(\n\tpostType: Type\n): Set< string > {\n\tconst syncedProperties = new Set< string >( [\n\t\t'date',\n\t\t'status',\n\t\t'tags',\n\t\t'template',\n\t\t'slug',\n\t\t'sticky',\n\t] );\n\n\tObject.entries( postType.supports || {} ).forEach(\n\t\t( [ feature, isSupported ] ) => {\n\t\t\tif ( ! isSupported ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch ( feature ) {\n\t\t\t\tcase 'author':\n\t\t\t\t\tsyncedProperties.add( 'author' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'comments':\n\t\t\t\t\tsyncedProperties.add( 'comment_status' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'custom-fields':\n\t\t\t\t\tsyncedProperties.add( 'meta' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'editor':\n\t\t\t\t\tsyncedProperties.add( 'blocks' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'excerpt':\n\t\t\t\t\tsyncedProperties.add( 'excerpt' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'post-formats':\n\t\t\t\t\tsyncedProperties.add( 'format' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'thumbnail':\n\t\t\t\t\tsyncedProperties.add( 'featured_media' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'trackbacks':\n\t\t\t\t\tsyncedProperties.add( 'ping_status' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'title':\n\t\t\t\t\tsyncedProperties.add( 'title' );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn syncedProperties;\n}\n\nconst metaDecisionCache: Map< string, Map< string, boolean > > = new Map();\n\n/**\n * Given a meta key and post type definition, return a decision on whether to\n * sync the meta property.\n *\n * @param {string} metaKey  The meta key.\n * @param {Type}   postType The post type definition.\n * @return {boolean} Whether to sync the meta property.\n */\nfunction shouldSyncMetaForPostType( metaKey: string, postType: Type ): boolean {\n\tif ( ! metaDecisionCache.has( postType.slug ) ) {\n\t\tmetaDecisionCache.set( postType.slug, new Map() );\n\t}\n\n\tconst decisionMap = metaDecisionCache.get( postType.slug )!;\n\n\tif ( decisionMap.has( metaKey ) ) {\n\t\treturn decisionMap.get( metaKey )!;\n\t}\n\n\t/**\n\t * In order to be available to the sync module, meta properties must be\n\t * registered against the post type and made available via the REST API\n\t * (`'show_in_rest' => true`).\n\t *\n\t * Of the registered meta properties, by default we do not sync \"hidden\" meta\n\t * fields (leading underscore in the meta key). This filter allows third-party\n\t * code to override that behavior.\n\t *\n\t * @param {boolean} shouldSync   Whether to sync the meta property.\n\t * @param {string}  metaKey      Meta key.\n\t * @param {string}  postTypeSlug The post type slug.\n\t * @param {Type}    postType     The post type definition.\n\t * @return {boolean} The filtered list of meta properties to sync.\n\t */\n\tconst shouldSync = Boolean(\n\t\tapplyFilters(\n\t\t\t'sync.shouldSyncMeta',\n\t\t\t! metaKey.startsWith( '_' ),\n\t\t\tmetaKey,\n\t\t\tpostType.slug,\n\t\t\tpostType\n\t\t)\n\t);\n\n\tdecisionMap.set( metaKey, shouldSync );\n\n\treturn shouldSync;\n}\n","/**\n * External dependencies\n */\nimport { capitalCase, pascalCase } from 'change-case';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tapplyPostChangesToCRDTDoc,\n\tgetInitialPostObjectData,\n\tgetPostChangesFromCRDTDoc,\n\tgetSyncedPropertiesForPostType,\n} from './utils/crdt';\n\nexport const DEFAULT_ENTITY_KEY = 'id';\nconst POST_RAW_ATTRIBUTES = [ 'title', 'excerpt', 'content' ];\n\nexport const rootEntitiesConfig = [\n\t{\n\t\tlabel: __( 'Base' ),\n\t\tkind: 'root',\n\t\tname: '__unstableBase',\n\t\tbaseURL: '/',\n\t\tbaseURLParams: {\n\t\t\t// Please also change the preload path when changing this.\n\t\t\t// @see lib/compat/wordpress-6.8/preload.php\n\t\t\t_fields: [\n\t\t\t\t'description',\n\t\t\t\t'gmt_offset',\n\t\t\t\t'home',\n\t\t\t\t'name',\n\t\t\t\t'site_icon',\n\t\t\t\t'site_icon_url',\n\t\t\t\t'site_logo',\n\t\t\t\t'timezone_string',\n\t\t\t\t'url',\n\t\t\t\t'page_for_posts',\n\t\t\t\t'page_on_front',\n\t\t\t\t'show_on_front',\n\t\t\t].join( ',' ),\n\t\t},\n\t\t// The entity doesn't support selecting multiple records.\n\t\t// The property is maintained for backward compatibility.\n\t\tplural: '__unstableBases',\n\t},\n\t{\n\t\tlabel: __( 'Post Type' ),\n\t\tname: 'postType',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/types',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'postTypes',\n\t},\n\t{\n\t\tname: 'media',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/media',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'mediaItems',\n\t\tlabel: __( 'Media' ),\n\t\trawAttributes: [ 'caption', 'title', 'description' ],\n\t\tsupportsPagination: true,\n\t},\n\t{\n\t\tname: 'taxonomy',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/taxonomies',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'taxonomies',\n\t\tlabel: __( 'Taxonomy' ),\n\t},\n\t{\n\t\tname: 'sidebar',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/sidebars',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'sidebars',\n\t\ttransientEdits: { blocks: true },\n\t\tlabel: __( 'Widget areas' ),\n\t},\n\t{\n\t\tname: 'widget',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/widgets',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'widgets',\n\t\ttransientEdits: { blocks: true },\n\t\tlabel: __( 'Widgets' ),\n\t},\n\t{\n\t\tname: 'widgetType',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/widget-types',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'widgetTypes',\n\t\tlabel: __( 'Widget types' ),\n\t},\n\t{\n\t\tlabel: __( 'User' ),\n\t\tname: 'user',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/users',\n\t\tgetTitle: ( record ) => record?.name || record?.slug,\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'users',\n\t\tsupportsPagination: true,\n\t},\n\t{\n\t\tname: 'comment',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/comments',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'comments',\n\t\tlabel: __( 'Comment' ),\n\t\tsupportsPagination: true,\n\t},\n\t{\n\t\tname: 'menu',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/menus',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'menus',\n\t\tlabel: __( 'Menu' ),\n\t\tsupportsPagination: true,\n\t},\n\t{\n\t\tname: 'menuItem',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/menu-items',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'menuItems',\n\t\tlabel: __( 'Menu Item' ),\n\t\trawAttributes: [ 'title' ],\n\t\tsupportsPagination: true,\n\t},\n\t{\n\t\tname: 'menuLocation',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/menu-locations',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'menuLocations',\n\t\tlabel: __( 'Menu Location' ),\n\t\tkey: 'name',\n\t},\n\t{\n\t\tlabel: __( 'Global Styles' ),\n\t\tname: 'globalStyles',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/global-styles',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'globalStylesVariations', // Should be different from name.\n\t\tgetTitle: () => __( 'Custom Styles' ),\n\t\tgetRevisionsUrl: ( parentId, revisionId ) =>\n\t\t\t`/wp/v2/global-styles/${ parentId }/revisions${\n\t\t\t\trevisionId ? '/' + revisionId : ''\n\t\t\t}`,\n\t\tsupportsPagination: true,\n\t},\n\t{\n\t\tlabel: __( 'Themes' ),\n\t\tname: 'theme',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/themes',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'themes',\n\t\tkey: 'stylesheet',\n\t},\n\t{\n\t\tlabel: __( 'Plugins' ),\n\t\tname: 'plugin',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/plugins',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'plugins',\n\t\tkey: 'plugin',\n\t},\n\t{\n\t\tlabel: __( 'Status' ),\n\t\tname: 'status',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/statuses',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'statuses',\n\t\tkey: 'slug',\n\t},\n];\n\nexport const deprecatedEntities = {\n\troot: {\n\t\tmedia: {\n\t\t\tsince: '6.9',\n\t\t\talternative: {\n\t\t\t\tkind: 'postType',\n\t\t\t\tname: 'attachment',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const additionalEntityConfigLoaders = [\n\t{ kind: 'postType', loadEntities: loadPostTypeEntities },\n\t{ kind: 'taxonomy', loadEntities: loadTaxonomyEntities },\n\t{\n\t\tkind: 'root',\n\t\tname: 'site',\n\t\tplural: 'sites',\n\t\tloadEntities: loadSiteEntity,\n\t},\n];\n\n/**\n * Returns a function to be used to retrieve extra edits to apply before persisting a post type.\n *\n * @param {Object} persistedRecord Already persisted Post\n * @param {Object} edits           Edits.\n * @return {Object} Updated edits.\n */\nexport const prePersistPostType = ( persistedRecord, edits ) => {\n\tconst newEdits = {};\n\n\tif ( persistedRecord?.status === 'auto-draft' ) {\n\t\t// Saving an auto-draft should create a draft by default.\n\t\tif ( ! edits.status && ! newEdits.status ) {\n\t\t\tnewEdits.status = 'draft';\n\t\t}\n\n\t\t// Fix the auto-draft default title.\n\t\tif (\n\t\t\t( ! edits.title || edits.title === 'Auto Draft' ) &&\n\t\t\t! newEdits.title &&\n\t\t\t( ! persistedRecord?.title ||\n\t\t\t\tpersistedRecord?.title === 'Auto Draft' )\n\t\t) {\n\t\t\tnewEdits.title = '';\n\t\t}\n\t}\n\n\treturn newEdits;\n};\n\n/**\n * Returns the list of post type entities.\n *\n * @return {Promise} Entities promise\n */\nasync function loadPostTypeEntities() {\n\tconst postTypes = await apiFetch( {\n\t\tpath: '/wp/v2/types?context=edit',\n\t} );\n\treturn Object.entries( postTypes ?? {} ).map( ( [ name, postType ] ) => {\n\t\tconst isTemplate = [ 'wp_template', 'wp_template_part' ].includes(\n\t\t\tname\n\t\t);\n\t\tconst namespace = postType?.rest_namespace ?? 'wp/v2';\n\t\tconst syncedProperties = getSyncedPropertiesForPostType( postType );\n\n\t\treturn {\n\t\t\tkind: 'postType',\n\t\t\tbaseURL: `/${ namespace }/${ postType.rest_base }`,\n\t\t\tbaseURLParams: { context: 'edit' },\n\t\t\tname,\n\t\t\tlabel: postType.name,\n\t\t\ttransientEdits: {\n\t\t\t\tblocks: true,\n\t\t\t\tselection: true,\n\t\t\t},\n\t\t\tmergedEdits: { meta: true },\n\t\t\trawAttributes: POST_RAW_ATTRIBUTES,\n\t\t\tgetTitle: ( record ) =>\n\t\t\t\trecord?.title?.rendered ||\n\t\t\t\trecord?.title ||\n\t\t\t\t( isTemplate\n\t\t\t\t\t? capitalCase( record.slug ?? '' )\n\t\t\t\t\t: String( record.id ) ),\n\t\t\t__unstablePrePersist: isTemplate ? undefined : prePersistPostType,\n\t\t\t__unstable_rest_base: postType.rest_base,\n\t\t\tsyncConfig: {\n\t\t\t\t/**\n\t\t\t\t * Is syncing enabled for this entity?\n\t\t\t\t *\n\t\t\t\t * @type {boolean}\n\t\t\t\t */\n\t\t\t\tenabled: Boolean(\n\t\t\t\t\tpostType.supports?.[ 'collaborative-editing' ] &&\n\t\t\t\t\t\tpostType.supports?.editor\n\t\t\t\t),\n\n\t\t\t\t/**\n\t\t\t\t * Apply changes from the local editor to the local CRDT document so\n\t\t\t\t * that those changes can be synced to other peers (via the provider).\n\t\t\t\t *\n\t\t\t\t * @param {import('@wordpress/sync').CRDTDoc}               crdtDoc\n\t\t\t\t * @param {Partial< import('@wordpress/sync').ObjectData >} changes\n\t\t\t\t * @param {import('@wordpress/sync').ObjectData}            record\n\t\t\t\t * @param {string}                                          origin\n\t\t\t\t * @return {void}\n\t\t\t\t */\n\t\t\t\tapplyChangesToCRDTDoc: ( crdtDoc, changes, record, origin ) => {\n\t\t\t\t\tapplyPostChangesToCRDTDoc(\n\t\t\t\t\t\tcrdtDoc,\n\t\t\t\t\t\tchanges,\n\t\t\t\t\t\trecord,\n\t\t\t\t\t\tpostType,\n\t\t\t\t\t\tsyncedProperties,\n\t\t\t\t\t\torigin\n\t\t\t\t\t);\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Extract changes from a CRDT document that can be used to update the\n\t\t\t\t * local editor state.\n\t\t\t\t *\n\t\t\t\t * @param {import('@wordpress/sync').CRDTDoc}    crdtDoc\n\t\t\t\t * @param {import('@wordpress/sync').ObjectData} record\n\t\t\t\t * @return {Partial< import('@wordpress/sync').ObjectData >} Changes to record\n\t\t\t\t */\n\t\t\t\tgetChangesFromCRDTDoc: ( crdtDoc, record ) =>\n\t\t\t\t\tgetPostChangesFromCRDTDoc(\n\t\t\t\t\t\tcrdtDoc,\n\t\t\t\t\t\trecord,\n\t\t\t\t\t\tpostType,\n\t\t\t\t\t\tsyncedProperties\n\t\t\t\t\t),\n\n\t\t\t\t/**\n\t\t\t\t * This initial object data represents the data that will be synced via\n\t\t\t\t * the CRDT document, which may differ from the entity record. There may\n\t\t\t\t * be properties that should not be synced, or properties that are\n\t\t\t\t * derived from the record.\n\t\t\t\t *\n\t\t\t\t * @param {import('@wordpress/sync').ObjectData} record\n\t\t\t\t * @return {import('@wordpress/sync').ObjectData} The initial data\n\t\t\t\t */\n\t\t\t\tgetInitialObjectData: ( record ) =>\n\t\t\t\t\tgetInitialPostObjectData(\n\t\t\t\t\t\trecord,\n\t\t\t\t\t\tpostType,\n\t\t\t\t\t\tsyncedProperties\n\t\t\t\t\t),\n\n\t\t\t\t/**\n\t\t\t\t * Get the immutable identifier for an entity record.\n\t\t\t\t *\n\t\t\t\t * @param {import('@wordpress/sync').ObjectData} record\n\t\t\t\t * @return {import('@wordpress/sync').ObjectID} The entity's ID\n\t\t\t\t */\n\t\t\t\tgetObjectId: ( { id } ) => id,\n\n\t\t\t\t/**\n\t\t\t\t * The object type for the entity, used to scope CRDT documents.\n\t\t\t\t *\n\t\t\t\t * @type {import('@wordpress/sync').ObjectType}\n\t\t\t\t */\n\t\t\t\tobjectType: `postType/${ postType.slug }`,\n\n\t\t\t\t/**\n\t\t\t\t * Sync features supported by the entity. Since overall syncing support\n\t\t\t\t * is gated by the `enabled` property, we don't need to check for\n\t\t\t\t * \"editor\" support here.\n\t\t\t\t *\n\t\t\t\t * @type {Record< string, boolean >}\n\t\t\t\t */\n\t\t\t\tsupports: {\n\t\t\t\t\tawareness: true,\n\t\t\t\t\tcrdtPersistence: Boolean(\n\t\t\t\t\t\tpostType.supports?.[ 'custom-fields' ]\n\t\t\t\t\t),\n\t\t\t\t\tundo: true,\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * The properties that should be synced via the CRDT document.\n\t\t\t\t *\n\t\t\t\t * @type {Set< string >}\n\t\t\t\t */\n\t\t\t\tsyncedProperties,\n\t\t\t},\n\t\t\tsupportsPagination: true,\n\t\t\tgetRevisionsUrl: ( parentId, revisionId ) =>\n\t\t\t\t`/${ namespace }/${\n\t\t\t\t\tpostType.rest_base\n\t\t\t\t}/${ parentId }/revisions${\n\t\t\t\t\trevisionId ? '/' + revisionId : ''\n\t\t\t\t}`,\n\t\t\trevisionKey: isTemplate ? 'wp_id' : DEFAULT_ENTITY_KEY,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the list of the taxonomies entities.\n *\n * @return {Promise} Entities promise\n */\nasync function loadTaxonomyEntities() {\n\tconst taxonomies = await apiFetch( {\n\t\tpath: '/wp/v2/taxonomies?context=view',\n\t} );\n\treturn Object.entries( taxonomies ?? {} ).map( ( [ name, taxonomy ] ) => {\n\t\tconst namespace = taxonomy?.rest_namespace ?? 'wp/v2';\n\t\treturn {\n\t\t\tkind: 'taxonomy',\n\t\t\tbaseURL: `/${ namespace }/${ taxonomy.rest_base }`,\n\t\t\tbaseURLParams: { context: 'edit' },\n\t\t\tname,\n\t\t\tlabel: taxonomy.name,\n\t\t\tgetTitle: ( record ) => record?.name,\n\t\t\tsupportsPagination: true,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the Site entity.\n *\n * @return {Promise} Entity promise\n */\nasync function loadSiteEntity() {\n\tconst entity = {\n\t\tlabel: __( 'Site' ),\n\t\tname: 'site',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/settings',\n\t\tmeta: {},\n\t};\n\n\tconst site = await apiFetch( {\n\t\tpath: entity.baseURL,\n\t\tmethod: 'OPTIONS',\n\t} );\n\n\tconst labels = {};\n\tObject.entries( site?.schema?.properties ?? {} ).forEach(\n\t\t( [ key, value ] ) => {\n\t\t\t// Ignore properties `title` and `type` keys.\n\t\t\tif ( typeof value === 'object' && value.title ) {\n\t\t\t\tlabels[ key ] = value.title;\n\t\t\t}\n\t\t}\n\t);\n\n\treturn [ { ...entity, meta: { labels } } ];\n}\n\n/**\n * Returns the entity's getter method name given its kind and name or plural name.\n *\n * @example\n * ```js\n * const nameSingular = getMethodName( 'root', 'theme', 'get' );\n * // nameSingular is getRootTheme\n *\n * const namePlural = getMethodName( 'root', 'themes', 'set' );\n * // namePlural is setRootThemes\n * ```\n *\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name or plural name.\n * @param {string} prefix Function prefix.\n *\n * @return {string} Method name\n */\nexport const getMethodName = ( kind, name, prefix = 'get' ) => {\n\tconst kindPrefix = kind === 'root' ? '' : pascalCase( kind );\n\tconst suffix = pascalCase( name );\n\treturn `${ prefix }${ kindPrefix }${ suffix }`;\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/**\n * Given a value which can be specified as one or the other of a comma-separated\n * string or an array, returns a value normalized to an array of strings, or\n * null if the value cannot be interpreted as either.\n *\n * @param {string|string[]|*} value\n *\n * @return {?(string[])} Normalized field value.\n */\nfunction getNormalizedCommaSeparable( value ) {\n\tif ( typeof value === 'string' ) {\n\t\treturn value.split( ',' );\n\t} else if ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\n\treturn null;\n}\n\nexport default getNormalizedCommaSeparable;\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { withWeakMapCache, getNormalizedCommaSeparable } from '../utils';\n\n/**\n * An object of properties describing a specific query.\n *\n * @typedef {Object} WPQueriedDataQueryParts\n *\n * @property {number}      page      The query page (1-based index, default 1).\n * @property {number}      perPage   Items per page for query (default 10).\n * @property {string}      stableKey An encoded stable string of all non-\n *                                   pagination, non-fields query parameters.\n * @property {?(string[])} fields    Target subset of fields to derive from\n *                                   item objects.\n * @property {?(number[])} include   Specific item IDs to include.\n * @property {string}      context   Scope under which the request is made;\n *                                   determines returned fields in response.\n */\n\n/**\n * Given a query object, returns an object of parts, including pagination\n * details (`page` and `perPage`, or default values). All other properties are\n * encoded into a stable (idempotent) `stableKey` value.\n *\n * @param {Object} query Optional query object.\n *\n * @return {WPQueriedDataQueryParts} Query parts.\n */\nexport function getQueryParts( query ) {\n\t/**\n\t * @type {WPQueriedDataQueryParts}\n\t */\n\tconst parts = {\n\t\tstableKey: '',\n\t\tpage: 1,\n\t\tperPage: 10,\n\t\tfields: null,\n\t\tinclude: null,\n\t\tcontext: 'default',\n\t};\n\n\t// Ensure stable key by sorting keys. Also more efficient for iterating.\n\tconst keys = Object.keys( query ).sort();\n\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tlet value = query[ key ];\n\n\t\tswitch ( key ) {\n\t\t\tcase 'page':\n\t\t\t\tparts[ key ] = Number( value );\n\t\t\t\tbreak;\n\n\t\t\tcase 'per_page':\n\t\t\t\tparts.perPage = Number( value );\n\t\t\t\tbreak;\n\n\t\t\tcase 'context':\n\t\t\t\tparts.context = value;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// While in theory, we could exclude \"_fields\" from the stableKey\n\t\t\t\t// because two request with different fields have the same results\n\t\t\t\t// We're not able to ensure that because the server can decide to omit\n\t\t\t\t// fields from the response even if we explicitly asked for it.\n\t\t\t\t// Example: Asking for titles in posts without title support.\n\t\t\t\tif ( key === '_fields' ) {\n\t\t\t\t\tparts.fields = getNormalizedCommaSeparable( value ) ?? [];\n\t\t\t\t\t// Make sure to normalize value for `stableKey`\n\t\t\t\t\tvalue = parts.fields.join();\n\t\t\t\t}\n\n\t\t\t\t// Two requests with different include values cannot have same results.\n\t\t\t\tif ( key === 'include' ) {\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t}\n\t\t\t\t\tparts.include = (\n\t\t\t\t\t\tgetNormalizedCommaSeparable( value ) ?? []\n\t\t\t\t\t).map( Number );\n\t\t\t\t\t// Normalize value for `stableKey`.\n\t\t\t\t\tvalue = parts.include.join();\n\t\t\t\t}\n\n\t\t\t\t// While it could be any deterministic string, for simplicity's\n\t\t\t\t// sake mimic querystring encoding for stable key.\n\t\t\t\t//\n\t\t\t\t// TODO: For consistency with PHP implementation, addQueryArgs\n\t\t\t\t// should accept a key value pair, which may optimize its\n\t\t\t\t// implementation for our use here, vs. iterating an object\n\t\t\t\t// with only a single key.\n\t\t\t\tparts.stableKey +=\n\t\t\t\t\t( parts.stableKey ? '&' : '' ) +\n\t\t\t\t\taddQueryArgs( '', { [ key ]: value } ).slice( 1 );\n\t\t}\n\t}\n\n\treturn parts;\n}\n\nexport default withWeakMapCache( getQueryParts );\n","/**\n * Given a function, returns an enhanced function which caches the result and\n * tracks in WeakMap. The result is only cached if the original function is\n * passed a valid object-like argument (requirement for WeakMap key).\n *\n * @param {Function} fn Original function.\n *\n * @return {Function} Enhanced caching function.\n */\nfunction withWeakMapCache( fn ) {\n\tconst cache = new WeakMap();\n\n\treturn ( key ) => {\n\t\tlet value;\n\t\tif ( cache.has( key ) ) {\n\t\t\tvalue = cache.get( key );\n\t\t} else {\n\t\t\tvalue = fn( key );\n\n\t\t\t// Can reach here if key is not valid for WeakMap, since `has`\n\t\t\t// will return false for invalid key. Since `set` will throw,\n\t\t\t// ensure that key is valid before setting into cache.\n\t\t\tif ( key !== null && typeof key === 'object' ) {\n\t\t\t\tcache.set( key, value );\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t};\n}\n\nexport default withWeakMapCache;\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport {\n\tconservativeMapItem,\n\tifMatchingAction,\n\treplaceAction,\n\tonSubKey,\n} from '../utils';\nimport { DEFAULT_ENTITY_KEY } from '../entities';\nimport getQueryParts from './get-query-parts';\n\nfunction getContextFromAction( action ) {\n\tconst { query } = action;\n\tif ( ! query ) {\n\t\treturn 'default';\n\t}\n\n\tconst queryParts = getQueryParts( query );\n\treturn queryParts.context;\n}\n\n/**\n * Returns a merged array of item IDs, given details of the received paginated\n * items. The array is sparse-like with `undefined` entries where holes exist.\n *\n * @param {?Array<number>} itemIds     Original item IDs (default empty array).\n * @param {number[]}       nextItemIds Item IDs to merge.\n * @param {number}         page        Page of items merged.\n * @param {number}         perPage     Number of items per page.\n *\n * @return {number[]} Merged array of item IDs.\n */\nexport function getMergedItemIds( itemIds, nextItemIds, page, perPage ) {\n\tconst receivedAllIds = page === 1 && perPage === -1;\n\tif ( receivedAllIds ) {\n\t\treturn nextItemIds;\n\t}\n\tconst nextItemIdsStartIndex = ( page - 1 ) * perPage;\n\n\t// If later page has already been received, default to the larger known\n\t// size of the existing array, else calculate as extending the existing.\n\tconst size = Math.max(\n\t\titemIds?.length ?? 0,\n\t\tnextItemIdsStartIndex + nextItemIds.length\n\t);\n\n\t// Preallocate array since size is known.\n\tconst mergedItemIds = new Array( size );\n\n\tfor ( let i = 0; i < size; i++ ) {\n\t\t// Preserve existing item ID except for subset of range of next items.\n\t\t// We need to check against the possible maximum upper boundary because\n\t\t// a page could receive fewer than what was previously stored.\n\t\tconst isInNextItemsRange =\n\t\t\ti >= nextItemIdsStartIndex && i < nextItemIdsStartIndex + perPage;\n\t\tmergedItemIds[ i ] = isInNextItemsRange\n\t\t\t? nextItemIds[ i - nextItemIdsStartIndex ]\n\t\t\t: itemIds?.[ i ];\n\t}\n\n\treturn mergedItemIds;\n}\n\n/**\n * Helper function to filter out entities with certain IDs.\n * Entities are keyed by their ID.\n *\n * @param {Object} entities Entity objects, keyed by entity ID.\n * @param {Array}  ids      Entity IDs to filter out.\n *\n * @return {Object} Filtered entities.\n */\nfunction removeEntitiesById( entities, ids ) {\n\treturn Object.fromEntries(\n\t\tObject.entries( entities ).filter(\n\t\t\t( [ id ] ) =>\n\t\t\t\t! ids.some( ( itemId ) => {\n\t\t\t\t\tif ( Number.isInteger( itemId ) ) {\n\t\t\t\t\t\treturn itemId === +id;\n\t\t\t\t\t}\n\t\t\t\t\treturn itemId === id;\n\t\t\t\t} )\n\t\t)\n\t);\n}\n\n/**\n * Reducer tracking items state, keyed by ID. Items are assumed to be normal,\n * where identifiers are common across all queries.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nexport function items( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS': {\n\t\t\tconst context = getContextFromAction( action );\n\t\t\tconst key = action.key || DEFAULT_ENTITY_KEY;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ context ]: {\n\t\t\t\t\t...state[ context ],\n\t\t\t\t\t...action.items.reduce( ( accumulator, value ) => {\n\t\t\t\t\t\tconst itemId = value?.[ key ];\n\n\t\t\t\t\t\taccumulator[ itemId ] = conservativeMapItem(\n\t\t\t\t\t\t\tstate?.[ context ]?.[ itemId ],\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t}, {} ),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tcase 'REMOVE_ITEMS':\n\t\t\treturn Object.fromEntries(\n\t\t\t\tObject.entries( state ).map( ( [ itemId, contextState ] ) => [\n\t\t\t\t\titemId,\n\t\t\t\t\tremoveEntitiesById( contextState, action.itemIds ),\n\t\t\t\t] )\n\t\t\t);\n\t}\n\treturn state;\n}\n\n/**\n * Reducer tracking item completeness, keyed by ID. A complete item is one for\n * which all fields are known. This is used in supporting `_fields` queries,\n * where not all properties associated with an entity are necessarily returned.\n * In such cases, completeness is used as an indication of whether it would be\n * safe to use queried data for a non-`_fields`-limited request.\n *\n * @param {Object<string,Object<string,boolean>>} state  Current state.\n * @param {Object}                                action Dispatched action.\n *\n * @return {Object<string,Object<string,boolean>>} Next state.\n */\nexport function itemIsComplete( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS': {\n\t\t\tconst context = getContextFromAction( action );\n\t\t\tconst { query, key = DEFAULT_ENTITY_KEY } = action;\n\n\t\t\t// An item is considered complete if it is received without an associated\n\t\t\t// fields query. Ideally, this would be implemented in such a way where the\n\t\t\t// complete aggregate of all fields would satisfy completeness. Since the\n\t\t\t// fields are not consistent across all entities, this would require\n\t\t\t// introspection on the REST schema for each entity to know which fields\n\t\t\t// compose a complete item for that entity.\n\t\t\tconst queryParts = query ? getQueryParts( query ) : {};\n\t\t\tconst isCompleteQuery =\n\t\t\t\t! query || ! Array.isArray( queryParts.fields );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ context ]: {\n\t\t\t\t\t...state[ context ],\n\t\t\t\t\t...action.items.reduce( ( result, item ) => {\n\t\t\t\t\t\tconst itemId = item?.[ key ];\n\n\t\t\t\t\t\t// Defer to completeness if already assigned. Technically the\n\t\t\t\t\t\t// data may be outdated if receiving items for a field subset.\n\t\t\t\t\t\tresult[ itemId ] =\n\t\t\t\t\t\t\tstate?.[ context ]?.[ itemId ] || isCompleteQuery;\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}, {} ),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tcase 'REMOVE_ITEMS':\n\t\t\treturn Object.fromEntries(\n\t\t\t\tObject.entries( state ).map( ( [ itemId, contextState ] ) => [\n\t\t\t\t\titemId,\n\t\t\t\t\tremoveEntitiesById( contextState, action.itemIds ),\n\t\t\t\t] )\n\t\t\t);\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer tracking queries state, keyed by stable query key. Each reducer\n * query object includes `itemIds` and `requestingPageByPerPage`.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nconst receiveQueries = compose( [\n\t// Limit to matching action type so we don't attempt to replace action on\n\t// an unhandled action.\n\tifMatchingAction( ( action ) => 'query' in action ),\n\n\t// Inject query parts into action for use both in `onSubKey` and reducer.\n\treplaceAction( ( action ) => {\n\t\t// `ifMatchingAction` still passes on initialization, where state is\n\t\t// undefined and a query is not assigned. Avoid attempting to parse\n\t\t// parts. `onSubKey` will omit by lack of `stableKey`.\n\t\tif ( action.query ) {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\t...getQueryParts( action.query ),\n\t\t\t};\n\t\t}\n\n\t\treturn action;\n\t} ),\n\n\tonSubKey( 'context' ),\n\n\t// Queries shape is shared, but keyed by query `stableKey` part. Original\n\t// reducer tracks only a single query object.\n\tonSubKey( 'stableKey' ),\n] )( ( state = {}, action ) => {\n\tconst { type, page, perPage, key = DEFAULT_ENTITY_KEY } = action;\n\n\tif ( type !== 'RECEIVE_ITEMS' ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\titemIds: getMergedItemIds(\n\t\t\tstate?.itemIds || [],\n\t\t\taction.items.map( ( item ) => item?.[ key ] ).filter( Boolean ),\n\t\t\tpage,\n\t\t\tperPage\n\t\t),\n\t\tmeta: action.meta,\n\t};\n} );\n\n/**\n * Reducer tracking queries state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nconst queries = ( state = {}, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS':\n\t\t\treturn receiveQueries( state, action );\n\t\tcase 'REMOVE_ITEMS':\n\t\t\tconst removedItems = action.itemIds.reduce( ( result, itemId ) => {\n\t\t\t\tresult[ itemId ] = true;\n\t\t\t\treturn result;\n\t\t\t}, {} );\n\n\t\t\treturn Object.fromEntries(\n\t\t\t\tObject.entries( state ).map(\n\t\t\t\t\t( [ queryGroup, contextQueries ] ) => [\n\t\t\t\t\t\tqueryGroup,\n\t\t\t\t\t\tObject.fromEntries(\n\t\t\t\t\t\t\tObject.entries( contextQueries ).map(\n\t\t\t\t\t\t\t\t( [ query, queryItems ] ) => [\n\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t...queryItems,\n\t\t\t\t\t\t\t\t\t\titemIds: queryItems.itemIds.filter(\n\t\t\t\t\t\t\t\t\t\t\t( queryId ) =>\n\t\t\t\t\t\t\t\t\t\t\t\t! removedItems[ queryId ]\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t]\n\t\t\t\t)\n\t\t\t);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers( {\n\titems,\n\titemIsComplete,\n\tqueries,\n} );\n","/**\n * External dependencies\n */\nimport fastDeepEqual from 'fast-deep-equal/es6';\n\n/**\n * Given the current and next item entity record, returns the minimally \"modified\"\n * result of the next item, preferring value references from the original item\n * if equal. If all values match, the original item is returned.\n *\n * @param {Object} item     Original item.\n * @param {Object} nextItem Next item.\n *\n * @return {Object} Minimally modified merged item.\n */\nexport default function conservativeMapItem( item, nextItem ) {\n\t// Return next item in its entirety if there is no original item.\n\tif ( ! item ) {\n\t\treturn nextItem;\n\t}\n\n\tlet hasChanges = false;\n\tconst result = {};\n\tfor ( const key in nextItem ) {\n\t\tif ( fastDeepEqual( item[ key ], nextItem[ key ] ) ) {\n\t\t\tresult[ key ] = item[ key ];\n\t\t} else {\n\t\t\thasChanges = true;\n\t\t\tresult[ key ] = nextItem[ key ];\n\t\t}\n\t}\n\n\tif ( ! hasChanges ) {\n\t\treturn item;\n\t}\n\n\t// Only at this point, backfill properties from the original item which\n\t// weren't explicitly set into the result above. This is an optimization\n\t// to allow `hasChanges` to return early.\n\tfor ( const key in item ) {\n\t\tif ( ! result.hasOwnProperty( key ) ) {\n\t\t\tresult[ key ] = item[ key ];\n\t\t}\n\t}\n\n\treturn result;\n}\n","/**\n * External dependencies\n */\nimport fastDeepEqual from 'fast-deep-equal/es6';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { combineReducers } from '@wordpress/data';\nimport { createUndoManager } from '@wordpress/undo-manager';\n\n/**\n * Internal dependencies\n */\nimport { ifMatchingAction, replaceAction } from './utils';\nimport { reducer as queriedDataReducer } from './queried-data';\nimport { rootEntitiesConfig, DEFAULT_ENTITY_KEY } from './entities';\n\n/** @typedef {import('./types').AnyFunction} AnyFunction */\n\n/**\n * Reducer managing authors state. Keyed by id.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function users( state = { byId: {}, queries: {} }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_QUERY':\n\t\t\treturn {\n\t\t\t\tbyId: {\n\t\t\t\t\t...state.byId,\n\t\t\t\t\t// Key users by their ID.\n\t\t\t\t\t...action.users.reduce(\n\t\t\t\t\t\t( newUsers, user ) => ( {\n\t\t\t\t\t\t\t...newUsers,\n\t\t\t\t\t\t\t[ user.id ]: user,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\t{}\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tqueries: {\n\t\t\t\t\t...state.queries,\n\t\t\t\t\t[ action.queryID ]: action.users.map( ( user ) => user.id ),\n\t\t\t\t},\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing current user state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function currentUser( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_USER':\n\t\t\treturn action.currentUser;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the current theme.\n *\n * @param {string|undefined} state  Current state.\n * @param {Object}           action Dispatched action.\n *\n * @return {string|undefined} Updated state.\n */\nexport function currentTheme( state = undefined, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_THEME':\n\t\t\treturn action.currentTheme.stylesheet;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the current global styles id.\n *\n * @param {string|undefined} state  Current state.\n * @param {Object}           action Dispatched action.\n *\n * @return {string|undefined} Updated state.\n */\nexport function currentGlobalStylesId( state = undefined, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_GLOBAL_STYLES_ID':\n\t\t\treturn action.id;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the theme base global styles.\n *\n * @param {Record<string, object>} state  Current state.\n * @param {Object}                 action Dispatched action.\n *\n * @return {Record<string, object>} Updated state.\n */\nexport function themeBaseGlobalStyles( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_GLOBAL_STYLES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.stylesheet ]: action.globalStyles,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the theme global styles variations.\n *\n * @param {Record<string, object>} state  Current state.\n * @param {Object}                 action Dispatched action.\n *\n * @return {Record<string, object>} Updated state.\n */\nexport function themeGlobalStyleVariations( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_GLOBAL_STYLE_VARIATIONS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.stylesheet ]: action.variations,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nconst withMultiEntityRecordEdits = ( reducer ) => ( state, action ) => {\n\tif ( action.type === 'UNDO' || action.type === 'REDO' ) {\n\t\tconst { record } = action;\n\n\t\tlet newState = state;\n\t\trecord.forEach( ( { id: { kind, name, recordId }, changes } ) => {\n\t\t\tnewState = reducer( newState, {\n\t\t\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\tedits: Object.entries( changes ).reduce(\n\t\t\t\t\t( acc, [ key, value ] ) => {\n\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\taction.type === 'UNDO' ? value.from : value.to;\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t{}\n\t\t\t\t),\n\t\t\t} );\n\t\t} );\n\t\treturn newState;\n\t}\n\n\treturn reducer( state, action );\n};\n\n/**\n * Higher Order Reducer for a given entity config. It supports:\n *\n *  - Fetching\n *  - Editing\n *  - Saving\n *\n * @param {Object} entityConfig Entity config.\n *\n * @return {AnyFunction} Reducer.\n */\nfunction entity( entityConfig ) {\n\treturn compose( [\n\t\twithMultiEntityRecordEdits,\n\n\t\t// Limit to matching action type so we don't attempt to replace action on\n\t\t// an unhandled action.\n\t\tifMatchingAction(\n\t\t\t( action ) =>\n\t\t\t\taction.name &&\n\t\t\t\taction.kind &&\n\t\t\t\taction.name === entityConfig.name &&\n\t\t\t\taction.kind === entityConfig.kind\n\t\t),\n\n\t\t// Inject the entity config into the action.\n\t\treplaceAction( ( action ) => {\n\t\t\treturn {\n\t\t\t\tkey: entityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t\t...action,\n\t\t\t};\n\t\t} ),\n\t] )(\n\t\tcombineReducers( {\n\t\t\tqueriedData: queriedDataReducer,\n\t\t\tedits: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'RECEIVE_ITEMS':\n\t\t\t\t\t\tconst context = action?.query?.context ?? 'default';\n\t\t\t\t\t\tif ( context !== 'default' ) {\n\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst nextState = { ...state };\n\n\t\t\t\t\t\tfor ( const record of action.items ) {\n\t\t\t\t\t\t\tconst recordId = record?.[ action.key ];\n\t\t\t\t\t\t\tconst edits = nextState[ recordId ];\n\t\t\t\t\t\t\tif ( ! edits ) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst nextEdits = Object.keys( edits ).reduce(\n\t\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t\t// If the edited value is still different to the persisted value,\n\t\t\t\t\t\t\t\t\t// keep the edited value in edits.\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t// Edits are the \"raw\" attribute values, but records may have\n\t\t\t\t\t\t\t\t\t\t// objects with more properties, so we use `get` here for the\n\t\t\t\t\t\t\t\t\t\t// comparison.\n\t\t\t\t\t\t\t\t\t\t! fastDeepEqual(\n\t\t\t\t\t\t\t\t\t\t\tedits[ key ],\n\t\t\t\t\t\t\t\t\t\t\trecord[ key ]?.raw ?? record[ key ]\n\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t// Sometimes the server alters the sent value which means\n\t\t\t\t\t\t\t\t\t\t// we need to also remove the edits before the api request.\n\t\t\t\t\t\t\t\t\t\t( ! action.persistedEdits ||\n\t\t\t\t\t\t\t\t\t\t\t! fastDeepEqual(\n\t\t\t\t\t\t\t\t\t\t\t\tedits[ key ],\n\t\t\t\t\t\t\t\t\t\t\t\taction.persistedEdits[ key ]\n\t\t\t\t\t\t\t\t\t\t\t) )\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( Object.keys( nextEdits ).length ) {\n\t\t\t\t\t\t\t\tnextState[ recordId ] = nextEdits;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete nextState[ recordId ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn nextState;\n\n\t\t\t\t\tcase 'EDIT_ENTITY_RECORD':\n\t\t\t\t\t\tconst nextEdits = {\n\t\t\t\t\t\t\t...state[ action.recordId ],\n\t\t\t\t\t\t\t...action.edits,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.keys( nextEdits ).forEach( ( key ) => {\n\t\t\t\t\t\t\t// Delete cleared edits so that the properties\n\t\t\t\t\t\t\t// are not considered dirty.\n\t\t\t\t\t\t\tif ( nextEdits[ key ] === undefined ) {\n\t\t\t\t\t\t\t\tdelete nextEdits[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: nextEdits,\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\tsaving: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_START':\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_FINISH':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: {\n\t\t\t\t\t\t\t\tpending:\n\t\t\t\t\t\t\t\t\taction.type === 'SAVE_ENTITY_RECORD_START',\n\t\t\t\t\t\t\t\terror: action.error,\n\t\t\t\t\t\t\t\tisAutosave: action.isAutosave,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\tdeleting: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'DELETE_ENTITY_RECORD_START':\n\t\t\t\t\tcase 'DELETE_ENTITY_RECORD_FINISH':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: {\n\t\t\t\t\t\t\t\tpending:\n\t\t\t\t\t\t\t\t\taction.type ===\n\t\t\t\t\t\t\t\t\t'DELETE_ENTITY_RECORD_START',\n\t\t\t\t\t\t\t\terror: action.error,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\trevisions: ( state = {}, action ) => {\n\t\t\t\t// Use the same queriedDataReducer shape for revisions.\n\t\t\t\tif ( action.type === 'RECEIVE_ITEM_REVISIONS' ) {\n\t\t\t\t\tconst recordKey = action.recordKey;\n\t\t\t\t\tdelete action.recordKey;\n\t\t\t\t\tconst newState = queriedDataReducer( state[ recordKey ], {\n\t\t\t\t\t\t...action,\n\t\t\t\t\t\ttype: 'RECEIVE_ITEMS',\n\t\t\t\t\t} );\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\t[ recordKey ]: newState,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif ( action.type === 'REMOVE_ITEMS' ) {\n\t\t\t\t\treturn Object.fromEntries(\n\t\t\t\t\t\tObject.entries( state ).filter(\n\t\t\t\t\t\t\t( [ id ] ) =>\n\t\t\t\t\t\t\t\t! action.itemIds.some( ( itemId ) => {\n\t\t\t\t\t\t\t\t\tif ( Number.isInteger( itemId ) ) {\n\t\t\t\t\t\t\t\t\t\treturn itemId === +id;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn itemId === id;\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\t\t} )\n\t);\n}\n\n/**\n * Reducer keeping track of the registered entities.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function entitiesConfig( state = rootEntitiesConfig, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_ENTITIES':\n\t\t\treturn [ ...state, ...action.entities ];\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the registered entities config and data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const entities = ( state = {}, action ) => {\n\tconst newConfig = entitiesConfig( state.config, action );\n\n\t// Generates a reducer for the entities nested by `kind` and `name`.\n\t// A config array with shape:\n\t// ```\n\t// [\n\t//   { kind: 'taxonomy', name: 'category' },\n\t//   { kind: 'taxonomy', name: 'post_tag' },\n\t//   { kind: 'postType', name: 'post' },\n\t//   { kind: 'postType', name: 'page' },\n\t// ]\n\t// ```\n\t// generates a reducer for state tree with shape:\n\t// ```\n\t// {\n\t//   taxonomy: {\n\t//     category,\n\t//     post_tag,\n\t//   },\n\t//   postType: {\n\t//     post,\n\t//     page,\n\t//   },\n\t// }\n\t// ```\n\tlet entitiesDataReducer = state.reducer;\n\tif ( ! entitiesDataReducer || newConfig !== state.config ) {\n\t\tconst entitiesByKind = newConfig.reduce( ( acc, record ) => {\n\t\t\tconst { kind } = record;\n\t\t\tif ( ! acc[ kind ] ) {\n\t\t\t\tacc[ kind ] = [];\n\t\t\t}\n\t\t\tacc[ kind ].push( record );\n\t\t\treturn acc;\n\t\t}, {} );\n\n\t\tentitiesDataReducer = combineReducers(\n\t\t\tObject.fromEntries(\n\t\t\t\tObject.entries( entitiesByKind ).map(\n\t\t\t\t\t( [ kind, subEntities ] ) => {\n\t\t\t\t\t\tconst kindReducer = combineReducers(\n\t\t\t\t\t\t\tObject.fromEntries(\n\t\t\t\t\t\t\t\tsubEntities.map( ( entityConfig ) => [\n\t\t\t\t\t\t\t\t\tentityConfig.name,\n\t\t\t\t\t\t\t\t\tentity( entityConfig ),\n\t\t\t\t\t\t\t\t] )\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn [ kind, kindReducer ];\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tconst newData = entitiesDataReducer( state.records, action );\n\n\tif (\n\t\tnewData === state.records &&\n\t\tnewConfig === state.config &&\n\t\tentitiesDataReducer === state.reducer\n\t) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\treducer: entitiesDataReducer,\n\t\trecords: newData,\n\t\tconfig: newConfig,\n\t};\n};\n\n/**\n * @type {UndoManager}\n */\nexport function undoManager( state = createUndoManager() ) {\n\treturn state;\n}\n\nexport function editsReference( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'EDIT_ENTITY_RECORD':\n\t\tcase 'UNDO':\n\t\tcase 'REDO':\n\t\t\treturn {};\n\t}\n\treturn state;\n}\n\n/**\n * Reducer managing embed preview data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function embedPreviews( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_EMBED_PREVIEW':\n\t\t\tconst { url, preview } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ url ]: preview,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n/**\n * State which tracks whether the user can perform an action on a REST\n * resource.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function userPermissions( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_PERMISSION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.key ]: action.isAllowed,\n\t\t\t};\n\t\tcase 'RECEIVE_USER_PERMISSIONS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.permissions,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning autosaves keyed by their parent's post id.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function autosaves( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_AUTOSAVES':\n\t\t\tconst { postId, autosaves: autosavesData } = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ postId ]: autosavesData,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nexport function blockPatterns( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_BLOCK_PATTERNS':\n\t\t\treturn action.patterns;\n\t}\n\n\treturn state;\n}\n\nexport function blockPatternCategories( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_BLOCK_PATTERN_CATEGORIES':\n\t\t\treturn action.categories;\n\t}\n\n\treturn state;\n}\n\nexport function userPatternCategories( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_PATTERN_CATEGORIES':\n\t\t\treturn action.patternCategories;\n\t}\n\treturn state;\n}\n\nexport function navigationFallbackId( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_NAVIGATION_FALLBACK_ID':\n\t\t\treturn action.fallbackId;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the theme global styles revisions.\n *\n * @param {Record<string, object>} state  Current state.\n * @param {Object}                 action Dispatched action.\n *\n * @return {Record<string, object>} Updated state.\n */\nexport function themeGlobalStyleRevisions( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_GLOBAL_STYLE_REVISIONS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.currentId ]: action.revisions,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the template lookup per query.\n *\n * @param {Record<string, string>} state  Current state.\n * @param {Object}                 action Dispatched action.\n *\n * @return {Record<string, string>} Updated state.\n */\nexport function defaultTemplates( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_DEFAULT_TEMPLATE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ JSON.stringify( action.query ) ]: action.templateId,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning an object of registered post meta.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function registeredPostMeta( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_REGISTERED_POST_META':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.postType ]: action.registeredPostMeta,\n\t\t\t};\n\t}\n\treturn state;\n}\n\nexport default combineReducers( {\n\tusers,\n\tcurrentTheme,\n\tcurrentGlobalStylesId,\n\tcurrentUser,\n\tthemeGlobalStyleVariations,\n\tthemeBaseGlobalStyles,\n\tthemeGlobalStyleRevisions,\n\tentities,\n\teditsReference,\n\tundoManager,\n\tembedPreviews,\n\tuserPermissions,\n\tautosaves,\n\tblockPatterns,\n\tblockPatternCategories,\n\tuserPatternCategories,\n\tnavigationFallbackId,\n\tdefaultTemplates,\n\tregisteredPostMeta,\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"deprecated\"];","/**\n * The reducer key used by core data in store registration.\n * This is defined in a separate file to avoid cycle-dependency\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core';\n","/**\n * Sets the value at path of object.\n * If a portion of path doesn’t exist, it’s created.\n * Arrays are created for missing index properties while objects are created\n * for all other missing properties.\n *\n * Path is specified as either:\n * - a string of properties, separated by dots, for example: \"x.y\".\n * - an array of properties, for example `[ 'x', 'y' ]`.\n *\n * This function intentionally mutates the input object.\n *\n * Inspired by _.set().\n *\n * @see https://lodash.com/docs/4.17.15#set\n *\n * @todo Needs to be deduplicated with its copy in `@wordpress/edit-site`.\n *\n * @param {Object}       object Object to modify\n * @param {Array|string} path   Path of the property to set.\n * @param {*}            value  Value to set.\n */\nexport default function setNestedValue( object, path, value ) {\n\tif ( ! object || typeof object !== 'object' ) {\n\t\treturn object;\n\t}\n\n\tconst normalizedPath = Array.isArray( path ) ? path : path.split( '.' );\n\n\tnormalizedPath.reduce( ( acc, key, idx ) => {\n\t\tif ( acc[ key ] === undefined ) {\n\t\t\tif ( Number.isInteger( normalizedPath[ idx + 1 ] ) ) {\n\t\t\t\tacc[ key ] = [];\n\t\t\t} else {\n\t\t\t\tacc[ key ] = {};\n\t\t\t}\n\t\t}\n\t\tif ( idx === normalizedPath.length - 1 ) {\n\t\t\tacc[ key ] = value;\n\t\t}\n\t\treturn acc[ key ];\n\t}, object );\n\n\treturn object;\n}\n","/**\n * External dependencies\n */\nimport EquivalentKeyMap from 'equivalent-key-map';\n\n/**\n * WordPress dependencies\n */\nimport { createSelector } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport getQueryParts from './get-query-parts';\nimport { setNestedValue } from '../utils';\n\n/**\n * Cache of state keys to EquivalentKeyMap where the inner map tracks queries\n * to their resulting items set. WeakMap allows garbage collection on expired\n * state references.\n *\n * @type {WeakMap<Object,EquivalentKeyMap>}\n */\nconst queriedItemsCacheByState = new WeakMap();\n\n/**\n * Returns items for a given query, or null if the items are not known.\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nfunction getQueriedItemsUncached( state, query ) {\n\tconst { stableKey, page, perPage, include, fields, context } =\n\t\tgetQueryParts( query );\n\tlet itemIds;\n\n\tif ( state.queries?.[ context ]?.[ stableKey ] ) {\n\t\titemIds = state.queries[ context ][ stableKey ].itemIds;\n\t}\n\n\tif ( ! itemIds ) {\n\t\treturn null;\n\t}\n\n\tconst startOffset = perPage === -1 ? 0 : ( page - 1 ) * perPage;\n\tconst endOffset =\n\t\tperPage === -1\n\t\t\t? itemIds.length\n\t\t\t: Math.min( startOffset + perPage, itemIds.length );\n\n\tconst items = [];\n\tfor ( let i = startOffset; i < endOffset; i++ ) {\n\t\tconst itemId = itemIds[ i ];\n\t\tif ( Array.isArray( include ) && ! include.includes( itemId ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( itemId === undefined ) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Having a target item ID doesn't guarantee that this object has been queried.\n\t\tif ( ! state.items[ context ]?.hasOwnProperty( itemId ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = state.items[ context ][ itemId ];\n\n\t\tlet filteredItem;\n\t\tif ( Array.isArray( fields ) ) {\n\t\t\tfilteredItem = {};\n\n\t\t\tfor ( let f = 0; f < fields.length; f++ ) {\n\t\t\t\tconst field = fields[ f ].split( '.' );\n\t\t\t\tlet value = item;\n\t\t\t\tfield.forEach( ( fieldName ) => {\n\t\t\t\t\tvalue = value?.[ fieldName ];\n\t\t\t\t} );\n\n\t\t\t\tsetNestedValue( filteredItem, field, value );\n\t\t\t}\n\t\t} else {\n\t\t\t// If expecting a complete item, validate that completeness, or\n\t\t\t// otherwise abort.\n\t\t\tif ( ! state.itemIsComplete[ context ]?.[ itemId ] ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfilteredItem = item;\n\t\t}\n\n\t\titems.push( filteredItem );\n\t}\n\n\treturn items;\n}\n\n/**\n * Returns items for a given query, or null if the items are not known. Caches\n * result both per state (by reference) and per query (by deep equality).\n * The caching approach is intended to be durable to query objects which are\n * deeply but not referentially equal, since otherwise:\n *\n * `getQueriedItems( state, {} ) !== getQueriedItems( state, {} )`\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nexport const getQueriedItems = createSelector( ( state, query = {} ) => {\n\tlet queriedItemsCache = queriedItemsCacheByState.get( state );\n\tif ( queriedItemsCache ) {\n\t\tconst queriedItems = queriedItemsCache.get( query );\n\t\tif ( queriedItems !== undefined ) {\n\t\t\treturn queriedItems;\n\t\t}\n\t} else {\n\t\tqueriedItemsCache = new EquivalentKeyMap();\n\t\tqueriedItemsCacheByState.set( state, queriedItemsCache );\n\t}\n\n\tconst items = getQueriedItemsUncached( state, query );\n\tqueriedItemsCache.set( query, items );\n\treturn items;\n} );\n\nexport function getQueriedTotalItems( state, query = {} ) {\n\tconst { stableKey, context } = getQueryParts( query );\n\n\treturn state.queries?.[ context ]?.[ stableKey ]?.meta?.totalItems ?? null;\n}\n\nexport function getQueriedTotalPages( state, query = {} ) {\n\tconst { stableKey, context } = getQueryParts( query );\n\n\treturn state.queries?.[ context ]?.[ stableKey ]?.meta?.totalPages ?? null;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\n\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I acknowledge private features are not for use in themes or plugins and doing so will break in the next version of WordPress.',\n\t\t'@wordpress/core-data'\n\t);\n","/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { deprecatedEntities } from '../entities';\n\nlet loggedAlready = false;\n\n/**\n * Logs a deprecation warning for an entity, if it's deprecated.\n *\n * @param kind                            The kind of the entity.\n * @param name                            The name of the entity.\n * @param functionName                    The name of the function that was called with a deprecated entity.\n * @param options                         The options for the deprecation warning.\n * @param options.alternativeFunctionName The name of the alternative function that should be used instead.\n * @param options.isShorthandSelector     Whether the function is a shorthand selector.\n */\nexport default function logEntityDeprecation(\n\tkind: string,\n\tname: string,\n\tfunctionName: string,\n\t{\n\t\talternativeFunctionName,\n\t\tisShorthandSelector = false,\n\t}: {\n\t\talternativeFunctionName?: string;\n\t\tisShorthandSelector?: boolean;\n\t} = {}\n) {\n\tconst deprecation = deprecatedEntities[ kind ]?.[ name ];\n\tif ( ! deprecation ) {\n\t\treturn;\n\t}\n\n\tif ( ! loggedAlready ) {\n\t\tconst { alternative } = deprecation;\n\n\t\tconst message = isShorthandSelector\n\t\t\t? `'${ functionName }'`\n\t\t\t: `The '${ kind }', '${ name }' entity (used via '${ functionName }')`;\n\n\t\tlet alternativeMessage = `the '${ alternative.kind }', '${ alternative.name }' entity`;\n\t\tif ( alternativeFunctionName ) {\n\t\t\talternativeMessage += ` via the '${ alternativeFunctionName }' function`;\n\t\t}\n\n\t\tdeprecated( message, {\n\t\t\t...deprecation,\n\t\t\talternative: alternativeMessage,\n\t\t} );\n\t}\n\n\t// Only log an entity deprecation once per call stack,\n\t// else there's spurious logging when selections or actions call through to other selectors or actions.\n\t// Note: this won't prevent the deprecation warning being logged if a selector or action makes an async call\n\t// to another selector or action, but this is probably the best we can do.\n\tloggedAlready = true;\n\t// At the end of the call stack, reset the flag.\n\tsetTimeout( () => {\n\t\tloggedAlready = false;\n\t}, 0 );\n}\n","/**\n * WordPress dependencies\n */\nimport { applyFilters } from '@wordpress/hooks';\nimport { getWebRTCSyncProvider, SyncProvider } from '@wordpress/sync';\n\ndeclare global {\n\tinterface Window {\n\t\t__experimentalEnableSync?: boolean;\n\t}\n}\n\nlet syncProvider: SyncProvider | null = null;\n\n/**\n * Returns the current sync provider, filterable by external code.\n *\n * If no sync provider is set, it returns a fallback no-op sync provider to\n * remove the need for defensive checks in the code that uses it.\n *\n * @return The current sync provider.\n */\nexport function getSyncProvider(): SyncProvider {\n\tif ( syncProvider ) {\n\t\treturn syncProvider;\n\t}\n\n\tconst fallbackNoOpSyncProvider = new SyncProvider();\n\n\tsyncProvider = applyFilters(\n\t\t'core.getSyncProvider',\n\t\tnull\n\t) as SyncProvider | null;\n\n\t// If the filter does not produce a provider and the experimental flag is set,\n\t// get the WebRTC sync provider.\n\tif ( ! syncProvider && window.__experimentalEnableSync ) {\n\t\tsyncProvider = getWebRTCSyncProvider();\n\t}\n\n\t// If no sync provider is set, use the fallback no-op sync provider.\n\tif ( ! syncProvider ) {\n\t\tsyncProvider = fallbackNoOpSyncProvider;\n\t}\n\n\treturn syncProvider;\n}\n","/**\n * WordPress dependencies\n */\nimport { createSelector, createRegistrySelector } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { getDefaultTemplateId, getEntityRecord, type State } from './selectors';\nimport { STORE_NAME } from './name';\nimport { unlock } from './lock-unlock';\nimport logEntityDeprecation from './utils/log-entity-deprecation';\nimport { getSyncProvider } from './sync';\n\ntype EntityRecordKey = string | number;\n\n/**\n * Returns the previous edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param state State tree.\n *\n * @return The undo manager.\n */\nexport function getUndoManager( state: State ) {\n\treturn getSyncProvider().getUndoManager() ?? state.undoManager;\n}\n\n/**\n * Retrieve the fallback Navigation.\n *\n * @param state Data state.\n * @return The ID for the fallback Navigation post.\n */\nexport function getNavigationFallbackId(\n\tstate: State\n): EntityRecordKey | undefined {\n\treturn state.navigationFallbackId;\n}\n\nexport const getBlockPatternsForPostType = createRegistrySelector(\n\t( select: any ) =>\n\t\tcreateSelector(\n\t\t\t( state, postType ) =>\n\t\t\t\tselect( STORE_NAME )\n\t\t\t\t\t.getBlockPatterns()\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t( { postTypes } ) =>\n\t\t\t\t\t\t\t! postTypes ||\n\t\t\t\t\t\t\t( Array.isArray( postTypes ) &&\n\t\t\t\t\t\t\t\tpostTypes.includes( postType ) )\n\t\t\t\t\t),\n\t\t\t() => [ select( STORE_NAME ).getBlockPatterns() ]\n\t\t)\n);\n\n/**\n * Returns the entity records permissions for the given entity record ids.\n */\nexport const getEntityRecordsPermissions = createRegistrySelector( ( select ) =>\n\tcreateSelector(\n\t\t(\n\t\t\tstate: State,\n\t\t\tkind: string,\n\t\t\tname: string,\n\t\t\tids: string | string[]\n\t\t) => {\n\t\t\tconst normalizedIds = Array.isArray( ids ) ? ids : [ ids ];\n\t\t\treturn normalizedIds.map( ( id ) => ( {\n\t\t\t\tdelete: select( STORE_NAME ).canUser( 'delete', {\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t} ),\n\t\t\t\tupdate: select( STORE_NAME ).canUser( 'update', {\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t} ),\n\t\t\t} ) );\n\t\t},\n\t\t( state ) => [ state.userPermissions ]\n\t)\n);\n\n/**\n * Returns the entity record permissions for the given entity record id.\n *\n * @param state Data state.\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param id    Entity record id.\n *\n * @return The entity record permissions.\n */\nexport function getEntityRecordPermissions(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\tid: string\n) {\n\tlogEntityDeprecation( kind, name, 'getEntityRecordPermissions' );\n\treturn getEntityRecordsPermissions( state, kind, name, id )[ 0 ];\n}\n\n/**\n * Returns the registered post meta fields for a given post type.\n *\n * @param state    Data state.\n * @param postType Post type.\n *\n * @return Registered post meta fields.\n */\nexport function getRegisteredPostMeta( state: State, postType: string ) {\n\treturn state.registeredPostMeta?.[ postType ] ?? {};\n}\n\nfunction normalizePageId( value: number | string | undefined ): string | null {\n\tif ( ! value || ! [ 'number', 'string' ].includes( typeof value ) ) {\n\t\treturn null;\n\t}\n\n\t// We also need to check if it's not zero (`'0'`).\n\tif ( Number( value ) === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn value.toString();\n}\n\ninterface SiteData {\n\tshow_on_front?: string;\n\tpage_on_front?: string | number;\n\tpage_for_posts?: string | number;\n}\n\nexport const getHomePage = createRegistrySelector( ( select ) =>\n\tcreateSelector(\n\t\t() => {\n\t\t\tconst siteData = select( STORE_NAME ).getEntityRecord(\n\t\t\t\t'root',\n\t\t\t\t'__unstableBase'\n\t\t\t) as SiteData | undefined;\n\t\t\t// Still resolving getEntityRecord.\n\t\t\tif ( ! siteData ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst homepageId =\n\t\t\t\tsiteData?.show_on_front === 'page'\n\t\t\t\t\t? normalizePageId( siteData.page_on_front )\n\t\t\t\t\t: null;\n\t\t\tif ( homepageId ) {\n\t\t\t\treturn { postType: 'page', postId: homepageId };\n\t\t\t}\n\t\t\tconst frontPageTemplateId = select(\n\t\t\t\tSTORE_NAME\n\t\t\t).getDefaultTemplateId( {\n\t\t\t\tslug: 'front-page',\n\t\t\t} );\n\t\t\t// Still resolving getDefaultTemplateId.\n\t\t\tif ( ! frontPageTemplateId ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { postType: 'wp_template', postId: frontPageTemplateId };\n\t\t},\n\t\t( state ) => [\n\t\t\tgetEntityRecord( state, 'root', '__unstableBase' ),\n\t\t\tgetDefaultTemplateId( state, {\n\t\t\t\tslug: 'front-page',\n\t\t\t} ),\n\t\t]\n\t)\n);\n\nexport const getPostsPageId = createRegistrySelector( ( select ) => () => {\n\tconst siteData = select( STORE_NAME ).getEntityRecord(\n\t\t'root',\n\t\t'__unstableBase'\n\t) as SiteData | undefined;\n\treturn siteData?.show_on_front === 'page'\n\t\t? normalizePageId( siteData.page_for_posts )\n\t\t: null;\n} );\n\nexport const getTemplateId = createRegistrySelector(\n\t( select ) => ( state, postType, postId ) => {\n\t\tconst homepage = unlock( select( STORE_NAME ) ).getHomePage();\n\n\t\tif ( ! homepage ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// For the front page, we always use the front page template if existing.\n\t\tif (\n\t\t\tpostType === 'page' &&\n\t\t\tpostType === homepage?.postType &&\n\t\t\tpostId.toString() === homepage?.postId\n\t\t) {\n\t\t\t// The /lookup endpoint cannot currently handle a lookup\n\t\t\t// when a page is set as the front page, so specifically in\n\t\t\t// that case, we want to check if there is a front page\n\t\t\t// template, and instead of falling back to the home\n\t\t\t// template, we want to fall back to the page template.\n\t\t\tconst templates = select( STORE_NAME ).getEntityRecords(\n\t\t\t\t'postType',\n\t\t\t\t'wp_template',\n\t\t\t\t{\n\t\t\t\t\tper_page: -1,\n\t\t\t\t}\n\t\t\t);\n\t\t\tif ( ! templates ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst id = templates.find( ( { slug } ) => slug === 'front-page' )\n\t\t\t\t?.id;\n\t\t\tif ( id ) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t\t// If no front page template is found, continue with the\n\t\t\t// logic below (fetching the page template).\n\t\t}\n\n\t\tconst editedEntity = select( STORE_NAME ).getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tif ( ! editedEntity ) {\n\t\t\treturn;\n\t\t}\n\t\tconst postsPageId = unlock( select( STORE_NAME ) ).getPostsPageId();\n\t\t// Check if the current page is the posts page.\n\t\tif ( postType === 'page' && postsPageId === postId.toString() ) {\n\t\t\treturn select( STORE_NAME ).getDefaultTemplateId( {\n\t\t\t\tslug: 'home',\n\t\t\t} );\n\t\t}\n\t\t// First see if the post/page has an assigned template and fetch it.\n\t\tconst currentTemplateSlug = editedEntity.template;\n\t\tif ( currentTemplateSlug ) {\n\t\t\tconst currentTemplate = select( STORE_NAME )\n\t\t\t\t.getEntityRecords( 'postType', 'wp_template', {\n\t\t\t\t\tper_page: -1,\n\t\t\t\t} )\n\t\t\t\t?.find( ( { slug } ) => slug === currentTemplateSlug );\n\t\t\tif ( currentTemplate ) {\n\t\t\t\treturn currentTemplate.id;\n\t\t\t}\n\t\t}\n\t\t// If no template is assigned, use the default template.\n\t\tlet slugToCheck;\n\t\t// In `draft` status we might not have a slug available, so we use the `single`\n\t\t// post type templates slug(ex page, single-post, single-product etc..).\n\t\t// Pages do not need the `single` prefix in the slug to be prioritized\n\t\t// through template hierarchy.\n\t\tif ( editedEntity.slug ) {\n\t\t\tslugToCheck =\n\t\t\t\tpostType === 'page'\n\t\t\t\t\t? `${ postType }-${ editedEntity.slug }`\n\t\t\t\t\t: `single-${ postType }-${ editedEntity.slug }`;\n\t\t} else {\n\t\t\tslugToCheck = postType === 'page' ? 'page' : `single-${ postType }`;\n\t\t}\n\t\treturn select( STORE_NAME ).getDefaultTemplateId( {\n\t\t\tslug: slugToCheck,\n\t\t} );\n\t}\n);\n","export const ALLOWED_RESOURCE_ACTIONS = [\n\t'create',\n\t'read',\n\t'update',\n\t'delete',\n];\n\nexport function getUserPermissionsFromAllowHeader( allowedMethods ) {\n\tconst permissions = {};\n\tif ( ! allowedMethods ) {\n\t\treturn permissions;\n\t}\n\n\tconst methods = {\n\t\tcreate: 'POST',\n\t\tread: 'GET',\n\t\tupdate: 'PUT',\n\t\tdelete: 'DELETE',\n\t};\n\tfor ( const [ actionName, methodName ] of Object.entries( methods ) ) {\n\t\tpermissions[ actionName ] = allowedMethods.includes( methodName );\n\t}\n\n\treturn permissions;\n}\n\nexport function getUserPermissionCacheKey( action, resource, id ) {\n\tconst key = (\n\t\ttypeof resource === 'object'\n\t\t\t? [ action, resource.kind, resource.name, resource.id ]\n\t\t\t: [ action, resource, id ]\n\t)\n\t\t.filter( Boolean )\n\t\t.join( '/' );\n\n\treturn key;\n}\n","/**\n * WordPress dependencies\n */\nimport { createSelector, createRegistrySelector } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './name';\nimport {\n\tgetQueriedItems,\n\tgetQueriedTotalItems,\n\tgetQueriedTotalPages,\n} from './queried-data';\nimport { DEFAULT_ENTITY_KEY } from './entities';\nimport { getUndoManager } from './private-selectors';\nimport {\n\tgetNormalizedCommaSeparable,\n\tisRawAttribute,\n\tsetNestedValue,\n\tisNumericID,\n\tgetUserPermissionCacheKey,\n} from './utils';\nimport type * as ET from './entity-types';\nimport type { UndoManager } from '@wordpress/undo-manager';\nimport logEntityDeprecation from './utils/log-entity-deprecation';\n\n// This is an incomplete, high-level approximation of the State type.\n// It makes the selectors slightly more safe, but is intended to evolve\n// into a more detailed representation over time.\n// See https://github.com/WordPress/gutenberg/pull/40025#discussion_r865410589 for more context.\nexport interface State {\n\tautosaves: Record< string | number, Array< unknown > >;\n\tblockPatterns: Array< unknown >;\n\tblockPatternCategories: Array< unknown >;\n\tcurrentGlobalStylesId: string;\n\tcurrentTheme: string;\n\tcurrentUser: ET.User< 'view' >;\n\tembedPreviews: Record< string, { html: string } >;\n\tentities: EntitiesState;\n\tthemeBaseGlobalStyles: Record< string, Object >;\n\tthemeGlobalStyleVariations: Record< string, string >;\n\tthemeGlobalStyleRevisions: Record< number, Object >;\n\tundoManager: UndoManager;\n\tuserPermissions: Record< string, boolean >;\n\tusers: UserState;\n\tnavigationFallbackId: EntityRecordKey;\n\tuserPatternCategories: Array< UserPatternCategory >;\n\tdefaultTemplates: Record< string, string >;\n\tregisteredPostMeta: Record< string, Object >;\n}\n\ntype EntityRecordKey = string | number;\n\ninterface EntitiesState {\n\tconfig: EntityConfig[];\n\trecords: Record< string, Record< string, EntityState< ET.EntityRecord > > >;\n}\n\ninterface QueriedData {\n\titems: Record< ET.Context, Record< number, ET.EntityRecord > >;\n\titemIsComplete: Record< ET.Context, Record< number, boolean > >;\n\tqueries: Record< ET.Context, Record< string, Array< number > > >;\n}\n\ntype RevisionRecord =\n\t| Record< ET.Context, Record< number, ET.PostRevision > >\n\t| Record< ET.Context, Record< number, ET.GlobalStylesRevision > >;\n\ninterface RevisionsQueriedData {\n\titems: RevisionRecord;\n\titemIsComplete: Record< ET.Context, Record< number, boolean > >;\n\tqueries: Record< ET.Context, Record< string, Array< number > > >;\n}\n\ninterface EntityState< EntityRecord extends ET.EntityRecord > {\n\tedits: Record< string, Partial< EntityRecord > >;\n\tsaving: Record<\n\t\tstring,\n\t\tPartial< { pending: boolean; isAutosave: boolean; error: Error } >\n\t>;\n\tdeleting: Record< string, Partial< { pending: boolean; error: Error } > >;\n\tqueriedData: QueriedData;\n\trevisions?: RevisionsQueriedData;\n}\n\ninterface EntityConfig {\n\tname: string;\n\tkind: string;\n}\n\ninterface UserState {\n\tqueries: Record< string, EntityRecordKey[] >;\n\tbyId: Record< EntityRecordKey, ET.User< 'edit' > >;\n}\n\ntype TemplateQuery = {\n\tslug?: string;\n\tis_custom?: boolean;\n\tignore_empty?: boolean;\n};\n\nexport interface UserPatternCategory {\n\tid: number;\n\tname: string;\n\tlabel: string;\n\tslug: string;\n\tdescription: string;\n}\n\ntype Optional< T > = T | undefined;\n\n/**\n * HTTP Query parameters sent with the API request to fetch the entity records.\n */\nexport type GetRecordsHttpQuery = Record< string, any >;\n\n/**\n * Arguments for EntityRecord selectors.\n */\ntype EntityRecordArgs =\n\t| [ string, string, EntityRecordKey ]\n\t| [ string, string, EntityRecordKey, GetRecordsHttpQuery ];\n\ntype EntityResource = { kind: string; name: string; id?: EntityRecordKey };\n\n/**\n * Shared reference to an empty object for cases where it is important to avoid\n * returning a new object reference on every invocation, as in a connected or\n * other pure component which performs `shouldComponentUpdate` check on props.\n * This should be used as a last resort, since the normalized data should be\n * maintained by the reducer result in state.\n */\nconst EMPTY_OBJECT = {};\n\n/**\n * Returns true if a request is in progress for embed preview data, or false\n * otherwise.\n *\n * @param state Data state.\n * @param url   URL the preview would be for.\n *\n * @return Whether a request is in progress for an embed preview.\n */\nexport const isRequestingEmbedPreview = createRegistrySelector(\n\t( select: any ) =>\n\t\t( state: State, url: string ): boolean => {\n\t\t\treturn select( STORE_NAME ).isResolving( 'getEmbedPreview', [\n\t\t\t\turl,\n\t\t\t] );\n\t\t}\n);\n\n/**\n * Returns all available authors.\n *\n * @deprecated since 11.3. Callers should use `select( 'core' ).getUsers({ who: 'authors' })` instead.\n *\n * @param      state Data state.\n * @param      query Optional object of query parameters to\n *                   include with request. For valid query parameters see the [Users page](https://developer.wordpress.org/rest-api/reference/users/) in the REST API Handbook and see the arguments for [List Users](https://developer.wordpress.org/rest-api/reference/users/#list-users) and [Retrieve a User](https://developer.wordpress.org/rest-api/reference/users/#retrieve-a-user).\n * @return Authors list.\n */\nexport function getAuthors(\n\tstate: State,\n\tquery?: GetRecordsHttpQuery\n): ET.User[] {\n\tdeprecated( \"select( 'core' ).getAuthors()\", {\n\t\tsince: '5.9',\n\t\talternative: \"select( 'core' ).getUsers({ who: 'authors' })\",\n\t} );\n\n\tconst path = addQueryArgs(\n\t\t'/wp/v2/users/?who=authors&per_page=100',\n\t\tquery\n\t);\n\treturn getUserQueryResults( state, path );\n}\n\n/**\n * Returns the current user.\n *\n * @param state Data state.\n *\n * @return Current user object.\n */\nexport function getCurrentUser( state: State ): ET.User< 'view' > {\n\treturn state.currentUser;\n}\n\n/**\n * Returns all the users returned by a query ID.\n *\n * @param state   Data state.\n * @param queryID Query ID.\n *\n * @return Users list.\n */\nexport const getUserQueryResults = createSelector(\n\t( state: State, queryID: string ): ET.User< 'edit' >[] => {\n\t\tconst queryResults = state.users.queries[ queryID ] ?? [];\n\n\t\treturn queryResults.map( ( id ) => state.users.byId[ id ] );\n\t},\n\t( state: State, queryID: string ) => [\n\t\tstate.users.queries[ queryID ],\n\t\tstate.users.byId,\n\t]\n);\n\n/**\n * Returns the loaded entities for the given kind.\n *\n * @deprecated since WordPress 6.0. Use getEntitiesConfig instead\n * @param      state Data state.\n * @param      kind  Entity kind.\n *\n * @return Array of entities with config matching kind.\n */\nexport function getEntitiesByKind( state: State, kind: string ): Array< any > {\n\tdeprecated( \"wp.data.select( 'core' ).getEntitiesByKind()\", {\n\t\tsince: '6.0',\n\t\talternative: \"wp.data.select( 'core' ).getEntitiesConfig()\",\n\t} );\n\treturn getEntitiesConfig( state, kind );\n}\n\n/**\n * Returns the loaded entities for the given kind.\n *\n * @param state Data state.\n * @param kind  Entity kind.\n *\n * @return Array of entities with config matching kind.\n */\nexport const getEntitiesConfig = createSelector(\n\t( state: State, kind: string ): Array< any > =>\n\t\tstate.entities.config.filter( ( entity ) => entity.kind === kind ),\n\t/* eslint-disable @typescript-eslint/no-unused-vars */\n\t( state: State, kind: string ) => state.entities.config\n\t/* eslint-enable @typescript-eslint/no-unused-vars */\n);\n/**\n * Returns the entity config given its kind and name.\n *\n * @deprecated since WordPress 6.0. Use getEntityConfig instead\n * @param      state Data state.\n * @param      kind  Entity kind.\n * @param      name  Entity name.\n *\n * @return Entity config\n */\nexport function getEntity( state: State, kind: string, name: string ): any {\n\tdeprecated( \"wp.data.select( 'core' ).getEntity()\", {\n\t\tsince: '6.0',\n\t\talternative: \"wp.data.select( 'core' ).getEntityConfig()\",\n\t} );\n\treturn getEntityConfig( state, kind, name );\n}\n\n/**\n * Returns the entity config given its kind and name.\n *\n * @param state Data state.\n * @param kind  Entity kind.\n * @param name  Entity name.\n *\n * @return Entity config\n */\nexport function getEntityConfig(\n\tstate: State,\n\tkind: string,\n\tname: string\n): any {\n\tlogEntityDeprecation( kind, name, 'getEntityConfig' );\n\n\treturn state.entities.config?.find(\n\t\t( config ) => config.kind === kind && config.name === name\n\t);\n}\n\n/**\n * GetEntityRecord is declared as a *callable interface* with\n * two signatures to work around the fact that TypeScript doesn't\n * allow currying generic functions:\n *\n * ```ts\n * \t\ttype CurriedState = F extends ( state: any, ...args: infer P ) => infer R\n * \t\t\t? ( ...args: P ) => R\n * \t\t\t: F;\n * \t\ttype Selector = <K extends string | number>(\n *         state: any,\n *         kind: K,\n *         key: K extends string ? 'string value' : false\n *    ) => K;\n * \t\ttype BadlyInferredSignature = CurriedState< Selector >\n *    // BadlyInferredSignature evaluates to:\n *    // (kind: string number, key: false | \"string value\") => string number\n * ```\n *\n * The signature without the state parameter shipped as CurriedSignature\n * is used in the return value of `select( coreStore )`.\n *\n * See https://github.com/WordPress/gutenberg/pull/41578 for more details.\n */\nexport interface GetEntityRecord {\n\t<\n\t\tEntityRecord extends\n\t\t\t| ET.EntityRecord< any >\n\t\t\t| Partial< ET.EntityRecord< any > >,\n\t>(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\tkey?: EntityRecordKey,\n\t\tquery?: GetRecordsHttpQuery\n\t): EntityRecord | undefined;\n\n\tCurriedSignature: <\n\t\tEntityRecord extends\n\t\t\t| ET.EntityRecord< any >\n\t\t\t| Partial< ET.EntityRecord< any > >,\n\t>(\n\t\tkind: string,\n\t\tname: string,\n\t\tkey?: EntityRecordKey,\n\t\tquery?: GetRecordsHttpQuery\n\t) => EntityRecord | undefined;\n\t__unstableNormalizeArgs?: ( args: EntityRecordArgs ) => EntityRecordArgs;\n}\n\n/**\n * Returns the Entity's record object by key. Returns `null` if the value is not\n * yet received, undefined if the value entity is known to not exist, or the\n * entity object if it exists and is received.\n *\n * @param state State tree\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param key   Optional record's key. If requesting a global record (e.g. site settings), the key can be omitted. If requesting a specific item, the key must always be included.\n * @param query Optional query. If requesting specific\n *              fields, fields must always include the ID. For valid query parameters see the [Reference](https://developer.wordpress.org/rest-api/reference/) in the REST API Handbook and select the entity kind. Then see the arguments available \"Retrieve a [Entity kind]\".\n *\n * @return Record.\n */\nexport const getEntityRecord = createSelector(\n\t( <\n\t\tEntityRecord extends\n\t\t\t| ET.EntityRecord< any >\n\t\t\t| Partial< ET.EntityRecord< any > >,\n\t>(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\tkey?: EntityRecordKey,\n\t\tquery?: GetRecordsHttpQuery\n\t): EntityRecord | undefined => {\n\t\tlogEntityDeprecation( kind, name, 'getEntityRecord' );\n\n\t\tconst queriedState =\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData;\n\t\tif ( ! queriedState ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst context = query?.context ?? 'default';\n\n\t\tif ( ! query || ! query._fields ) {\n\t\t\t// If expecting a complete item, validate that completeness.\n\t\t\tif ( ! queriedState.itemIsComplete[ context ]?.[ key ] ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn queriedState.items[ context ][ key ];\n\t\t}\n\n\t\tconst item = queriedState.items[ context ]?.[ key ];\n\t\tif ( ! item ) {\n\t\t\treturn item;\n\t\t}\n\n\t\tconst filteredItem = {};\n\t\tconst fields = getNormalizedCommaSeparable( query._fields ) ?? [];\n\t\tfor ( let f = 0; f < fields.length; f++ ) {\n\t\t\tconst field = fields[ f ].split( '.' );\n\t\t\tlet value = item;\n\t\t\tfield.forEach( ( fieldName ) => {\n\t\t\t\tvalue = value?.[ fieldName ];\n\t\t\t} );\n\t\t\tsetNestedValue( filteredItem, field, value );\n\t\t}\n\t\treturn filteredItem as EntityRecord;\n\t} ) as GetEntityRecord,\n\t( state: State, kind, name, recordId, query ) => {\n\t\tconst context = query?.context ?? 'default';\n\t\tconst queriedState =\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData;\n\t\treturn [\n\t\t\tqueriedState?.items[ context ]?.[ recordId ],\n\t\t\tqueriedState?.itemIsComplete[ context ]?.[ recordId ],\n\t\t];\n\t}\n) as GetEntityRecord;\n\n/**\n * Normalizes `recordKey`s that look like numeric IDs to numbers.\n *\n * @param args EntityRecordArgs the selector arguments.\n * @return EntityRecordArgs the normalized arguments.\n */\ngetEntityRecord.__unstableNormalizeArgs = (\n\targs: EntityRecordArgs\n): EntityRecordArgs => {\n\tconst newArgs = [ ...args ] as EntityRecordArgs;\n\tconst recordKey = newArgs?.[ 2 ];\n\n\t// If recordKey looks to be a numeric ID then coerce to number.\n\tnewArgs[ 2 ] = isNumericID( recordKey ) ? Number( recordKey ) : recordKey;\n\n\treturn newArgs;\n};\n\n/**\n * Returns true if a record has been received for the given set of parameters, or false otherwise.\n *\n * Note: This action does not trigger a request for the entity record from the API\n * if it's not available in the local state.\n *\n * @param state State tree\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param key   Record's key.\n * @param query Optional query.\n *\n * @return Whether an entity record has been received.\n */\nexport function hasEntityRecord(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\tkey?: EntityRecordKey,\n\tquery?: GetRecordsHttpQuery\n): boolean {\n\tconst queriedState =\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData;\n\tif ( ! queriedState ) {\n\t\treturn false;\n\t}\n\tconst context = query?.context ?? 'default';\n\n\t// If expecting a complete item, validate that completeness.\n\tif ( ! query || ! query._fields ) {\n\t\treturn !! queriedState.itemIsComplete[ context ]?.[ key ];\n\t}\n\n\tconst item = queriedState.items[ context ]?.[ key ];\n\tif ( ! item ) {\n\t\treturn false;\n\t}\n\n\t// When `query._fields` is provided, check that each requested field exists,\n\t// including any nested paths, on the item; return false if any part is missing.\n\tconst fields = getNormalizedCommaSeparable( query._fields ) ?? [];\n\tfor ( let i = 0; i < fields.length; i++ ) {\n\t\tconst path = fields[ i ].split( '.' );\n\t\tlet value = item;\n\t\tfor ( let p = 0; p < path.length; p++ ) {\n\t\t\tconst part = path[ p ];\n\t\t\tif ( ! value || ! Object.hasOwn( value, part ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvalue = value[ part ];\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns the Entity's record object by key. Doesn't trigger a resolver nor requests the entity records from the API if the entity record isn't available in the local state.\n *\n * @param state State tree\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param key   Record's key\n *\n * @return Record.\n */\nexport function __experimentalGetEntityRecordNoResolver<\n\tEntityRecord extends ET.EntityRecord< any >,\n>( state: State, kind: string, name: string, key: EntityRecordKey ) {\n\treturn getEntityRecord< EntityRecord >( state, kind, name, key );\n}\n\n/**\n * Returns the entity's record object by key,\n * with its attributes mapped to their raw values.\n *\n * @param state State tree.\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param key   Record's key.\n *\n * @return Object with the entity's raw attributes.\n */\nexport const getRawEntityRecord = createSelector(\n\t< EntityRecord extends ET.EntityRecord< any > >(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\tkey: EntityRecordKey\n\t): EntityRecord | undefined => {\n\t\tlogEntityDeprecation( kind, name, 'getRawEntityRecord' );\n\n\t\tconst record = getEntityRecord< EntityRecord >(\n\t\t\tstate,\n\t\t\tkind,\n\t\t\tname,\n\t\t\tkey\n\t\t);\n\t\treturn (\n\t\t\trecord &&\n\t\t\tObject.keys( record ).reduce( ( accumulator, _key ) => {\n\t\t\t\tif (\n\t\t\t\t\tisRawAttribute( getEntityConfig( state, kind, name ), _key )\n\t\t\t\t) {\n\t\t\t\t\t// Because edits are the \"raw\" attribute values,\n\t\t\t\t\t// we return those from record selectors to make rendering,\n\t\t\t\t\t// comparisons, and joins with edits easier.\n\t\t\t\t\taccumulator[ _key ] =\n\t\t\t\t\t\trecord[ _key ]?.raw !== undefined\n\t\t\t\t\t\t\t? record[ _key ]?.raw\n\t\t\t\t\t\t\t: record[ _key ];\n\t\t\t\t} else {\n\t\t\t\t\taccumulator[ _key ] = record[ _key ];\n\t\t\t\t}\n\t\t\t\treturn accumulator;\n\t\t\t}, {} as any )\n\t\t);\n\t},\n\t(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\trecordId: EntityRecordKey,\n\t\tquery?: GetRecordsHttpQuery\n\t) => {\n\t\tconst context = query?.context ?? 'default';\n\t\treturn [\n\t\t\tstate.entities.config,\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData?.items[\n\t\t\t\tcontext\n\t\t\t]?.[ recordId ],\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData\n\t\t\t\t?.itemIsComplete[ context ]?.[ recordId ],\n\t\t];\n\t}\n);\n\n/**\n * Returns true if records have been received for the given set of parameters,\n * or false otherwise.\n *\n * @param state State tree\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param query Optional terms query. For valid query parameters see the [Reference](https://developer.wordpress.org/rest-api/reference/) in the REST API Handbook and select the entity kind. Then see the arguments available for \"List [Entity kind]s\".\n *\n * @return  Whether entity records have been received.\n */\nexport function hasEntityRecords(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\tquery?: GetRecordsHttpQuery\n): boolean {\n\tlogEntityDeprecation( kind, name, 'hasEntityRecords' );\n\treturn Array.isArray( getEntityRecords( state, kind, name, query ) );\n}\n\n/**\n * GetEntityRecord is declared as a *callable interface* with\n * two signatures to work around the fact that TypeScript doesn't\n * allow currying generic functions.\n *\n * @see GetEntityRecord\n * @see https://github.com/WordPress/gutenberg/pull/41578\n */\nexport interface GetEntityRecords {\n\t<\n\t\tEntityRecord extends\n\t\t\t| ET.EntityRecord< any >\n\t\t\t| Partial< ET.EntityRecord< any > >,\n\t>(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\tquery?: GetRecordsHttpQuery\n\t): EntityRecord[] | null;\n\n\tCurriedSignature: <\n\t\tEntityRecord extends\n\t\t\t| ET.EntityRecord< any >\n\t\t\t| Partial< ET.EntityRecord< any > >,\n\t>(\n\t\tkind: string,\n\t\tname: string,\n\t\tquery?: GetRecordsHttpQuery\n\t) => EntityRecord[] | null;\n}\n\n/**\n * Returns the Entity's records.\n *\n * @param state State tree\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param query Optional terms query. If requesting specific\n *              fields, fields must always include the ID. For valid query parameters see the [Reference](https://developer.wordpress.org/rest-api/reference/) in the REST API Handbook and select the entity kind. Then see the arguments available for \"List [Entity kind]s\".\n *\n * @return Records.\n */\nexport const getEntityRecords = ( <\n\tEntityRecord extends\n\t\t| ET.EntityRecord< any >\n\t\t| Partial< ET.EntityRecord< any > >,\n>(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\tquery: GetRecordsHttpQuery\n): EntityRecord[] | null => {\n\tlogEntityDeprecation( kind, name, 'getEntityRecords' );\n\n\t// Queried data state is prepopulated for all known entities. If this is not\n\t// assigned for the given parameters, then it is known to not exist.\n\tconst queriedState =\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData;\n\tif ( ! queriedState ) {\n\t\treturn null;\n\t}\n\treturn getQueriedItems( queriedState, query );\n} ) as GetEntityRecords;\n\n/**\n * Returns the Entity's total available records for a given query (ignoring pagination).\n *\n * @param state State tree\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param query Optional terms query. If requesting specific\n *              fields, fields must always include the ID. For valid query parameters see the [Reference](https://developer.wordpress.org/rest-api/reference/) in the REST API Handbook and select the entity kind. Then see the arguments available for \"List [Entity kind]s\".\n *\n * @return number | null.\n */\nexport const getEntityRecordsTotalItems = (\n\tstate: State,\n\tkind: string,\n\tname: string,\n\tquery: GetRecordsHttpQuery\n): number | null => {\n\tlogEntityDeprecation( kind, name, 'getEntityRecordsTotalItems' );\n\n\t// Queried data state is prepopulated for all known entities. If this is not\n\t// assigned for the given parameters, then it is known to not exist.\n\tconst queriedState =\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData;\n\tif ( ! queriedState ) {\n\t\treturn null;\n\t}\n\treturn getQueriedTotalItems( queriedState, query );\n};\n\n/**\n * Returns the number of available pages for the given query.\n *\n * @param state State tree\n * @param kind  Entity kind.\n * @param name  Entity name.\n * @param query Optional terms query. If requesting specific\n *              fields, fields must always include the ID. For valid query parameters see the [Reference](https://developer.wordpress.org/rest-api/reference/) in the REST API Handbook and select the entity kind. Then see the arguments available for \"List [Entity kind]s\".\n *\n * @return number | null.\n */\nexport const getEntityRecordsTotalPages = (\n\tstate: State,\n\tkind: string,\n\tname: string,\n\tquery: GetRecordsHttpQuery\n): number | null => {\n\tlogEntityDeprecation( kind, name, 'getEntityRecordsTotalPages' );\n\n\t// Queried data state is prepopulated for all known entities. If this is not\n\t// assigned for the given parameters, then it is known to not exist.\n\tconst queriedState =\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData;\n\tif ( ! queriedState ) {\n\t\treturn null;\n\t}\n\tif ( query?.per_page === -1 ) {\n\t\treturn 1;\n\t}\n\tconst totalItems = getQueriedTotalItems( queriedState, query );\n\tif ( ! totalItems ) {\n\t\treturn totalItems;\n\t}\n\t// If `per_page` is not set and the query relies on the defaults of the\n\t// REST endpoint, get the info from query's meta.\n\tif ( ! query?.per_page ) {\n\t\treturn getQueriedTotalPages( queriedState, query );\n\t}\n\treturn Math.ceil( totalItems / query.per_page );\n};\n\ntype DirtyEntityRecord = {\n\ttitle: string;\n\tkey: EntityRecordKey;\n\tname: string;\n\tkind: string;\n};\n/**\n * Returns the list of dirty entity records.\n *\n * @param state State tree.\n *\n * @return The list of updated records\n */\nexport const __experimentalGetDirtyEntityRecords = createSelector(\n\t( state: State ): Array< DirtyEntityRecord > => {\n\t\tconst {\n\t\t\tentities: { records },\n\t\t} = state;\n\t\tconst dirtyRecords: DirtyEntityRecord[] = [];\n\t\tObject.keys( records ).forEach( ( kind ) => {\n\t\t\tObject.keys( records[ kind ] ).forEach( ( name ) => {\n\t\t\t\tconst primaryKeys = (\n\t\t\t\t\tObject.keys( records[ kind ][ name ].edits ) as string[]\n\t\t\t\t ).filter(\n\t\t\t\t\t( primaryKey ) =>\n\t\t\t\t\t\t// The entity record must exist (not be deleted),\n\t\t\t\t\t\t// and it must have edits.\n\t\t\t\t\t\tgetEntityRecord( state, kind, name, primaryKey ) &&\n\t\t\t\t\t\thasEditsForEntityRecord( state, kind, name, primaryKey )\n\t\t\t\t);\n\n\t\t\t\tif ( primaryKeys.length ) {\n\t\t\t\t\tconst entityConfig = getEntityConfig( state, kind, name );\n\t\t\t\t\tprimaryKeys.forEach( ( primaryKey ) => {\n\t\t\t\t\t\tconst entityRecord = getEditedEntityRecord(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tprimaryKey\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdirtyRecords.push( {\n\t\t\t\t\t\t\t// We avoid using primaryKey because it's transformed into a string\n\t\t\t\t\t\t\t// when it's used as an object key.\n\t\t\t\t\t\t\tkey: entityRecord\n\t\t\t\t\t\t\t\t? entityRecord[\n\t\t\t\t\t\t\t\t\t\tentityConfig.key || DEFAULT_ENTITY_KEY\n\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tentityConfig?.getTitle?.( entityRecord ) || '',\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\treturn dirtyRecords;\n\t},\n\t( state ) => [ state.entities.records ]\n);\n\n/**\n * Returns the list of entities currently being saved.\n *\n * @param state State tree.\n *\n * @return The list of records being saved.\n */\nexport const __experimentalGetEntitiesBeingSaved = createSelector(\n\t( state: State ): Array< DirtyEntityRecord > => {\n\t\tconst {\n\t\t\tentities: { records },\n\t\t} = state;\n\t\tconst recordsBeingSaved: DirtyEntityRecord[] = [];\n\t\tObject.keys( records ).forEach( ( kind ) => {\n\t\t\tObject.keys( records[ kind ] ).forEach( ( name ) => {\n\t\t\t\tconst primaryKeys = (\n\t\t\t\t\tObject.keys( records[ kind ][ name ].saving ) as string[]\n\t\t\t\t ).filter( ( primaryKey ) =>\n\t\t\t\t\tisSavingEntityRecord( state, kind, name, primaryKey )\n\t\t\t\t);\n\n\t\t\t\tif ( primaryKeys.length ) {\n\t\t\t\t\tconst entityConfig = getEntityConfig( state, kind, name );\n\t\t\t\t\tprimaryKeys.forEach( ( primaryKey ) => {\n\t\t\t\t\t\tconst entityRecord = getEditedEntityRecord(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tprimaryKey\n\t\t\t\t\t\t);\n\t\t\t\t\t\trecordsBeingSaved.push( {\n\t\t\t\t\t\t\t// We avoid using primaryKey because it's transformed into a string\n\t\t\t\t\t\t\t// when it's used as an object key.\n\t\t\t\t\t\t\tkey: entityRecord\n\t\t\t\t\t\t\t\t? entityRecord[\n\t\t\t\t\t\t\t\t\t\tentityConfig.key || DEFAULT_ENTITY_KEY\n\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tentityConfig?.getTitle?.( entityRecord ) || '',\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t\treturn recordsBeingSaved;\n\t},\n\t( state ) => [ state.entities.records ]\n);\n\n/**\n * Returns the specified entity record's edits.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return The entity record's edits.\n */\nexport function getEntityRecordEdits(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordId: EntityRecordKey\n): Optional< any > {\n\tlogEntityDeprecation( kind, name, 'getEntityRecordEdits' );\n\treturn state.entities.records?.[ kind ]?.[ name ]?.edits?.[\n\t\trecordId as string | number\n\t];\n}\n\n/**\n * Returns the specified entity record's non transient edits.\n *\n * Transient edits don't create an undo level, and\n * are not considered for change detection.\n * They are defined in the entity's config.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return The entity record's non transient edits.\n */\nexport const getEntityRecordNonTransientEdits = createSelector(\n\t(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\trecordId: EntityRecordKey\n\t): Optional< any > => {\n\t\tlogEntityDeprecation( kind, name, 'getEntityRecordNonTransientEdits' );\n\t\tconst { transientEdits } = getEntityConfig( state, kind, name ) || {};\n\t\tconst edits = getEntityRecordEdits( state, kind, name, recordId ) || {};\n\t\tif ( ! transientEdits ) {\n\t\t\treturn edits;\n\t\t}\n\t\treturn Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tif ( ! transientEdits[ key ] ) {\n\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {} );\n\t},\n\t( state: State, kind: string, name: string, recordId: EntityRecordKey ) => [\n\t\tstate.entities.config,\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.edits?.[ recordId ],\n\t]\n);\n\n/**\n * Returns true if the specified entity record has edits,\n * and false otherwise.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return Whether the entity record has edits or not.\n */\nexport function hasEditsForEntityRecord(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordId: EntityRecordKey\n): boolean {\n\tlogEntityDeprecation( kind, name, 'hasEditsForEntityRecord' );\n\treturn (\n\t\tisSavingEntityRecord( state, kind, name, recordId ) ||\n\t\tObject.keys(\n\t\t\tgetEntityRecordNonTransientEdits( state, kind, name, recordId )\n\t\t).length > 0\n\t);\n}\n\n/**\n * Returns the specified entity record, merged with its edits.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return The entity record, merged with its edits.\n */\nexport const getEditedEntityRecord = createSelector(\n\t< EntityRecord extends ET.EntityRecord< any > >(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\trecordId: EntityRecordKey\n\t): ET.Updatable< EntityRecord > | false => {\n\t\tlogEntityDeprecation( kind, name, 'getEditedEntityRecord' );\n\t\tconst raw = getRawEntityRecord( state, kind, name, recordId );\n\t\tconst edited = getEntityRecordEdits( state, kind, name, recordId );\n\t\t// Never return a non-falsy empty object. Unfortunately we can't return\n\t\t// undefined or null because we were previously returning an empty\n\t\t// object, so trying to read properties from the result would throw.\n\t\t// Using false here is a workaround to avoid breaking changes.\n\t\tif ( ! raw && ! edited ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn {\n\t\t\t...raw,\n\t\t\t...edited,\n\t\t};\n\t},\n\t(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\trecordId: EntityRecordKey,\n\t\tquery?: GetRecordsHttpQuery\n\t) => {\n\t\tconst context = query?.context ?? 'default';\n\t\treturn [\n\t\t\tstate.entities.config,\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData.items[\n\t\t\t\tcontext\n\t\t\t]?.[ recordId ],\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.queriedData\n\t\t\t\t.itemIsComplete[ context ]?.[ recordId ],\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.edits?.[ recordId ],\n\t\t];\n\t}\n);\n\n/**\n * Returns true if the specified entity record is autosaving, and false otherwise.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return Whether the entity record is autosaving or not.\n */\nexport function isAutosavingEntityRecord(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordId: EntityRecordKey\n): boolean {\n\tlogEntityDeprecation( kind, name, 'isAutosavingEntityRecord' );\n\tconst { pending, isAutosave } =\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.saving?.[ recordId ] ?? {};\n\treturn Boolean( pending && isAutosave );\n}\n\n/**\n * Returns true if the specified entity record is saving, and false otherwise.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return Whether the entity record is saving or not.\n */\nexport function isSavingEntityRecord(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordId: EntityRecordKey\n): boolean {\n\tlogEntityDeprecation( kind, name, 'isSavingEntityRecord' );\n\treturn (\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.saving?.[\n\t\t\trecordId as EntityRecordKey\n\t\t]?.pending ?? false\n\t);\n}\n\n/**\n * Returns true if the specified entity record is deleting, and false otherwise.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return Whether the entity record is deleting or not.\n */\nexport function isDeletingEntityRecord(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordId: EntityRecordKey\n): boolean {\n\tlogEntityDeprecation( kind, name, 'isDeletingEntityRecord' );\n\treturn (\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.deleting?.[\n\t\t\trecordId as EntityRecordKey\n\t\t]?.pending ?? false\n\t);\n}\n\n/**\n * Returns the specified entity record's last save error.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return The entity record's save error.\n */\nexport function getLastEntitySaveError(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordId: EntityRecordKey\n): any {\n\tlogEntityDeprecation( kind, name, 'getLastEntitySaveError' );\n\treturn state.entities.records?.[ kind ]?.[ name ]?.saving?.[ recordId ]\n\t\t?.error;\n}\n\n/**\n * Returns the specified entity record's last delete error.\n *\n * @param state    State tree.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record ID.\n *\n * @return The entity record's save error.\n */\nexport function getLastEntityDeleteError(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordId: EntityRecordKey\n): any {\n\tlogEntityDeprecation( kind, name, 'getLastEntityDeleteError' );\n\treturn state.entities.records?.[ kind ]?.[ name ]?.deleting?.[ recordId ]\n\t\t?.error;\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Returns the previous edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @deprecated since 6.3\n *\n * @param      state State tree.\n *\n * @return The edit.\n */\nexport function getUndoEdit( state: State ): Optional< any > {\n\tdeprecated( \"select( 'core' ).getUndoEdit()\", {\n\t\tsince: '6.3',\n\t} );\n\treturn undefined;\n}\n/* eslint-enable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Returns the next edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @deprecated since 6.3\n *\n * @param      state State tree.\n *\n * @return The edit.\n */\nexport function getRedoEdit( state: State ): Optional< any > {\n\tdeprecated( \"select( 'core' ).getRedoEdit()\", {\n\t\tsince: '6.3',\n\t} );\n\treturn undefined;\n}\n/* eslint-enable @typescript-eslint/no-unused-vars */\n\n/**\n * Returns true if there is a previous edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param state State tree.\n *\n * @return Whether there is a previous edit or not.\n */\nexport function hasUndo( state: State ): boolean {\n\treturn getUndoManager( state ).hasUndo();\n}\n\n/**\n * Returns true if there is a next edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param state State tree.\n *\n * @return Whether there is a next edit or not.\n */\nexport function hasRedo( state: State ): boolean {\n\treturn getUndoManager( state ).hasRedo();\n}\n\n/**\n * Return the current theme.\n *\n * @param state Data state.\n *\n * @return The current theme.\n */\nexport function getCurrentTheme( state: State ): any {\n\tif ( ! state.currentTheme ) {\n\t\treturn null;\n\t}\n\treturn getEntityRecord( state, 'root', 'theme', state.currentTheme );\n}\n\n/**\n * Return the ID of the current global styles object.\n *\n * @param state Data state.\n *\n * @return The current global styles ID.\n */\nexport function __experimentalGetCurrentGlobalStylesId( state: State ): string {\n\treturn state.currentGlobalStylesId;\n}\n\n/**\n * Return theme supports data in the index.\n *\n * @param state Data state.\n *\n * @return Index data.\n */\nexport function getThemeSupports( state: State ): any {\n\treturn getCurrentTheme( state )?.theme_supports ?? EMPTY_OBJECT;\n}\n\n/**\n * Returns the embed preview for the given URL.\n *\n * @param state Data state.\n * @param url   Embedded URL.\n *\n * @return Undefined if the preview has not been fetched, otherwise, the preview fetched from the embed preview API.\n */\nexport function getEmbedPreview( state: State, url: string ): any {\n\treturn state.embedPreviews[ url ];\n}\n\n/**\n * Determines if the returned preview is an oEmbed link fallback.\n *\n * WordPress can be configured to return a simple link to a URL if it is not embeddable.\n * We need to be able to determine if a URL is embeddable or not, based on what we\n * get back from the oEmbed preview API.\n *\n * @param state Data state.\n * @param url   Embedded URL.\n *\n * @return Is the preview for the URL an oEmbed link fallback.\n */\nexport function isPreviewEmbedFallback( state: State, url: string ): boolean {\n\tconst preview = state.embedPreviews[ url ];\n\tconst oEmbedLinkCheck = '<a href=\"' + url + '\">' + url + '</a>';\n\tif ( ! preview ) {\n\t\treturn false;\n\t}\n\treturn preview.html === oEmbedLinkCheck;\n}\n\n/**\n * Returns whether the current user can perform the given action on the given\n * REST resource.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @param state    Data state.\n * @param action   Action to check. One of: 'create', 'read', 'update', 'delete'.\n * @param resource Entity resource to check. Accepts entity object `{ kind: 'postType', name: 'attachment', id: 1 }`\n *                 or REST base as a string - `media`.\n * @param id       Optional ID of the rest resource to check.\n *\n * @return Whether or not the user can perform the action,\n *                             or `undefined` if the OPTIONS request is still being made.\n */\nexport function canUser(\n\tstate: State,\n\taction: string,\n\tresource: string | EntityResource,\n\tid?: EntityRecordKey\n): boolean | undefined {\n\tconst isEntity = typeof resource === 'object';\n\tif ( isEntity && ( ! resource.kind || ! resource.name ) ) {\n\t\treturn false;\n\t}\n\tif ( isEntity ) {\n\t\tlogEntityDeprecation( resource.kind, resource.name, 'canUser' );\n\t}\n\n\tconst key = getUserPermissionCacheKey( action, resource, id );\n\n\treturn state.userPermissions[ key ];\n}\n\n/**\n * Returns whether the current user can edit the given entity.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @param state    Data state.\n * @param kind     Entity kind.\n * @param name     Entity name.\n * @param recordId Record's id.\n * @return Whether or not the user can edit,\n * or `undefined` if the OPTIONS request is still being made.\n */\nexport function canUserEditEntityRecord(\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordId: EntityRecordKey\n): boolean | undefined {\n\tdeprecated( `wp.data.select( 'core' ).canUserEditEntityRecord()`, {\n\t\tsince: '6.7',\n\t\talternative: `wp.data.select( 'core' ).canUser( 'update', { kind, name, id } )`,\n\t} );\n\n\treturn canUser( state, 'update', { kind, name, id: recordId } );\n}\n\n/**\n * Returns the latest autosaves for the post.\n *\n * May return multiple autosaves since the backend stores one autosave per\n * author for each post.\n *\n * @param state    State tree.\n * @param postType The type of the parent post.\n * @param postId   The id of the parent post.\n *\n * @return An array of autosaves for the post, or undefined if there is none.\n */\nexport function getAutosaves(\n\tstate: State,\n\tpostType: string,\n\tpostId: EntityRecordKey\n): Array< any > | undefined {\n\treturn state.autosaves[ postId ];\n}\n\n/**\n * Returns the autosave for the post and author.\n *\n * @param state    State tree.\n * @param postType The type of the parent post.\n * @param postId   The id of the parent post.\n * @param authorId The id of the author.\n *\n * @return The autosave for the post and author.\n */\nexport function getAutosave< EntityRecord extends ET.EntityRecord< any > >(\n\tstate: State,\n\tpostType: string,\n\tpostId: EntityRecordKey,\n\tauthorId: EntityRecordKey\n): EntityRecord | undefined {\n\tif ( authorId === undefined ) {\n\t\treturn;\n\t}\n\n\tconst autosaves = state.autosaves[ postId ];\n\n\treturn autosaves?.find(\n\t\t( autosave: any ) => autosave.author === authorId\n\t) as EntityRecord | undefined;\n}\n\n/**\n * Returns true if the REST request for autosaves has completed.\n *\n * @param state    State tree.\n * @param postType The type of the parent post.\n * @param postId   The id of the parent post.\n *\n * @return True if the REST request was completed. False otherwise.\n */\nexport const hasFetchedAutosaves = createRegistrySelector(\n\t( select ) =>\n\t\t(\n\t\t\tstate: State,\n\t\t\tpostType: string,\n\t\t\tpostId: EntityRecordKey\n\t\t): boolean => {\n\t\t\treturn select( STORE_NAME ).hasFinishedResolution( 'getAutosaves', [\n\t\t\t\tpostType,\n\t\t\t\tpostId,\n\t\t\t] );\n\t\t}\n);\n\n/**\n * Returns a new reference when edited values have changed. This is useful in\n * inferring where an edit has been made between states by comparison of the\n * return values using strict equality.\n *\n * @example\n *\n * ```\n * const hasEditOccurred = (\n *    getReferenceByDistinctEdits( beforeState ) !==\n *    getReferenceByDistinctEdits( afterState )\n * );\n * ```\n *\n * @param state Editor state.\n *\n * @return A value whose reference will change only when an edit occurs.\n */\nexport function getReferenceByDistinctEdits( state ) {\n\treturn state.editsReference;\n}\n\n/**\n * Retrieve the current theme's base global styles\n *\n * @param state Editor state.\n *\n * @return The Global Styles object.\n */\nexport function __experimentalGetCurrentThemeBaseGlobalStyles(\n\tstate: State\n): any {\n\tconst currentTheme = getCurrentTheme( state );\n\tif ( ! currentTheme ) {\n\t\treturn null;\n\t}\n\treturn state.themeBaseGlobalStyles[ currentTheme.stylesheet ];\n}\n\n/**\n * Return the ID of the current global styles object.\n *\n * @param state Data state.\n *\n * @return The current global styles ID.\n */\nexport function __experimentalGetCurrentThemeGlobalStylesVariations(\n\tstate: State\n): string | null {\n\tconst currentTheme = getCurrentTheme( state );\n\tif ( ! currentTheme ) {\n\t\treturn null;\n\t}\n\treturn state.themeGlobalStyleVariations[ currentTheme.stylesheet ];\n}\n\n/**\n * Retrieve the list of registered block patterns.\n *\n * @param state Data state.\n *\n * @return Block pattern list.\n */\nexport function getBlockPatterns( state: State ): Array< any > {\n\treturn state.blockPatterns;\n}\n\n/**\n * Retrieve the list of registered block pattern categories.\n *\n * @param state Data state.\n *\n * @return Block pattern category list.\n */\nexport function getBlockPatternCategories( state: State ): Array< any > {\n\treturn state.blockPatternCategories;\n}\n\n/**\n * Retrieve the registered user pattern categories.\n *\n * @param state Data state.\n *\n * @return User patterns category array.\n */\n\nexport function getUserPatternCategories(\n\tstate: State\n): Array< UserPatternCategory > {\n\treturn state.userPatternCategories;\n}\n\n/**\n * Returns the revisions of the current global styles theme.\n *\n * @deprecated since WordPress 6.5.0. Callers should use `select( 'core' ).getRevisions( 'root', 'globalStyles', ${ recordKey } )` instead, where `recordKey` is the id of the global styles parent post.\n *\n * @param      state Data state.\n *\n * @return The current global styles.\n */\nexport function getCurrentThemeGlobalStylesRevisions(\n\tstate: State\n): Array< object > | null {\n\tdeprecated( \"select( 'core' ).getCurrentThemeGlobalStylesRevisions()\", {\n\t\tsince: '6.5.0',\n\t\talternative:\n\t\t\t\"select( 'core' ).getRevisions( 'root', 'globalStyles', ${ recordKey } )\",\n\t} );\n\tconst currentGlobalStylesId =\n\t\t__experimentalGetCurrentGlobalStylesId( state );\n\n\tif ( ! currentGlobalStylesId ) {\n\t\treturn null;\n\t}\n\n\treturn state.themeGlobalStyleRevisions[ currentGlobalStylesId ];\n}\n\n/**\n * Returns the default template use to render a given query.\n *\n * @param state Data state.\n * @param query Query.\n *\n * @return The default template id for the given query.\n */\nexport function getDefaultTemplateId(\n\tstate: State,\n\tquery: TemplateQuery\n): string {\n\treturn state.defaultTemplates[ JSON.stringify( query ) ];\n}\n\n/**\n * Returns an entity's revisions.\n *\n * @param state     State tree\n * @param kind      Entity kind.\n * @param name      Entity name.\n * @param recordKey The key of the entity record whose revisions you want to fetch.\n * @param query     Optional query. If requesting specific\n *                  fields, fields must always include the ID. For valid query parameters see revisions schema in [the REST API Handbook](https://developer.wordpress.org/rest-api/reference/). Then see the arguments available \"Retrieve a [Entity kind]\".\n *\n * @return Record.\n */\nexport const getRevisions = (\n\tstate: State,\n\tkind: string,\n\tname: string,\n\trecordKey: EntityRecordKey,\n\tquery?: GetRecordsHttpQuery\n): RevisionRecord[] | null => {\n\tlogEntityDeprecation( kind, name, 'getRevisions' );\n\tconst queriedStateRevisions =\n\t\tstate.entities.records?.[ kind ]?.[ name ]?.revisions?.[ recordKey ];\n\tif ( ! queriedStateRevisions ) {\n\t\treturn null;\n\t}\n\n\treturn getQueriedItems( queriedStateRevisions, query );\n};\n\n/**\n * Returns a single, specific revision of a parent entity.\n *\n * @param state       State tree\n * @param kind        Entity kind.\n * @param name        Entity name.\n * @param recordKey   The key of the entity record whose revisions you want to fetch.\n * @param revisionKey The revision's key.\n * @param query       Optional query. If requesting specific\n *                    fields, fields must always include the ID. For valid query parameters see revisions schema in [the REST API Handbook](https://developer.wordpress.org/rest-api/reference/). Then see the arguments available \"Retrieve a [entity kind]\".\n *\n * @return Record.\n */\nexport const getRevision = createSelector(\n\t(\n\t\tstate: State,\n\t\tkind: string,\n\t\tname: string,\n\t\trecordKey: EntityRecordKey,\n\t\trevisionKey: EntityRecordKey,\n\t\tquery?: GetRecordsHttpQuery\n\t): RevisionRecord | Record< PropertyKey, never > | undefined => {\n\t\tlogEntityDeprecation( kind, name, 'getRevision' );\n\t\tconst queriedState =\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.revisions?.[\n\t\t\t\trecordKey\n\t\t\t];\n\n\t\tif ( ! queriedState ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst context = query?.context ?? 'default';\n\n\t\tif ( ! query || ! query._fields ) {\n\t\t\t// If expecting a complete item, validate that completeness.\n\t\t\tif ( ! queriedState.itemIsComplete[ context ]?.[ revisionKey ] ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn queriedState.items[ context ][ revisionKey ];\n\t\t}\n\n\t\tconst item = queriedState.items[ context ]?.[ revisionKey ];\n\t\tif ( ! item ) {\n\t\t\treturn item;\n\t\t}\n\n\t\tconst filteredItem = {};\n\t\tconst fields = getNormalizedCommaSeparable( query._fields ) ?? [];\n\n\t\tfor ( let f = 0; f < fields.length; f++ ) {\n\t\t\tconst field = fields[ f ].split( '.' );\n\t\t\tlet value = item;\n\t\t\tfield.forEach( ( fieldName ) => {\n\t\t\t\tvalue = value?.[ fieldName ];\n\t\t\t} );\n\t\t\tsetNestedValue( filteredItem, field, value );\n\t\t}\n\n\t\treturn filteredItem;\n\t},\n\t( state: State, kind, name, recordKey, revisionKey, query ) => {\n\t\tconst context = query?.context ?? 'default';\n\t\tconst queriedState =\n\t\t\tstate.entities.records?.[ kind ]?.[ name ]?.revisions?.[\n\t\t\t\trecordKey\n\t\t\t];\n\t\treturn [\n\t\t\tqueriedState?.items?.[ context ]?.[ revisionKey ],\n\t\t\tqueriedState?.itemIsComplete?.[ context ]?.[ revisionKey ],\n\t\t];\n\t}\n);\n","/**\n * Checks argument to determine if it's a numeric ID.\n * For example, '123' is a numeric ID, but '123abc' is not.\n *\n * @param {any} id the argument to determine if it's a numeric ID.\n * @return {boolean} true if the string is a numeric ID, false otherwise.\n */\nexport default function isNumericID( id ) {\n\treturn /^\\s*\\d+\\s*$/.test( id );\n}\n","/**\n * Checks whether the attribute is a \"raw\" attribute or not.\n *\n * @param {Object} entity    Entity record.\n * @param {string} attribute Attribute name.\n *\n * @return {boolean} Is the attribute raw\n */\nexport default function isRawAttribute( entity, attribute ) {\n\treturn ( entity.rawAttributes || [] ).includes( attribute );\n}\n","/**\n * Helper util to return a value from a certain path of the object.\n * Path is specified as either:\n * - a string of properties, separated by dots, for example: \"x.y\".\n * - an array of properties, for example `[ 'x', 'y' ]`.\n * You can also specify a default value in case the result is nullish.\n *\n * @param {Object}       object       Input object.\n * @param {string|Array} path         Path to the object property.\n * @param {*}            defaultValue Default value if the value at the specified path is undefined.\n * @return {*} Value of the object property at the specified path.\n */\nexport default function getNestedValue( object, path, defaultValue ) {\n\tif (\n\t\t! object ||\n\t\ttypeof object !== 'object' ||\n\t\t( typeof path !== 'string' && ! Array.isArray( path ) )\n\t) {\n\t\treturn object;\n\t}\n\tconst normalizedPath = Array.isArray( path ) ? path : path.split( '.' );\n\tlet value = object;\n\tnormalizedPath.forEach( ( fieldName ) => {\n\t\tvalue = value?.[ fieldName ];\n\t} );\n\treturn value !== undefined ? value : defaultValue;\n}\n","/**\n * Returns an action object used in signalling that items have been received.\n *\n * @param {Array}   items Items received.\n * @param {?Object} edits Optional edits to reset.\n * @param {?Object} meta  Meta information about pagination.\n *\n * @return {Object} Action object.\n */\nexport function receiveItems( items, edits, meta ) {\n\treturn {\n\t\ttype: 'RECEIVE_ITEMS',\n\t\titems: Array.isArray( items ) ? items : [ items ],\n\t\tpersistedEdits: edits,\n\t\tmeta,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been\n * deleted and they need to be removed from entities state.\n *\n * @param {string}              kind            Kind of the removed entities.\n * @param {string}              name            Name of the removed entities.\n * @param {Array|number|string} records         Record IDs of the removed entities.\n * @param {boolean}             invalidateCache Controls whether we want to invalidate the cache.\n * @return {Object} Action object.\n */\nexport function removeItems( kind, name, records, invalidateCache = false ) {\n\treturn {\n\t\ttype: 'REMOVE_ITEMS',\n\t\titemIds: Array.isArray( records ) ? records : [ records ],\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that queried data has been\n * received.\n *\n * @param {Array}   items Queried items received.\n * @param {?Object} query Optional query object.\n * @param {?Object} edits Optional edits to reset.\n * @param {?Object} meta  Meta information about pagination.\n *\n * @return {Object} Action object.\n */\nexport function receiveQueriedItems( items, query = {}, edits, meta ) {\n\treturn {\n\t\t...receiveItems( items, edits, meta ),\n\t\tquery,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Maximum number of requests to place in a single batch request. Obtained by\n * sending a preflight OPTIONS request to /batch/v1/.\n *\n * @type {number?}\n */\nlet maxItems = null;\n\nfunction chunk( arr, chunkSize ) {\n\tconst tmp = [ ...arr ];\n\tconst cache = [];\n\twhile ( tmp.length ) {\n\t\tcache.push( tmp.splice( 0, chunkSize ) );\n\t}\n\n\treturn cache;\n}\n\n/**\n * Default batch processor. Sends its input requests to /batch/v1.\n *\n * @param {Array} requests List of API requests to perform at once.\n *\n * @return {Promise} Promise that resolves to a list of objects containing\n *                   either `output` (if that request was successful) or `error`\n *                   (if not ).\n */\nexport default async function defaultProcessor( requests ) {\n\tif ( maxItems === null ) {\n\t\tconst preflightResponse = await apiFetch( {\n\t\t\tpath: '/batch/v1',\n\t\t\tmethod: 'OPTIONS',\n\t\t} );\n\t\tmaxItems = preflightResponse.endpoints[ 0 ].args.requests.maxItems;\n\t}\n\n\tconst results = [];\n\n\t// @ts-ignore We would have crashed or never gotten to this point if we hadn't received the maxItems count.\n\tfor ( const batchRequests of chunk( requests, maxItems ) ) {\n\t\tconst batchResponse = await apiFetch( {\n\t\t\tpath: '/batch/v1',\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\tvalidation: 'require-all-validate',\n\t\t\t\trequests: batchRequests.map( ( request ) => ( {\n\t\t\t\t\tpath: request.path,\n\t\t\t\t\tbody: request.data, // Rename 'data' to 'body'.\n\t\t\t\t\tmethod: request.method,\n\t\t\t\t\theaders: request.headers,\n\t\t\t\t} ) ),\n\t\t\t},\n\t\t} );\n\n\t\tlet batchResults;\n\n\t\tif ( batchResponse.failed ) {\n\t\t\tbatchResults = batchResponse.responses.map( ( response ) => ( {\n\t\t\t\terror: response?.body,\n\t\t\t} ) );\n\t\t} else {\n\t\t\tbatchResults = batchResponse.responses.map( ( response ) => {\n\t\t\t\tconst result = {};\n\t\t\t\tif ( response.status >= 200 && response.status < 300 ) {\n\t\t\t\t\tresult.output = response.body;\n\t\t\t\t} else {\n\t\t\t\t\tresult.error = response.body;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} );\n\t\t}\n\n\t\tresults.push( ...batchResults );\n\t}\n\n\treturn results;\n}\n","/**\n * Internal dependencies\n */\nimport defaultProcessor from './default-processor';\n\n/**\n * Creates a batch, which can be used to combine multiple API requests into one\n * API request using the WordPress batch processing API (/v1/batch).\n *\n * ```\n * const batch = createBatch();\n * const dunePromise = batch.add( {\n *   path: '/v1/books',\n *   method: 'POST',\n *   data: { title: 'Dune' }\n * } );\n * const lotrPromise = batch.add( {\n *   path: '/v1/books',\n *   method: 'POST',\n *   data: { title: 'Lord of the Rings' }\n * } );\n * const isSuccess = await batch.run(); // Sends one POST to /v1/batch.\n * if ( isSuccess ) {\n *   console.log(\n *     'Saved two books:',\n *     await dunePromise,\n *     await lotrPromise\n *   );\n * }\n * ```\n *\n * @param {Function} [processor] Processor function. Can be used to replace the\n *                               default functionality which is to send an API\n *                               request to /v1/batch. Is given an array of\n *                               inputs and must return a promise that\n *                               resolves to an array of objects containing\n *                               either `output` or `error`.\n */\nexport default function createBatch( processor = defaultProcessor ) {\n\tlet lastId = 0;\n\t/** @type {Array<{ input: any; resolve: ( value: any ) => void; reject: ( error: any ) => void }>} */\n\tlet queue = [];\n\tconst pending = new ObservableSet();\n\n\treturn {\n\t\t/**\n\t\t * Adds an input to the batch and returns a promise that is resolved or\n\t\t * rejected when the input is processed by `batch.run()`.\n\t\t *\n\t\t * You may also pass a thunk which allows inputs to be added\n\t\t * asynchronously.\n\t\t *\n\t\t * ```\n\t\t * // Both are allowed:\n\t\t * batch.add( { path: '/v1/books', ... } );\n\t\t * batch.add( ( add ) => add( { path: '/v1/books', ... } ) );\n\t\t * ```\n\t\t *\n\t\t * If a thunk is passed, `batch.run()` will pause until either:\n\t\t *\n\t\t * - The thunk calls its `add` argument, or;\n\t\t * - The thunk returns a promise and that promise resolves, or;\n\t\t * - The thunk returns a non-promise.\n\t\t *\n\t\t * @param {any|Function} inputOrThunk Input to add or thunk to execute.\n\t\t *\n\t\t * @return {Promise|any} If given an input, returns a promise that\n\t\t *                       is resolved or rejected when the batch is\n\t\t *                       processed. If given a thunk, returns the return\n\t\t *                       value of that thunk.\n\t\t */\n\t\tadd( inputOrThunk ) {\n\t\t\tconst id = ++lastId;\n\t\t\tpending.add( id );\n\n\t\t\tconst add = ( input ) =>\n\t\t\t\tnew Promise( ( resolve, reject ) => {\n\t\t\t\t\tqueue.push( {\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tresolve,\n\t\t\t\t\t\treject,\n\t\t\t\t\t} );\n\t\t\t\t\tpending.delete( id );\n\t\t\t\t} );\n\n\t\t\tif ( typeof inputOrThunk === 'function' ) {\n\t\t\t\treturn Promise.resolve( inputOrThunk( add ) ).finally( () => {\n\t\t\t\t\tpending.delete( id );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn add( inputOrThunk );\n\t\t},\n\n\t\t/**\n\t\t * Runs the batch. This calls `batchProcessor` and resolves or rejects\n\t\t * all promises returned by `add()`.\n\t\t *\n\t\t * @return {Promise<boolean>} A promise that resolves to a boolean that is true\n\t\t *                   if the processor returned no errors.\n\t\t */\n\t\tasync run() {\n\t\t\tif ( pending.size ) {\n\t\t\t\tawait new Promise( ( resolve ) => {\n\t\t\t\t\tconst unsubscribe = pending.subscribe( () => {\n\t\t\t\t\t\tif ( ! pending.size ) {\n\t\t\t\t\t\t\tunsubscribe();\n\t\t\t\t\t\t\tresolve( undefined );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tlet results;\n\n\t\t\ttry {\n\t\t\t\tresults = await processor(\n\t\t\t\t\tqueue.map( ( { input } ) => input )\n\t\t\t\t);\n\n\t\t\t\tif ( results.length !== queue.length ) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'run: Array returned by processor must be same size as input array.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch ( error ) {\n\t\t\t\tfor ( const { reject } of queue ) {\n\t\t\t\t\treject( error );\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tlet isSuccess = true;\n\n\t\t\tresults.forEach( ( result, key ) => {\n\t\t\t\tconst queueItem = queue[ key ];\n\n\t\t\t\tif ( result?.error ) {\n\t\t\t\t\tqueueItem?.reject( result.error );\n\t\t\t\t\tisSuccess = false;\n\t\t\t\t} else {\n\t\t\t\t\tqueueItem?.resolve( result?.output ?? result );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tqueue = [];\n\n\t\t\treturn isSuccess;\n\t\t},\n\t};\n}\n\nclass ObservableSet {\n\tconstructor( ...args ) {\n\t\tthis.set = new Set( ...args );\n\t\tthis.subscribers = new Set();\n\t}\n\n\tget size() {\n\t\treturn this.set.size;\n\t}\n\n\tadd( value ) {\n\t\tthis.set.add( value );\n\t\tthis.subscribers.forEach( ( subscriber ) => subscriber() );\n\t\treturn this;\n\t}\n\n\tdelete( value ) {\n\t\tconst isSuccess = this.set.delete( value );\n\t\tthis.subscribers.forEach( ( subscriber ) => subscriber() );\n\t\treturn isSuccess;\n\t}\n\n\tsubscribe( subscriber ) {\n\t\tthis.subscribers.add( subscriber );\n\t\treturn () => {\n\t\t\tthis.subscribers.delete( subscriber );\n\t\t};\n\t}\n}\n","/**\n * External dependencies\n */\nimport fastDeepEqual from 'fast-deep-equal/es6';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { getNestedValue, setNestedValue } from './utils';\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { DEFAULT_ENTITY_KEY } from './entities';\nimport { createBatch } from './batch';\nimport { STORE_NAME } from './name';\nimport { getSyncProvider } from './sync';\nimport logEntityDeprecation from './utils/log-entity-deprecation';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: Array.isArray( users ) ? users : [ users ],\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity record.\n * @param {string}       name            Name of the received entity record.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches.\n * @param {?Object}      edits           Edits to reset.\n * @param {?Object}      meta            Meta information about pagination.\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false,\n\tedits,\n\tmeta\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = ( Array.isArray( records ) ? records : [ records ] ).map(\n\t\t\t( record ) =>\n\t\t\t\trecord.status === 'auto-draft'\n\t\t\t\t\t? { ...record, title: '' }\n\t\t\t\t\t: record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query, edits, meta );\n\t} else {\n\t\taction = receiveItems( records, edits, meta );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current global styles id has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} currentGlobalStylesId The current global styles id.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveCurrentGlobalStylesId(\n\tcurrentGlobalStylesId\n) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_GLOBAL_STYLES_ID',\n\t\tid: currentGlobalStylesId,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme base global styles have been received\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} stylesheet   The theme's identifier\n * @param {Object} globalStyles The global styles object.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeBaseGlobalStyles(\n\tstylesheet,\n\tglobalStyles\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLES',\n\t\tstylesheet,\n\t\tglobalStyles,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme global styles variations have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} stylesheet The theme's identifier\n * @param {Array}  variations The global styles variations.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeGlobalStyleVariations(\n\tstylesheet,\n\tvariations\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_VARIATIONS',\n\t\tstylesheet,\n\t\tvariations,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @deprecated since WP 5.9, this is not useful anymore, use the selector directly.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports() {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveThemeSupports\", {\n\t\tsince: '5.9',\n\t} );\n\n\treturn {\n\t\ttype: 'DO_NOTHING',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme global styles CPT post revisions have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @deprecated since WordPress 6.5.0. Callers should use `dispatch( 'core' ).receiveRevision` instead.\n *\n * @ignore\n *\n * @param {number} currentId The post id.\n * @param {Array}  revisions The global styles revisions.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeGlobalStyleRevisions( currentId, revisions ) {\n\tdeprecated(\n\t\t\"wp.data.dispatch( 'core' ).receiveThemeGlobalStyleRevisions()\",\n\t\t{\n\t\t\tsince: '6.5.0',\n\t\t\talternative: \"wp.data.dispatch( 'core' ).receiveRevisions\",\n\t\t}\n\t);\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_REVISIONS',\n\t\tcurrentId,\n\t\trevisions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string} url     URL to preview the embed for.\n * @param {*}      preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}        kind                         Kind of the deleted entity.\n * @param {string}        name                         Name of the deleted entity.\n * @param {number|string} recordId                     Record ID of the deleted entity.\n * @param {?Object}       query                        Special query parameters for the\n *                                                     DELETE API call.\n * @param {Object}        [options]                    Delete options.\n * @param {Function}      [options.__unstableFetch]    Internal use only. Function to\n *                                                     call instead of `apiFetch()`.\n *                                                     Must return a promise.\n * @param {boolean}       [options.throwOnError=false] If false, this action suppresses all\n *                                                     the exceptions. Defaults to false.\n */\nexport const deleteEntityRecord =\n\t(\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\tquery,\n\t\t{ __unstableFetch = apiFetch, throwOnError = false } = {}\n\t) =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tlogEntityDeprecation( kind, name, 'deleteEntityRecord' );\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tlet error;\n\t\tlet deletedRecord = false;\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\ttry {\n\t\t\tdispatch( {\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t} );\n\n\t\t\tlet hasError = false;\n\t\t\ttry {\n\t\t\t\tlet path = `${ entityConfig.baseURL }/${ recordId }`;\n\n\t\t\t\tif ( query ) {\n\t\t\t\t\tpath = addQueryArgs( path, query );\n\t\t\t\t}\n\n\t\t\t\tdeletedRecord = await __unstableFetch( {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t} );\n\n\t\t\t\tawait dispatch( removeItems( kind, name, recordId, true ) );\n\t\t\t} catch ( _error ) {\n\t\t\t\thasError = true;\n\t\t\t\terror = _error;\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn deletedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string}        kind                 Kind of the edited entity record.\n * @param {string}        name                 Name of the edited entity record.\n * @param {number|string} recordId             Record ID of the edited entity record.\n * @param {Object}        edits                The edits.\n * @param {Object}        options              Options for the edit.\n * @param {boolean}       [options.undoIgnore] Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport const editEntityRecord =\n\t( kind, name, recordId, edits, options = {} ) =>\n\t( { select, dispatch } ) => {\n\t\tlogEntityDeprecation( kind, name, 'editEntityRecord' );\n\t\tconst entityConfig = select.getEntityConfig( kind, name );\n\t\tif ( ! entityConfig ) {\n\t\t\tthrow new Error(\n\t\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t\t);\n\t\t}\n\t\tconst { mergedEdits = {} } = entityConfig;\n\t\tconst record = select.getRawEntityRecord( kind, name, recordId );\n\t\tconst editedRecord = select.getEditedEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tconst edit = {\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t\t// so that the property is not considered dirty.\n\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\tconst recordValue = record[ key ];\n\t\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t\t: edits[ key ];\n\t\t\t\tacc[ key ] = fastDeepEqual( recordValue, value )\n\t\t\t\t\t? undefined\n\t\t\t\t\t: value;\n\t\t\t\treturn acc;\n\t\t\t}, {} ),\n\t\t};\n\t\tif ( window.__experimentalEnableSync && entityConfig.syncConfig ) {\n\t\t\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\n\t\t\t\tgetSyncProvider().updateCRDTDoc(\n\t\t\t\t\tentityConfig.syncConfig,\n\t\t\t\t\trecord,\n\t\t\t\t\tedit.edits,\n\t\t\t\t\t'gutenberg'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif ( ! options.undoIgnore ) {\n\t\t\tselect.getUndoManager().addRecord(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tid: { kind, name, recordId },\n\t\t\t\t\t\tchanges: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\t\t\tacc[ key ] = {\n\t\t\t\t\t\t\t\tfrom: editedRecord[ key ],\n\t\t\t\t\t\t\t\tto: edits[ key ],\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t}, {} ),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\toptions.isCached\n\t\t\t);\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t\t...edit,\n\t\t} );\n\t};\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport const undo =\n\t() =>\n\t( { select, dispatch } ) => {\n\t\tconst undoRecord = select.getUndoManager().undo();\n\t\tif ( ! undoRecord ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'UNDO',\n\t\t\trecord: undoRecord,\n\t\t} );\n\t};\n\n/**\n * Action triggered to redo the last undone\n * edit to an entity record, if any.\n */\nexport const redo =\n\t() =>\n\t( { select, dispatch } ) => {\n\t\tconst redoRecord = select.getUndoManager().redo();\n\t\tif ( ! redoRecord ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'REDO',\n\t\t\trecord: redoRecord,\n\t\t} );\n\t};\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport const __unstableCreateUndoLevel =\n\t() =>\n\t( { select } ) => {\n\t\tselect.getUndoManager().addRecord();\n\t};\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}   kind                         Kind of the received entity.\n * @param {string}   name                         Name of the received entity.\n * @param {Object}   record                       Record to be saved.\n * @param {Object}   options                      Saving options.\n * @param {boolean}  [options.isAutosave=false]   Whether this is an autosave.\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\n *                                                call instead of `apiFetch()`.\n *                                                Must return a promise.\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\n *                                                the exceptions. Defaults to false.\n */\nexport const saveEntityRecord =\n\t(\n\t\tkind,\n\t\tname,\n\t\trecord,\n\t\t{\n\t\t\tisAutosave = false,\n\t\t\t__unstableFetch = apiFetch,\n\t\t\tthrowOnError = false,\n\t\t} = {}\n\t) =>\n\tasync ( { select, resolveSelect, dispatch } ) => {\n\t\tlogEntityDeprecation( kind, name, 'saveEntityRecord' );\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\t\tconst recordId = record[ entityIdKey ];\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId || uuid() ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\ttry {\n\t\t\t// Evaluate optimized edits.\n\t\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\t\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\t\t\tif ( typeof value === 'function' ) {\n\t\t\t\t\tconst evaluatedValue = value(\n\t\t\t\t\t\tselect.getEditedEntityRecord( kind, name, recordId )\n\t\t\t\t\t);\n\t\t\t\t\tdispatch.editEntityRecord(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t\t);\n\t\t\t\t\trecord[ key ] = evaluatedValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\tisAutosave,\n\t\t\t} );\n\t\t\tlet updatedRecord;\n\t\t\tlet error;\n\t\t\tlet hasError = false;\n\t\t\ttry {\n\t\t\t\tconst path = `${ entityConfig.baseURL }${\n\t\t\t\t\trecordId ? '/' + recordId : ''\n\t\t\t\t}`;\n\t\t\t\tconst persistedRecord = select.getRawEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t);\n\n\t\t\t\tif ( isAutosave ) {\n\t\t\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t\t\t// so the client just sends and receives objects.\n\t\t\t\t\tconst currentUser = select.getCurrentUser();\n\t\t\t\t\tconst currentUserId = currentUser\n\t\t\t\t\t\t? currentUser.id\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst autosavePost = await resolveSelect.getAutosave(\n\t\t\t\t\t\tpersistedRecord.type,\n\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\tcurrentUserId\n\t\t\t\t\t);\n\t\t\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t\t\t// So we fallback to the previous autosave and then\n\t\t\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t\t\t// have a value.\n\t\t\t\t\tlet data = {\n\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t...autosavePost,\n\t\t\t\t\t\t...record,\n\t\t\t\t\t};\n\t\t\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'title',\n\t\t\t\t\t\t\t\t\t'excerpt',\n\t\t\t\t\t\t\t\t\t'content',\n\t\t\t\t\t\t\t\t\t'meta',\n\t\t\t\t\t\t\t\t].includes( key )\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tacc[ key ] = data[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Do not update the `status` if we have edited it when auto saving.\n\t\t\t\t\t\t\t// It's very important to let the user explicitly save this change,\n\t\t\t\t\t\t\t// because it can lead to unexpected results. An example would be to\n\t\t\t\t\t\t\t// have a draft post and change the status to publish.\n\t\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\t\tdata.status === 'auto-draft'\n\t\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tdata,\n\t\t\t\t\t} );\n\n\t\t\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t\t\t// when its update is requested by the author and the post had\n\t\t\t\t\t// draft or auto-draft status.\n\t\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\t\t\tlet newRecord = {\n\t\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t...updatedRecord,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\n\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tacc[ key ] = newRecord[ key ];\n\t\t\t\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\t\t\t\tpersistedRecord.status ===\n\t\t\t\t\t\t\t\t\t\t\t'auto-draft' &&\n\t\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\t\t\t\tacc[ key ] = persistedRecord[ key ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tnewRecord,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch.receiveAutosaves(\n\t\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\t\tupdatedRecord\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet edits = record;\n\t\t\t\t\tif ( entityConfig.__unstablePrePersist ) {\n\t\t\t\t\t\tedits = {\n\t\t\t\t\t\t\t...edits,\n\t\t\t\t\t\t\t...entityConfig.__unstablePrePersist(\n\t\t\t\t\t\t\t\tpersistedRecord,\n\t\t\t\t\t\t\t\tedits\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\twindow.__experimentalEnableSync &&\n\t\t\t\t\t\tentityConfig.syncConfig?.enabled\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Allow sync provider to create meta for the entity before persisting.\n\t\t\t\t\t\tedits.meta = {\n\t\t\t\t\t\t\t...edits.meta,\n\t\t\t\t\t\t\t...( await getSyncProvider().createEntityMeta(\n\t\t\t\t\t\t\t\tentityConfig.syncConfig,\n\t\t\t\t\t\t\t\t{ ...persistedRecord, ...edits }\n\t\t\t\t\t\t\t) ),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\t\t\tdata: edits,\n\t\t\t\t\t} );\n\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tupdatedRecord,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tedits\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\twindow.__experimentalEnableSync &&\n\t\t\t\t\t\tentityConfig.syncConfig?.enabled\n\t\t\t\t\t) {\n\t\t\t\t\t\tgetSyncProvider().updateLastPersistedDate(\n\t\t\t\t\t\t\tentityConfig.syncConfig,\n\t\t\t\t\t\t\tpersistedRecord\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch ( _error ) {\n\t\t\t\thasError = true;\n\t\t\t\terror = _error;\n\t\t\t}\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t\tisAutosave,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn updatedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Runs multiple core-data actions at the same time using one API request.\n *\n * Example:\n *\n * ```\n * const [ savedRecord, updatedRecord, deletedRecord ] =\n *   await dispatch( 'core' ).__experimentalBatch( [\n *     ( { saveEntityRecord } ) => saveEntityRecord( 'root', 'widget', widget ),\n *     ( { saveEditedEntityRecord } ) => saveEntityRecord( 'root', 'widget', 123 ),\n *     ( { deleteEntityRecord } ) => deleteEntityRecord( 'root', 'widget', 123, null ),\n *   ] );\n * ```\n *\n * @param {Array} requests Array of functions which are invoked simultaneously.\n *                         Each function is passed an object containing\n *                         `saveEntityRecord`, `saveEditedEntityRecord`, and\n *                         `deleteEntityRecord`.\n *\n * @return {(thunkArgs: Object) => Promise} A promise that resolves to an array containing the return\n *                                          values of each function given in `requests`.\n */\nexport const __experimentalBatch =\n\t( requests ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst batch = createBatch();\n\t\tconst api = {\n\t\t\tsaveEntityRecord( kind, name, record, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.saveEntityRecord( kind, name, record, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t\tsaveEditedEntityRecord( kind, name, recordId, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.saveEditedEntityRecord( kind, name, recordId, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t\tdeleteEntityRecord( kind, name, recordId, query, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.deleteEntityRecord( kind, name, recordId, query, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t\tconst resultPromises = requests.map( ( request ) => request( api ) );\n\t\tconst [ , ...results ] = await Promise.all( [\n\t\t\tbatch.run(),\n\t\t\t...resultPromises,\n\t\t] );\n\t\treturn results;\n\t};\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string}  kind     Kind of the entity.\n * @param {string}  name     Name of the entity.\n * @param {Object}  recordId ID of the record.\n * @param {Object=} options  Saving options.\n */\nexport const saveEditedEntityRecord =\n\t( kind, name, recordId, options ) =>\n\tasync ( { select, dispatch, resolveSelect } ) => {\n\t\tlogEntityDeprecation( kind, name, 'saveEditedEntityRecord' );\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\t\tconst record = { [ entityIdKey ]: recordId, ...edits };\n\t\treturn await dispatch.saveEntityRecord( kind, name, record, options );\n\t};\n\n/**\n * Action triggered to save only specified properties for the entity.\n *\n * @param {string}        kind        Kind of the entity.\n * @param {string}        name        Name of the entity.\n * @param {number|string} recordId    ID of the record.\n * @param {Array}         itemsToSave List of entity properties or property paths to save.\n * @param {Object}        options     Saving options.\n */\nexport const __experimentalSaveSpecifiedEntityEdits =\n\t( kind, name, recordId, itemsToSave, options ) =>\n\tasync ( { select, dispatch, resolveSelect } ) => {\n\t\tlogEntityDeprecation(\n\t\t\tkind,\n\t\t\tname,\n\t\t\t'__experimentalSaveSpecifiedEntityEdits'\n\t\t);\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\t\tconst editsToSave = {};\n\n\t\tfor ( const item of itemsToSave ) {\n\t\t\tsetNestedValue( editsToSave, item, getNestedValue( edits, item ) );\n\t\t}\n\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\n\t\tconst entityIdKey = entityConfig?.key || DEFAULT_ENTITY_KEY;\n\n\t\t// If a record key is provided then update the existing record.\n\t\t// This necessitates providing `recordKey` to saveEntityRecord as part of the\n\t\t// `record` argument (here called `editsToSave`) to stop that action creating\n\t\t// a new record and instead cause it to update the existing record.\n\t\tif ( recordId ) {\n\t\t\teditsToSave[ entityIdKey ] = recordId;\n\t\t}\n\t\treturn await dispatch.saveEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\teditsToSave,\n\t\t\toptions\n\t\t);\n\t};\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @deprecated since WP 5.9, use receiveUserPermission instead.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveUploadPermissions\", {\n\t\tsince: '5.9',\n\t\talternative: 'receiveUserPermission',\n\t} );\n\n\treturn receiveUserPermission( 'create/media', hasUploadPermissions );\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource. Ignored from\n * documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {Object<string, boolean>} permissions An object where keys represent\n *                                              actions and REST resources, and\n *                                              values indicate whether the user\n *                                              is allowed to perform the\n *                                              action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermissions( permissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSIONS',\n\t\tpermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n * Ignored from documentation as it's internal to the data store.\n *\n * @ignore\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: Array.isArray( autosaves ) ? autosaves : [ autosaves ],\n\t};\n}\n\n/**\n * Returns an action object signalling that the fallback Navigation\n * Menu id has been received.\n *\n * @param {integer} fallbackId the id of the fallback Navigation Menu\n * @return {Object} Action object.\n */\nexport function receiveNavigationFallbackId( fallbackId ) {\n\treturn {\n\t\ttype: 'RECEIVE_NAVIGATION_FALLBACK_ID',\n\t\tfallbackId,\n\t};\n}\n\n/**\n * Returns an action object used to set the template for a given query.\n *\n * @param {Object} query      The lookup query.\n * @param {string} templateId The resolved template id.\n *\n * @return {Object} Action object.\n */\nexport function receiveDefaultTemplateId( query, templateId ) {\n\treturn {\n\t\ttype: 'RECEIVE_DEFAULT_TEMPLATE',\n\t\tquery,\n\t\ttemplateId,\n\t};\n}\n\n/**\n * Action triggered to receive revision items.\n *\n * @param {string}        kind            Kind of the received entity record revisions.\n * @param {string}        name            Name of the received entity record revisions.\n * @param {number|string} recordKey       The key of the entity record whose revisions you want to fetch.\n * @param {Array|Object}  records         Revisions received.\n * @param {?Object}       query           Query Object.\n * @param {?boolean}      invalidateCache Should invalidate query caches.\n * @param {?Object}       meta            Meta information about pagination.\n */\nexport const receiveRevisions =\n\t( kind, name, recordKey, records, query, invalidateCache = false, meta ) =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tlogEntityDeprecation( kind, name, 'receiveRevisions' );\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\t\tconst key =\n\t\t\tentityConfig && entityConfig?.revisionKey\n\t\t\t\t? entityConfig.revisionKey\n\t\t\t\t: DEFAULT_ENTITY_KEY;\n\n\t\tdispatch( {\n\t\t\ttype: 'RECEIVE_ITEM_REVISIONS',\n\t\t\tkey,\n\t\t\titems: Array.isArray( records ) ? records : [ records ],\n\t\t\trecordKey,\n\t\t\tmeta,\n\t\t\tquery,\n\t\t\tkind,\n\t\t\tname,\n\t\t\tinvalidateCache,\n\t\t} );\n\t};\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './name';\n\n/**\n * Returns an action object used in signalling that the registered post meta\n * fields for a post type have been received.\n *\n * @param {string} postType           Post type slug.\n * @param {Object} registeredPostMeta Registered post meta.\n *\n * @return {Object} Action object.\n */\nexport function receiveRegisteredPostMeta( postType, registeredPostMeta ) {\n\treturn {\n\t\ttype: 'RECEIVE_REGISTERED_POST_META',\n\t\tpostType,\n\t\tregisteredPostMeta,\n\t};\n}\n\n/**\n * @typedef {Object} Modifier\n * @property {string} [type] - The type of modifier.\n * @property {Object} [args] - The arguments of the modifier.\n */\n\n/**\n * @typedef {Object} Edits\n * @property {string}     [src]       - The URL of the media item.\n * @property {Modifier[]} [modifiers] - The modifiers to apply to the media item.\n */\n\n/**\n * Duplicates a media (attachment) entity record and, optionally, modifies it.\n *\n * @param {string}   recordId                Entity record ID.\n * @param {Edits}    edits                   Edits to apply to the record.\n * @param {Object}   options                 Options object.\n * @param {Function} options.__unstableFetch Custom fetch function.\n * @param {boolean}  options.throwOnError    Whether to throw an error if the request fails.\n *\n * @return {Promise} Promise resolving to the updated record.\n */\nexport const editMediaEntity =\n\t(\n\t\trecordId,\n\t\tedits = {},\n\t\t{ __unstableFetch = apiFetch, throwOnError = false } = {}\n\t) =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tif ( ! recordId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst kind = 'postType';\n\t\tconst name = 'attachment';\n\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.kind === kind && config.name === name\n\t\t);\n\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\tlet updatedRecord;\n\t\tlet error;\n\t\tlet hasError = false;\n\n\t\ttry {\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t} );\n\n\t\t\ttry {\n\t\t\t\tconst path = `${ entityConfig.baseURL }/${ recordId }/edit`;\n\t\t\t\tconst newRecord = await __unstableFetch( {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...edits,\n\t\t\t\t\t},\n\t\t\t\t} );\n\n\t\t\t\tif ( newRecord ) {\n\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\t[ newRecord ],\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined\n\t\t\t\t\t);\n\t\t\t\t\tupdatedRecord = newRecord;\n\t\t\t\t}\n\t\t\t} catch ( e ) {\n\t\t\t\terror = e;\n\t\t\t\thasError = true;\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\treturn updatedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n","import {\n  pascalCase,\n  pascalCaseTransform,\n  pascalCaseTransformMerge,\n  Options,\n} from \"pascal-case\";\n\nexport { Options };\n\nexport function camelCaseTransform(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransform(input, index);\n}\n\nexport function camelCaseTransformMerge(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransformMerge(input);\n}\n\nexport function camelCase(input: string, options: Options = {}) {\n  return pascalCase(input, {\n    transform: camelCaseTransform,\n    ...options,\n  });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","/**\n * Higher-order function which forward the resolution to another resolver with the same arguments.\n *\n * @param {string} resolverName forwarded resolver.\n *\n * @return {Function} Enhanced resolver.\n */\nconst forwardResolver =\n\t( resolverName ) =>\n\t( ...args ) =>\n\tasync ( { resolveSelect } ) => {\n\t\tawait resolveSelect[ resolverName ]( ...args );\n\t};\n\nexport default forwardResolver;\n","export const RECEIVE_INTERMEDIATE_RESULTS = Symbol(\n\t'RECEIVE_INTERMEDIATE_RESULTS'\n);\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __ } from '@wordpress/i18n';\n\nexport type SearchOptions = {\n\t/**\n\t * Displays initial search suggestions, when true.\n\t */\n\tisInitialSuggestions?: boolean;\n\t/**\n\t * Search options for initial suggestions.\n\t */\n\tinitialSuggestionsSearchOptions?: Omit<\n\t\tSearchOptions,\n\t\t'isInitialSuggestions' | 'initialSuggestionsSearchOptions'\n\t>;\n\t/**\n\t * Filters by search type.\n\t */\n\ttype?: 'attachment' | 'post' | 'term' | 'post-format';\n\t/**\n\t * Slug of the post-type or taxonomy.\n\t */\n\tsubtype?: string;\n\t/**\n\t * Which page of results to return.\n\t */\n\tpage?: number;\n\t/**\n\t * Search results per page.\n\t */\n\tperPage?: number;\n};\n\nexport type EditorSettings = {\n\t/**\n\t * Disables post formats, when true.\n\t */\n\tdisablePostFormats?: boolean;\n};\n\ntype SearchAPIResult = {\n\tid: number;\n\ttitle: string;\n\turl: string;\n\ttype: string;\n\tsubtype: string;\n};\n\ntype MediaAPIResult = {\n\tid: number;\n\ttitle: { rendered: string };\n\tsource_url: string;\n\ttype: string;\n};\n\nexport type SearchResult = {\n\t/**\n\t * Post or term id.\n\t */\n\tid: number;\n\t/**\n\t * Link url.\n\t */\n\turl: string;\n\t/**\n\t * Title of the link.\n\t */\n\ttitle: string;\n\t/**\n\t * The taxonomy or post type slug or type URL.\n\t */\n\ttype: string;\n\t/**\n\t * Link kind of post-type or taxonomy\n\t */\n\tkind?: string;\n};\n\n/**\n * Fetches link suggestions from the WordPress API.\n *\n * WordPress does not support searching multiple tables at once, e.g. posts and terms, so we\n * perform multiple queries at the same time and then merge the results together.\n *\n * @param search\n * @param searchOptions\n * @param editorSettings\n *\n * @example\n * ```js\n * import { __experimentalFetchLinkSuggestions as fetchLinkSuggestions } from '@wordpress/core-data';\n *\n * //...\n *\n * export function initialize( id, settings ) {\n *\n * settings.__experimentalFetchLinkSuggestions = (\n *     search,\n *     searchOptions\n * ) => fetchLinkSuggestions( search, searchOptions, settings );\n * ```\n */\nexport default async function fetchLinkSuggestions(\n\tsearch: string,\n\tsearchOptions: SearchOptions = {},\n\teditorSettings: EditorSettings = {}\n): Promise< SearchResult[] > {\n\tconst searchOptionsToUse =\n\t\tsearchOptions.isInitialSuggestions &&\n\t\tsearchOptions.initialSuggestionsSearchOptions\n\t\t\t? {\n\t\t\t\t\t...searchOptions,\n\t\t\t\t\t...searchOptions.initialSuggestionsSearchOptions,\n\t\t\t  }\n\t\t\t: searchOptions;\n\n\tconst {\n\t\ttype,\n\t\tsubtype,\n\t\tpage,\n\t\tperPage = searchOptions.isInitialSuggestions ? 3 : 20,\n\t} = searchOptionsToUse;\n\n\tconst { disablePostFormats = false } = editorSettings;\n\n\tconst queries: Promise< SearchResult[] >[] = [];\n\n\tif ( ! type || type === 'post' ) {\n\t\tqueries.push(\n\t\t\tapiFetch< SearchAPIResult[] >( {\n\t\t\t\tpath: addQueryArgs( '/wp/v2/search', {\n\t\t\t\t\tsearch,\n\t\t\t\t\tpage,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t\ttype: 'post',\n\t\t\t\t\tsubtype,\n\t\t\t\t} ),\n\t\t\t} )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\treturn results.map( ( result ) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: result.id,\n\t\t\t\t\t\t\turl: result.url,\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tdecodeEntities( result.title || '' ) ||\n\t\t\t\t\t\t\t\t__( '(no title)' ),\n\t\t\t\t\t\t\ttype: result.subtype || result.type,\n\t\t\t\t\t\t\tkind: 'post-type',\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => [] ) // Fail by returning no results.\n\t\t);\n\t}\n\n\tif ( ! type || type === 'term' ) {\n\t\tqueries.push(\n\t\t\tapiFetch< SearchAPIResult[] >( {\n\t\t\t\tpath: addQueryArgs( '/wp/v2/search', {\n\t\t\t\t\tsearch,\n\t\t\t\t\tpage,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t\ttype: 'term',\n\t\t\t\t\tsubtype,\n\t\t\t\t} ),\n\t\t\t} )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\treturn results.map( ( result ) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: result.id,\n\t\t\t\t\t\t\turl: result.url,\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tdecodeEntities( result.title || '' ) ||\n\t\t\t\t\t\t\t\t__( '(no title)' ),\n\t\t\t\t\t\t\ttype: result.subtype || result.type,\n\t\t\t\t\t\t\tkind: 'taxonomy',\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => [] ) // Fail by returning no results.\n\t\t);\n\t}\n\n\tif ( ! disablePostFormats && ( ! type || type === 'post-format' ) ) {\n\t\tqueries.push(\n\t\t\tapiFetch< SearchAPIResult[] >( {\n\t\t\t\tpath: addQueryArgs( '/wp/v2/search', {\n\t\t\t\t\tsearch,\n\t\t\t\t\tpage,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t\ttype: 'post-format',\n\t\t\t\t\tsubtype,\n\t\t\t\t} ),\n\t\t\t} )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\treturn results.map( ( result ) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: result.id,\n\t\t\t\t\t\t\turl: result.url,\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tdecodeEntities( result.title || '' ) ||\n\t\t\t\t\t\t\t\t__( '(no title)' ),\n\t\t\t\t\t\t\ttype: result.subtype || result.type,\n\t\t\t\t\t\t\tkind: 'taxonomy',\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => [] ) // Fail by returning no results.\n\t\t);\n\t}\n\n\tif ( ! type || type === 'attachment' ) {\n\t\tqueries.push(\n\t\t\tapiFetch< MediaAPIResult[] >( {\n\t\t\t\tpath: addQueryArgs( '/wp/v2/media', {\n\t\t\t\t\tsearch,\n\t\t\t\t\tpage,\n\t\t\t\t\tper_page: perPage,\n\t\t\t\t} ),\n\t\t\t} )\n\t\t\t\t.then( ( results ) => {\n\t\t\t\t\treturn results.map( ( result ) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: result.id,\n\t\t\t\t\t\t\turl: result.source_url,\n\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\tdecodeEntities( result.title.rendered || '' ) ||\n\t\t\t\t\t\t\t\t__( '(no title)' ),\n\t\t\t\t\t\t\ttype: result.type,\n\t\t\t\t\t\t\tkind: 'media',\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => [] ) // Fail by returning no results.\n\t\t);\n\t}\n\n\tconst responses = await Promise.all( queries );\n\n\tlet results = responses.flat();\n\tresults = results.filter( ( result ) => !! result.id );\n\tresults = sortResults( results, search );\n\tresults = results.slice( 0, perPage );\n\treturn results;\n}\n\n/**\n * Sort search results by relevance to the given query.\n *\n * Sorting is necessary as we're querying multiple endpoints and merging the results. For example\n * a taxonomy title might be more relevant than a post title, but by default taxonomy results will\n * be ordered after all the (potentially irrelevant) post results.\n *\n * We sort by scoring each result, where the score is the number of tokens in the title that are\n * also in the search query, divided by the total number of tokens in the title. This gives us a\n * score between 0 and 1, where 1 is a perfect match.\n *\n * @param results\n * @param search\n */\nexport function sortResults( results: SearchResult[], search: string ) {\n\tconst searchTokens = tokenize( search );\n\n\tconst scores = {};\n\tfor ( const result of results ) {\n\t\tif ( result.title ) {\n\t\t\tconst titleTokens = tokenize( result.title );\n\t\t\tconst exactMatchingTokens = titleTokens.filter( ( titleToken ) =>\n\t\t\t\tsearchTokens.some(\n\t\t\t\t\t( searchToken ) => titleToken === searchToken\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst subMatchingTokens = titleTokens.filter( ( titleToken ) =>\n\t\t\t\tsearchTokens.some(\n\t\t\t\t\t( searchToken ) =>\n\t\t\t\t\t\ttitleToken !== searchToken &&\n\t\t\t\t\t\ttitleToken.includes( searchToken )\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// The score is a combination of exact matches and sub-matches.\n\t\t\t// More weight is given to exact matches, as they are more relevant (e.g. \"cat\" vs \"caterpillar\").\n\t\t\t// Diving by the total number of tokens in the title normalizes the score and skews\n\t\t\t// the results towards shorter titles.\n\t\t\tconst exactMatchScore =\n\t\t\t\t( exactMatchingTokens.length / titleTokens.length ) * 10;\n\n\t\t\tconst subMatchScore = subMatchingTokens.length / titleTokens.length;\n\n\t\t\tscores[ result.id ] = exactMatchScore + subMatchScore;\n\t\t} else {\n\t\t\tscores[ result.id ] = 0;\n\t\t}\n\t}\n\n\treturn results.sort( ( a, b ) => scores[ b.id ] - scores[ a.id ] );\n}\n\n/**\n * Turns text into an array of tokens, with whitespace and punctuation removed.\n *\n * For example, `\"I'm having a ball.\"` becomes `[ \"im\", \"having\", \"a\", \"ball\" ]`.\n *\n * @param text\n */\nexport function tokenize( text: string ): string[] {\n\t// \\p{L} matches any kind of letter from any language.\n\t// \\p{N} matches any kind of numeric character.\n\treturn text.toLowerCase().match( /[\\p{L}\\p{N}]+/gu ) || [];\n}\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport {\n\taddQueryArgs,\n\tprependHTTP,\n\tisURL,\n\tgetProtocol,\n\tisValidProtocol,\n} from '@wordpress/url';\n\n/**\n * A simple in-memory cache for requests.\n * This avoids repeat HTTP requests which may be beneficial\n * for those wishing to preserve low-bandwidth.\n */\nconst CACHE = new Map();\n\n/**\n * @typedef WPRemoteUrlData\n *\n * @property {string} title contents of the remote URL's `<title>` tag.\n */\n\n/**\n * Fetches data about a remote URL.\n * eg: <title> tag, favicon...etc.\n *\n * @async\n * @param {string}  url     the URL to request details from.\n * @param {?Object} options any options to pass to the underlying fetch.\n * @example\n * ```js\n * import { __experimentalFetchUrlData as fetchUrlData } from '@wordpress/core-data';\n *\n * //...\n *\n * export function initialize( id, settings ) {\n *\n * settings.__experimentalFetchUrlData = (\n * url\n * ) => fetchUrlData( url );\n * ```\n * @return {Promise< WPRemoteUrlData[] >} Remote URL data.\n */\nconst fetchUrlData = async ( url, options = {} ) => {\n\tconst endpoint = '/wp-block-editor/v1/url-details';\n\n\tconst args = {\n\t\turl: prependHTTP( url ),\n\t};\n\n\tif ( ! isURL( url ) ) {\n\t\treturn Promise.reject( `${ url } is not a valid URL.` );\n\t}\n\n\t// Test for \"http\" based URL as it is possible for valid\n\t// yet unusable URLs such as `tel:123456` to be passed.\n\tconst protocol = getProtocol( url );\n\n\tif (\n\t\t! protocol ||\n\t\t! isValidProtocol( protocol ) ||\n\t\t! protocol.startsWith( 'http' ) ||\n\t\t! /^https?:\\/\\/[^\\/\\s]/i.test( url )\n\t) {\n\t\treturn Promise.reject(\n\t\t\t`${ url } does not have a valid protocol. URLs must be \"http\" based`\n\t\t);\n\t}\n\n\tif ( CACHE.has( url ) ) {\n\t\treturn CACHE.get( url );\n\t}\n\n\treturn apiFetch( {\n\t\tpath: addQueryArgs( endpoint, args ),\n\t\t...options,\n\t} ).then( ( res ) => {\n\t\tCACHE.set( url, res );\n\t\treturn res;\n\t} );\n};\n\nexport default fetchUrlData;\n","/**\n * External dependencies\n */\nimport { camelCase } from 'change-case';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\nexport { default as __experimentalFetchLinkSuggestions } from './__experimental-fetch-link-suggestions';\nexport { default as __experimentalFetchUrlData } from './__experimental-fetch-url-data';\n\nexport async function fetchBlockPatterns() {\n\tconst restPatterns = await apiFetch( {\n\t\tpath: '/wp/v2/block-patterns/patterns',\n\t} );\n\tif ( ! restPatterns ) {\n\t\treturn [];\n\t}\n\treturn restPatterns.map( ( pattern ) =>\n\t\tObject.fromEntries(\n\t\t\tObject.entries( pattern ).map( ( [ key, value ] ) => [\n\t\t\t\tcamelCase( key ),\n\t\t\t\tvalue,\n\t\t\t] )\n\t\t)\n\t);\n}\n","/**\n * External dependencies\n */\nimport { camelCase } from 'change-case';\n\n/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './name';\nimport { additionalEntityConfigLoaders, DEFAULT_ENTITY_KEY } from './entities';\nimport {\n\tforwardResolver,\n\tgetNormalizedCommaSeparable,\n\tgetUserPermissionCacheKey,\n\tgetUserPermissionsFromAllowHeader,\n\tALLOWED_RESOURCE_ACTIONS,\n\tRECEIVE_INTERMEDIATE_RESULTS,\n} from './utils';\nimport { getSyncProvider } from './sync';\nimport { fetchBlockPatterns } from './fetch';\n\n/**\n * Requests authors from the REST API.\n *\n * @param {Object|undefined} query Optional object of query parameters to\n *                                 include with request.\n */\nexport const getAuthors =\n\t( query ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst path = addQueryArgs(\n\t\t\t'/wp/v2/users/?who=authors&per_page=100',\n\t\t\tquery\n\t\t);\n\t\tconst users = await apiFetch( { path } );\n\t\tdispatch.receiveUserQuery( path, users );\n\t};\n\n/**\n * Requests the current user from the REST API.\n */\nexport const getCurrentUser =\n\t() =>\n\tasync ( { dispatch } ) => {\n\t\tconst currentUser = await apiFetch( { path: '/wp/v2/users/me' } );\n\t\tdispatch.receiveCurrentUser( currentUser );\n\t};\n\n/**\n * Requests an entity's record from the REST API.\n *\n * @param {string}           kind  Entity kind.\n * @param {string}           name  Entity name.\n * @param {number|string}    key   Record's key\n * @param {Object|undefined} query Optional object of query parameters to\n *                                 include with request. If requesting specific\n *                                 fields, fields must always include the ID.\n */\nexport const getEntityRecord =\n\t( kind, name, key = '', query ) =>\n\tasync ( { select, dispatch, registry, resolveSelect } ) => {\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.name === name && config.kind === kind\n\t\t);\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, key ],\n\t\t\t{ exclusive: false }\n\t\t);\n\t\ttry {\n\t\t\t// Entity supports configs,\n\t\t\tif ( query !== undefined && query._fields ) {\n\t\t\t\t// If requesting specific fields, items and query association to said\n\t\t\t\t// records are stored by ID reference. Thus, fields must always include\n\t\t\t\t// the ID.\n\t\t\t\tquery = {\n\t\t\t\t\t...query,\n\t\t\t\t\t_fields: [\n\t\t\t\t\t\t...new Set( [\n\t\t\t\t\t\t\t...( getNormalizedCommaSeparable( query._fields ) ||\n\t\t\t\t\t\t\t\t[] ),\n\t\t\t\t\t\t\tentityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t\t\t\t] ),\n\t\t\t\t\t].join(),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif ( query !== undefined && query._fields ) {\n\t\t\t\t// The resolution cache won't consider query as reusable based on the\n\t\t\t\t// fields, so it's tested here, prior to initiating the REST request,\n\t\t\t\t// and without causing `getEntityRecord` resolution to occur.\n\t\t\t\tconst hasRecord = select.hasEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tkey,\n\t\t\t\t\tquery\n\t\t\t\t);\n\t\t\t\tif ( hasRecord ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst path = addQueryArgs(\n\t\t\t\tentityConfig.baseURL + ( key ? '/' + key : '' ),\n\t\t\t\t{\n\t\t\t\t\t...entityConfig.baseURLParams,\n\t\t\t\t\t...query,\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst response = await apiFetch( { path, parse: false } );\n\t\t\tconst record = await response.json();\n\t\t\tconst permissions = getUserPermissionsFromAllowHeader(\n\t\t\t\tresponse.headers?.get( 'allow' )\n\t\t\t);\n\n\t\t\tconst canUserResolutionsArgs = [];\n\t\t\tconst receiveUserPermissionArgs = {};\n\t\t\tfor ( const action of ALLOWED_RESOURCE_ACTIONS ) {\n\t\t\t\treceiveUserPermissionArgs[\n\t\t\t\t\tgetUserPermissionCacheKey( action, {\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid: key,\n\t\t\t\t\t} )\n\t\t\t\t] = permissions[ action ];\n\n\t\t\t\tcanUserResolutionsArgs.push( [\n\t\t\t\t\taction,\n\t\t\t\t\t{ kind, name, id: key },\n\t\t\t\t] );\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\twindow.__experimentalEnableSync &&\n\t\t\t\tentityConfig.syncConfig?.enabled &&\n\t\t\t\t! query\n\t\t\t) {\n\t\t\t\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\n\t\t\t\t\tawait getSyncProvider().bootstrap(\n\t\t\t\t\t\t// Bootstrap syncing for the entity.\n\t\t\t\t\t\tentityConfig.syncConfig,\n\t\t\t\t\t\trecord,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Handle edits sourced from the sync provider.\n\t\t\t\t\t\t\teditRecord: ( edits ) => {\n\t\t\t\t\t\t\t\tif ( ! Object.keys( edits ).length ) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdispatch( {\n\t\t\t\t\t\t\t\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\trecordId: key,\n\t\t\t\t\t\t\t\t\tedits,\n\t\t\t\t\t\t\t\t\tmeta: {\n\t\t\t\t\t\t\t\t\t\tundo: undefined,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t// Get the current entity record.\n\t\t\t\t\t\t\tgetEditedRecord: async () =>\n\t\t\t\t\t\t\t\tawait resolveSelect.getEditedEntityRecord(\n\t\t\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t// Refetch the persisted entity record.\n\t\t\t\t\t\t\trefetchPersistedRecord: () => {\n\t\t\t\t\t\t\t\tvoid ( async () => {\n\t\t\t\t\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\tawait apiFetch( { path, parse: true } ),\n\t\t\t\t\t\t\t\t\t\tquery\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} )();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tregistry.batch( () => {\n\t\t\t\tdispatch.receiveEntityRecords( kind, name, record, query );\n\t\t\t\tdispatch.receiveUserPermissions( receiveUserPermissionArgs );\n\t\t\t\tdispatch.finishResolutions( 'canUser', canUserResolutionsArgs );\n\t\t\t} );\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Requests an entity's record from the REST API.\n */\nexport const getRawEntityRecord = forwardResolver( 'getEntityRecord' );\n\n/**\n * Requests an entity's record from the REST API.\n */\nexport const getEditedEntityRecord = forwardResolver( 'getEntityRecord' );\n\n/**\n * Requests the entity's records from the REST API.\n *\n * @param {string}  kind  Entity kind.\n * @param {string}  name  Entity name.\n * @param {?Object} query Query Object. If requesting specific fields, fields\n *                        must always include the ID.\n */\nexport const getEntityRecords =\n\t( kind, name, query = {} ) =>\n\tasync ( { dispatch, registry, resolveSelect } ) => {\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.name === name && config.kind === kind\n\t\t);\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name ],\n\t\t\t{ exclusive: false }\n\t\t);\n\n\t\t// Keep a copy of the original query for later use in getResolutionsArgs.\n\t\t// The query object may be modified below (for example, when _fields is\n\t\t// specified), but we want to use the original query when marking\n\t\t// resolutions as finished.\n\t\tconst rawQuery = { ...query };\n\t\tconst key = entityConfig.key || DEFAULT_ENTITY_KEY;\n\n\t\tfunction getResolutionsArgs( records, recordsQuery ) {\n\t\t\tconst queryArgs = Object.fromEntries(\n\t\t\t\tObject.entries( recordsQuery ).filter( ( [ k, v ] ) => {\n\t\t\t\t\treturn [ 'context', '_fields' ].includes( k ) && !! v;\n\t\t\t\t} )\n\t\t\t);\n\t\t\treturn records\n\t\t\t\t.filter( ( record ) => record?.[ key ] )\n\t\t\t\t.map( ( record ) => [\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecord[ key ],\n\t\t\t\t\tObject.keys( queryArgs ).length > 0 ? queryArgs : undefined,\n\t\t\t\t] );\n\t\t}\n\n\t\ttry {\n\t\t\tif ( query._fields ) {\n\t\t\t\t// If requesting specific fields, items and query association to said\n\t\t\t\t// records are stored by ID reference. Thus, fields must always include\n\t\t\t\t// the ID.\n\t\t\t\tquery = {\n\t\t\t\t\t...query,\n\t\t\t\t\t_fields: [\n\t\t\t\t\t\t...new Set( [\n\t\t\t\t\t\t\t...( getNormalizedCommaSeparable( query._fields ) ||\n\t\t\t\t\t\t\t\t[] ),\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t] ),\n\t\t\t\t\t].join(),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst path = addQueryArgs( entityConfig.baseURL, {\n\t\t\t\t...entityConfig.baseURLParams,\n\t\t\t\t...query,\n\t\t\t} );\n\n\t\t\tlet records = [],\n\t\t\t\tmeta;\n\t\t\tif ( entityConfig.supportsPagination && query.per_page !== -1 ) {\n\t\t\t\tconst response = await apiFetch( { path, parse: false } );\n\t\t\t\trecords = Object.values( await response.json() );\n\t\t\t\tmeta = {\n\t\t\t\t\ttotalItems: parseInt(\n\t\t\t\t\t\tresponse.headers.get( 'X-WP-Total' )\n\t\t\t\t\t),\n\t\t\t\t\ttotalPages: parseInt(\n\t\t\t\t\t\tresponse.headers.get( 'X-WP-TotalPages' )\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t} else if (\n\t\t\t\tquery.per_page === -1 &&\n\t\t\t\tquery[ RECEIVE_INTERMEDIATE_RESULTS ] === true\n\t\t\t) {\n\t\t\t\tlet page = 1;\n\t\t\t\tlet totalPages;\n\n\t\t\t\tdo {\n\t\t\t\t\tconst response = await apiFetch( {\n\t\t\t\t\t\tpath: addQueryArgs( path, { page, per_page: 100 } ),\n\t\t\t\t\t\tparse: false,\n\t\t\t\t\t} );\n\t\t\t\t\tconst pageRecords = Object.values( await response.json() );\n\n\t\t\t\t\ttotalPages = parseInt(\n\t\t\t\t\t\tresponse.headers.get( 'X-WP-TotalPages' )\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( ! meta ) {\n\t\t\t\t\t\tmeta = {\n\t\t\t\t\t\t\ttotalItems: parseInt(\n\t\t\t\t\t\t\t\tresponse.headers.get( 'X-WP-Total' )\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttotalPages: 1,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\trecords.push( ...pageRecords );\n\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\trecords,\n\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tmeta\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdispatch.finishResolutions(\n\t\t\t\t\t\t\t'getEntityRecord',\n\t\t\t\t\t\t\tgetResolutionsArgs( pageRecords, rawQuery )\n\t\t\t\t\t\t);\n\t\t\t\t\t} );\n\t\t\t\t\tpage++;\n\t\t\t\t} while ( page <= totalPages );\n\t\t\t} else {\n\t\t\t\trecords = Object.values( await apiFetch( { path } ) );\n\t\t\t\tmeta = {\n\t\t\t\t\ttotalItems: records.length,\n\t\t\t\t\ttotalPages: 1,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If we request fields but the result doesn't contain the fields,\n\t\t\t// explicitly set these fields as \"undefined\"\n\t\t\t// that way we consider the query \"fulfilled\".\n\t\t\tif ( query._fields ) {\n\t\t\t\trecords = records.map( ( record ) => {\n\t\t\t\t\tquery._fields.split( ',' ).forEach( ( field ) => {\n\t\t\t\t\t\tif ( ! record.hasOwnProperty( field ) ) {\n\t\t\t\t\t\t\trecord[ field ] = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn record;\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tregistry.batch( () => {\n\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecords,\n\t\t\t\t\tquery,\n\t\t\t\t\tfalse,\n\t\t\t\t\tundefined,\n\t\t\t\t\tmeta\n\t\t\t\t);\n\n\t\t\t\tconst targetHints = records\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t( record ) =>\n\t\t\t\t\t\t\t!! record?.[ key ] &&\n\t\t\t\t\t\t\t!! record?._links?.self?.[ 0 ]?.targetHints?.allow\n\t\t\t\t\t)\n\t\t\t\t\t.map( ( record ) => ( {\n\t\t\t\t\t\tid: record[ key ],\n\t\t\t\t\t\tpermissions: getUserPermissionsFromAllowHeader(\n\t\t\t\t\t\t\trecord._links.self[ 0 ].targetHints.allow\n\t\t\t\t\t\t),\n\t\t\t\t\t} ) );\n\n\t\t\t\tconst canUserResolutionsArgs = [];\n\t\t\t\tconst receiveUserPermissionArgs = {};\n\t\t\t\tfor ( const targetHint of targetHints ) {\n\t\t\t\t\tfor ( const action of ALLOWED_RESOURCE_ACTIONS ) {\n\t\t\t\t\t\tcanUserResolutionsArgs.push( [\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\t{ kind, name, id: targetHint.id },\n\t\t\t\t\t\t] );\n\n\t\t\t\t\t\treceiveUserPermissionArgs[\n\t\t\t\t\t\t\tgetUserPermissionCacheKey( action, {\n\t\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tid: targetHint.id,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t] = targetHint.permissions[ action ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( targetHints.length > 0 ) {\n\t\t\t\t\tdispatch.receiveUserPermissions(\n\t\t\t\t\t\treceiveUserPermissionArgs\n\t\t\t\t\t);\n\t\t\t\t\tdispatch.finishResolutions(\n\t\t\t\t\t\t'canUser',\n\t\t\t\t\t\tcanUserResolutionsArgs\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tdispatch.finishResolutions(\n\t\t\t\t\t'getEntityRecord',\n\t\t\t\t\tgetResolutionsArgs( records, rawQuery )\n\t\t\t\t);\n\n\t\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t\t} );\n\t\t} catch ( e ) {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\ngetEntityRecords.shouldInvalidate = ( action, kind, name ) => {\n\treturn (\n\t\t( action.type === 'RECEIVE_ITEMS' || action.type === 'REMOVE_ITEMS' ) &&\n\t\taction.invalidateCache &&\n\t\tkind === action.kind &&\n\t\tname === action.name\n\t);\n};\n\n/**\n * Requests the total number of entity records.\n */\nexport const getEntityRecordsTotalItems = forwardResolver( 'getEntityRecords' );\n\n/**\n * Requests the number of available pages for the given query.\n */\nexport const getEntityRecordsTotalPages = forwardResolver( 'getEntityRecords' );\n\n/**\n * Requests the current theme.\n */\nexport const getCurrentTheme =\n\t() =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tconst activeThemes = await resolveSelect.getEntityRecords(\n\t\t\t'root',\n\t\t\t'theme',\n\t\t\t{ status: 'active' }\n\t\t);\n\n\t\tdispatch.receiveCurrentTheme( activeThemes[ 0 ] );\n\t};\n\n/**\n * Requests theme supports data from the index.\n */\nexport const getThemeSupports = forwardResolver( 'getCurrentTheme' );\n\n/**\n * Requests a preview from the Embed API.\n *\n * @param {string} url URL to get the preview for.\n */\nexport const getEmbedPreview =\n\t( url ) =>\n\tasync ( { dispatch } ) => {\n\t\ttry {\n\t\t\tconst embedProxyResponse = await apiFetch( {\n\t\t\t\tpath: addQueryArgs( '/oembed/1.0/proxy', { url } ),\n\t\t\t} );\n\t\t\tdispatch.receiveEmbedPreview( url, embedProxyResponse );\n\t\t} catch ( error ) {\n\t\t\t// Embed API 404s if the URL cannot be embedded, so we have to catch the error from the apiRequest here.\n\t\t\tdispatch.receiveEmbedPreview( url, false );\n\t\t}\n\t};\n\n/**\n * Checks whether the current user can perform the given action on the given\n * REST resource.\n *\n * @param {string}        requestedAction Action to check. One of: 'create', 'read', 'update',\n *                                        'delete'.\n * @param {string|Object} resource        Entity resource to check. Accepts entity object `{ kind: 'postType', name: 'attachment', id: 1 }`\n *                                        or REST base as a string - `media`.\n * @param {?string}       id              ID of the rest resource to check.\n */\nexport const canUser =\n\t( requestedAction, resource, id ) =>\n\tasync ( { dispatch, registry, resolveSelect } ) => {\n\t\tif ( ! ALLOWED_RESOURCE_ACTIONS.includes( requestedAction ) ) {\n\t\t\tthrow new Error( `'${ requestedAction }' is not a valid action.` );\n\t\t}\n\n\t\tconst { hasStartedResolution } = registry.select( STORE_NAME );\n\n\t\t// Prevent resolving the same resource twice.\n\t\tfor ( const relatedAction of ALLOWED_RESOURCE_ACTIONS ) {\n\t\t\tif ( relatedAction === requestedAction ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst isAlreadyResolving = hasStartedResolution( 'canUser', [\n\t\t\t\trelatedAction,\n\t\t\t\tresource,\n\t\t\t\tid,\n\t\t\t] );\n\t\t\tif ( isAlreadyResolving ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet resourcePath = null;\n\t\tif ( typeof resource === 'object' ) {\n\t\t\tif ( ! resource.kind || ! resource.name ) {\n\t\t\t\tthrow new Error( 'The entity resource object is not valid.' );\n\t\t\t}\n\n\t\t\tconst configs = await resolveSelect.getEntitiesConfig(\n\t\t\t\tresource.kind\n\t\t\t);\n\t\t\tconst entityConfig = configs.find(\n\t\t\t\t( config ) =>\n\t\t\t\t\tconfig.name === resource.name &&\n\t\t\t\t\tconfig.kind === resource.kind\n\t\t\t);\n\t\t\tif ( ! entityConfig ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresourcePath =\n\t\t\t\tentityConfig.baseURL + ( resource.id ? '/' + resource.id : '' );\n\t\t} else {\n\t\t\tresourcePath = `/wp/v2/${ resource }` + ( id ? '/' + id : '' );\n\t\t}\n\n\t\tlet response;\n\t\ttry {\n\t\t\tresponse = await apiFetch( {\n\t\t\t\tpath: resourcePath,\n\t\t\t\tmethod: 'OPTIONS',\n\t\t\t\tparse: false,\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\t// Do nothing if our OPTIONS request comes back with an API error (4xx or\n\t\t\t// 5xx). The previously determined isAllowed value will remain in the store.\n\t\t\treturn;\n\t\t}\n\n\t\t// Optional chaining operator is used here because the API requests don't\n\t\t// return the expected result in the React native version. Instead, API requests\n\t\t// only return the result, without including response properties like the headers.\n\t\tconst permissions = getUserPermissionsFromAllowHeader(\n\t\t\tresponse.headers?.get( 'allow' )\n\t\t);\n\t\tregistry.batch( () => {\n\t\t\tfor ( const action of ALLOWED_RESOURCE_ACTIONS ) {\n\t\t\t\tconst key = getUserPermissionCacheKey( action, resource, id );\n\n\t\t\t\tdispatch.receiveUserPermission( key, permissions[ action ] );\n\n\t\t\t\t// Mark related action resolutions as finished.\n\t\t\t\tif ( action !== requestedAction ) {\n\t\t\t\t\tdispatch.finishResolution( 'canUser', [\n\t\t\t\t\t\taction,\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tid,\n\t\t\t\t\t] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t};\n\n/**\n * Checks whether the current user can perform the given action on the given\n * REST resource.\n *\n * @param {string}        kind     Entity kind.\n * @param {string}        name     Entity name.\n * @param {number|string} recordId Record's id.\n */\nexport const canUserEditEntityRecord =\n\t( kind, name, recordId ) =>\n\tasync ( { dispatch } ) => {\n\t\tawait dispatch( canUser( 'update', { kind, name, id: recordId } ) );\n\t};\n\n/**\n * Request autosave data from the REST API.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport const getAutosaves =\n\t( postType, postId ) =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tconst {\n\t\t\trest_base: restBase,\n\t\t\trest_namespace: restNamespace = 'wp/v2',\n\t\t\tsupports,\n\t\t} = await resolveSelect.getPostType( postType );\n\t\tif ( ! supports?.autosave ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst autosaves = await apiFetch( {\n\t\t\tpath: `/${ restNamespace }/${ restBase }/${ postId }/autosaves?context=edit`,\n\t\t} );\n\n\t\tif ( autosaves && autosaves.length ) {\n\t\t\tdispatch.receiveAutosaves( postId, autosaves );\n\t\t}\n\t};\n\n/**\n * Request autosave data from the REST API.\n *\n * This resolver exists to ensure the underlying autosaves are fetched via\n * `getAutosaves` when a call to the `getAutosave` selector is made.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport const getAutosave =\n\t( postType, postId ) =>\n\tasync ( { resolveSelect } ) => {\n\t\tawait resolveSelect.getAutosaves( postType, postId );\n\t};\n\nexport const __experimentalGetCurrentGlobalStylesId =\n\t() =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tconst activeThemes = await resolveSelect.getEntityRecords(\n\t\t\t'root',\n\t\t\t'theme',\n\t\t\t{ status: 'active' }\n\t\t);\n\t\tconst globalStylesURL =\n\t\t\tactiveThemes?.[ 0 ]?._links?.[ 'wp:user-global-styles' ]?.[ 0 ]\n\t\t\t\t?.href;\n\t\tif ( ! globalStylesURL ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Regex matches the ID at the end of a URL or immediately before\n\t\t// the query string.\n\t\tconst matches = globalStylesURL.match( /\\/(\\d+)(?:\\?|$)/ );\n\t\tconst id = matches ? Number( matches[ 1 ] ) : null;\n\n\t\tif ( id ) {\n\t\t\tdispatch.__experimentalReceiveCurrentGlobalStylesId( id );\n\t\t}\n\t};\n\nexport const __experimentalGetCurrentThemeBaseGlobalStyles =\n\t() =>\n\tasync ( { resolveSelect, dispatch } ) => {\n\t\tconst currentTheme = await resolveSelect.getCurrentTheme();\n\t\t// Please adjust the preloaded requests if this changes!\n\t\tconst themeGlobalStyles = await apiFetch( {\n\t\t\tpath: `/wp/v2/global-styles/themes/${ currentTheme.stylesheet }?context=view`,\n\t\t} );\n\t\tdispatch.__experimentalReceiveThemeBaseGlobalStyles(\n\t\t\tcurrentTheme.stylesheet,\n\t\t\tthemeGlobalStyles\n\t\t);\n\t};\n\nexport const __experimentalGetCurrentThemeGlobalStylesVariations =\n\t() =>\n\tasync ( { resolveSelect, dispatch } ) => {\n\t\tconst currentTheme = await resolveSelect.getCurrentTheme();\n\t\t// Please adjust the preloaded requests if this changes!\n\t\tconst variations = await apiFetch( {\n\t\t\tpath: `/wp/v2/global-styles/themes/${ currentTheme.stylesheet }/variations?context=view`,\n\t\t} );\n\t\tdispatch.__experimentalReceiveThemeGlobalStyleVariations(\n\t\t\tcurrentTheme.stylesheet,\n\t\t\tvariations\n\t\t);\n\t};\n\n/**\n * Fetches and returns the revisions of the current global styles theme.\n */\nexport const getCurrentThemeGlobalStylesRevisions =\n\t() =>\n\tasync ( { resolveSelect, dispatch } ) => {\n\t\tconst globalStylesId =\n\t\t\tawait resolveSelect.__experimentalGetCurrentGlobalStylesId();\n\t\tconst record = globalStylesId\n\t\t\t? await resolveSelect.getEntityRecord(\n\t\t\t\t\t'root',\n\t\t\t\t\t'globalStyles',\n\t\t\t\t\tglobalStylesId\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst revisionsURL = record?._links?.[ 'version-history' ]?.[ 0 ]?.href;\n\n\t\tif ( revisionsURL ) {\n\t\t\tconst resetRevisions = await apiFetch( {\n\t\t\t\turl: revisionsURL,\n\t\t\t} );\n\t\t\tconst revisions = resetRevisions?.map( ( revision ) =>\n\t\t\t\tObject.fromEntries(\n\t\t\t\t\tObject.entries( revision ).map( ( [ key, value ] ) => [\n\t\t\t\t\t\tcamelCase( key ),\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t] )\n\t\t\t\t)\n\t\t\t);\n\t\t\tdispatch.receiveThemeGlobalStyleRevisions(\n\t\t\t\tglobalStylesId,\n\t\t\t\trevisions\n\t\t\t);\n\t\t}\n\t};\n\ngetCurrentThemeGlobalStylesRevisions.shouldInvalidate = ( action ) => {\n\treturn (\n\t\taction.type === 'SAVE_ENTITY_RECORD_FINISH' &&\n\t\taction.kind === 'root' &&\n\t\t! action.error &&\n\t\taction.name === 'globalStyles'\n\t);\n};\n\nexport const getBlockPatterns =\n\t() =>\n\tasync ( { dispatch } ) => {\n\t\tconst patterns = await fetchBlockPatterns();\n\t\tdispatch( { type: 'RECEIVE_BLOCK_PATTERNS', patterns } );\n\t};\n\nexport const getBlockPatternCategories =\n\t() =>\n\tasync ( { dispatch } ) => {\n\t\tconst categories = await apiFetch( {\n\t\t\tpath: '/wp/v2/block-patterns/categories',\n\t\t} );\n\t\tdispatch( { type: 'RECEIVE_BLOCK_PATTERN_CATEGORIES', categories } );\n\t};\n\nexport const getUserPatternCategories =\n\t() =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tconst patternCategories = await resolveSelect.getEntityRecords(\n\t\t\t'taxonomy',\n\t\t\t'wp_pattern_category',\n\t\t\t{\n\t\t\t\tper_page: -1,\n\t\t\t\t_fields: 'id,name,description,slug',\n\t\t\t\tcontext: 'view',\n\t\t\t}\n\t\t);\n\n\t\tconst mappedPatternCategories =\n\t\t\tpatternCategories?.map( ( userCategory ) => ( {\n\t\t\t\t...userCategory,\n\t\t\t\tlabel: decodeEntities( userCategory.name ),\n\t\t\t\tname: userCategory.slug,\n\t\t\t} ) ) || [];\n\n\t\tdispatch( {\n\t\t\ttype: 'RECEIVE_USER_PATTERN_CATEGORIES',\n\t\t\tpatternCategories: mappedPatternCategories,\n\t\t} );\n\t};\n\nexport const getNavigationFallbackId =\n\t() =>\n\tasync ( { dispatch, select, registry } ) => {\n\t\tconst fallback = await apiFetch( {\n\t\t\tpath: addQueryArgs( '/wp-block-editor/v1/navigation-fallback', {\n\t\t\t\t_embed: true,\n\t\t\t} ),\n\t\t} );\n\n\t\tconst record = fallback?._embedded?.self;\n\n\t\tregistry.batch( () => {\n\t\t\tdispatch.receiveNavigationFallbackId( fallback?.id );\n\n\t\t\tif ( ! record ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the fallback is already in the store, don't invalidate navigation queries.\n\t\t\t// Otherwise, invalidate the cache for the scenario where there were no Navigation\n\t\t\t// posts in the state and the fallback created one.\n\t\t\tconst existingFallbackEntityRecord = select.getEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'wp_navigation',\n\t\t\t\tfallback.id\n\t\t\t);\n\t\t\tconst invalidateNavigationQueries = ! existingFallbackEntityRecord;\n\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t'postType',\n\t\t\t\t'wp_navigation',\n\t\t\t\trecord,\n\t\t\t\tundefined,\n\t\t\t\tinvalidateNavigationQueries\n\t\t\t);\n\n\t\t\t// Resolve to avoid further network requests.\n\t\t\tdispatch.finishResolution( 'getEntityRecord', [\n\t\t\t\t'postType',\n\t\t\t\t'wp_navigation',\n\t\t\t\tfallback.id,\n\t\t\t] );\n\t\t} );\n\t};\n\nexport const getDefaultTemplateId =\n\t( query ) =>\n\tasync ( { dispatch, registry, resolveSelect } ) => {\n\t\tconst template = await apiFetch( {\n\t\t\tpath: addQueryArgs( '/wp/v2/templates/lookup', query ),\n\t\t} );\n\t\t// Wait for the the entities config to be loaded, otherwise receiving\n\t\t// the template as an entity will not work.\n\t\tawait resolveSelect.getEntitiesConfig( 'postType' );\n\t\t// Endpoint may return an empty object if no template is found.\n\t\tif ( template?.id ) {\n\t\t\tregistry.batch( () => {\n\t\t\t\tdispatch.receiveDefaultTemplateId( query, template.id );\n\t\t\t\tdispatch.receiveEntityRecords( 'postType', 'wp_template', [\n\t\t\t\t\ttemplate,\n\t\t\t\t] );\n\t\t\t\t// Avoid further network requests.\n\t\t\t\tdispatch.finishResolution( 'getEntityRecord', [\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_template',\n\t\t\t\t\ttemplate.id,\n\t\t\t\t] );\n\t\t\t} );\n\t\t}\n\t};\n\n/**\n * Requests an entity's revisions from the REST API.\n *\n * @param {string}           kind      Entity kind.\n * @param {string}           name      Entity name.\n * @param {number|string}    recordKey The key of the entity record whose revisions you want to fetch.\n * @param {Object|undefined} query     Optional object of query parameters to\n *                                     include with request. If requesting specific\n *                                     fields, fields must always include the ID.\n */\nexport const getRevisions =\n\t( kind, name, recordKey, query = {} ) =>\n\tasync ( { dispatch, registry, resolveSelect } ) => {\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.name === name && config.kind === kind\n\t\t);\n\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( query._fields ) {\n\t\t\t// If requesting specific fields, items and query association to said\n\t\t\t// records are stored by ID reference. Thus, fields must always include\n\t\t\t// the ID.\n\t\t\tquery = {\n\t\t\t\t...query,\n\t\t\t\t_fields: [\n\t\t\t\t\t...new Set( [\n\t\t\t\t\t\t...( getNormalizedCommaSeparable( query._fields ) ||\n\t\t\t\t\t\t\t[] ),\n\t\t\t\t\t\tentityConfig.revisionKey || DEFAULT_ENTITY_KEY,\n\t\t\t\t\t] ),\n\t\t\t\t].join(),\n\t\t\t};\n\t\t}\n\n\t\tconst path = addQueryArgs(\n\t\t\tentityConfig.getRevisionsUrl( recordKey ),\n\t\t\tquery\n\t\t);\n\n\t\tlet records, response;\n\t\tconst meta = {};\n\t\tconst isPaginated =\n\t\t\tentityConfig.supportsPagination && query.per_page !== -1;\n\t\ttry {\n\t\t\tresponse = await apiFetch( { path, parse: ! isPaginated } );\n\t\t} catch ( error ) {\n\t\t\t// Do nothing if our request comes back with an API error.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( response ) {\n\t\t\tif ( isPaginated ) {\n\t\t\t\trecords = Object.values( await response.json() );\n\t\t\t\tmeta.totalItems = parseInt(\n\t\t\t\t\tresponse.headers.get( 'X-WP-Total' )\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\trecords = Object.values( response );\n\t\t\t}\n\n\t\t\t// If we request fields but the result doesn't contain the fields,\n\t\t\t// explicitly set these fields as \"undefined\"\n\t\t\t// that way we consider the query \"fulfilled\".\n\t\t\tif ( query._fields ) {\n\t\t\t\trecords = records.map( ( record ) => {\n\t\t\t\t\tquery._fields.split( ',' ).forEach( ( field ) => {\n\t\t\t\t\t\tif ( ! record.hasOwnProperty( field ) ) {\n\t\t\t\t\t\t\trecord[ field ] = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn record;\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tregistry.batch( () => {\n\t\t\t\tdispatch.receiveRevisions(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordKey,\n\t\t\t\t\trecords,\n\t\t\t\t\tquery,\n\t\t\t\t\tfalse,\n\t\t\t\t\tmeta\n\t\t\t\t);\n\n\t\t\t\t// When requesting all fields, the list of results can be used to\n\t\t\t\t// resolve the `getRevision` selector in addition to `getRevisions`.\n\t\t\t\tif ( ! query?._fields && ! query.context ) {\n\t\t\t\t\tconst key = entityConfig.key || DEFAULT_ENTITY_KEY;\n\t\t\t\t\tconst resolutionsArgs = records\n\t\t\t\t\t\t.filter( ( record ) => record[ key ] )\n\t\t\t\t\t\t.map( ( record ) => [\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\trecordKey,\n\t\t\t\t\t\t\trecord[ key ],\n\t\t\t\t\t\t] );\n\n\t\t\t\t\tdispatch.finishResolutions(\n\t\t\t\t\t\t'getRevision',\n\t\t\t\t\t\tresolutionsArgs\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\n// Invalidate cache when a new revision is created.\ngetRevisions.shouldInvalidate = ( action, kind, name, recordKey ) =>\n\taction.type === 'SAVE_ENTITY_RECORD_FINISH' &&\n\tname === action.name &&\n\tkind === action.kind &&\n\t! action.error &&\n\trecordKey === action.recordId;\n\n/**\n * Requests a specific Entity revision from the REST API.\n *\n * @param {string}           kind        Entity kind.\n * @param {string}           name        Entity name.\n * @param {number|string}    recordKey   The key of the entity record whose revisions you want to fetch.\n * @param {number|string}    revisionKey The revision's key.\n * @param {Object|undefined} query       Optional object of query parameters to\n *                                       include with request. If requesting specific\n *                                       fields, fields must always include the ID.\n */\nexport const getRevision =\n\t( kind, name, recordKey, revisionKey, query ) =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tconst configs = await resolveSelect.getEntitiesConfig( kind );\n\t\tconst entityConfig = configs.find(\n\t\t\t( config ) => config.name === name && config.kind === kind\n\t\t);\n\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( query !== undefined && query._fields ) {\n\t\t\t// If requesting specific fields, items and query association to said\n\t\t\t// records are stored by ID reference. Thus, fields must always include\n\t\t\t// the ID.\n\t\t\tquery = {\n\t\t\t\t...query,\n\t\t\t\t_fields: [\n\t\t\t\t\t...new Set( [\n\t\t\t\t\t\t...( getNormalizedCommaSeparable( query._fields ) ||\n\t\t\t\t\t\t\t[] ),\n\t\t\t\t\t\tentityConfig.revisionKey || DEFAULT_ENTITY_KEY,\n\t\t\t\t\t] ),\n\t\t\t\t].join(),\n\t\t\t};\n\t\t}\n\t\tconst path = addQueryArgs(\n\t\t\tentityConfig.getRevisionsUrl( recordKey, revisionKey ),\n\t\t\tquery\n\t\t);\n\n\t\tlet record;\n\t\ttry {\n\t\t\trecord = await apiFetch( { path } );\n\t\t} catch ( error ) {\n\t\t\t// Do nothing if our request comes back with an API error.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( record ) {\n\t\t\tdispatch.receiveRevisions( kind, name, recordKey, record, query );\n\t\t}\n\t};\n\n/**\n * Requests a specific post type options from the REST API.\n *\n * @param {string} postType Post type slug.\n */\nexport const getRegisteredPostMeta =\n\t( postType ) =>\n\tasync ( { dispatch, resolveSelect } ) => {\n\t\tlet options;\n\t\ttry {\n\t\t\tconst {\n\t\t\t\trest_namespace: restNamespace = 'wp/v2',\n\t\t\t\trest_base: restBase,\n\t\t\t} = ( await resolveSelect.getPostType( postType ) ) || {};\n\t\t\toptions = await apiFetch( {\n\t\t\t\tpath: `${ restNamespace }/${ restBase }/?context=edit`,\n\t\t\t\tmethod: 'OPTIONS',\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\t// Do nothing if the request comes back with an API error.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( options ) {\n\t\t\tdispatch.receiveRegisteredPostMeta(\n\t\t\t\tpostType,\n\t\t\t\toptions?.schema?.properties?.meta?.properties\n\t\t\t);\n\t\t}\n\t};\n\n/**\n * Requests entity configs for the given kind from the REST API.\n *\n * @param {string} kind Entity kind.\n */\nexport const getEntitiesConfig =\n\t( kind ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst loader = additionalEntityConfigLoaders.find(\n\t\t\t( l ) => l.kind === kind\n\t\t);\n\n\t\tif ( ! loader ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst configs = await loader.loadEntities();\n\t\t\tif ( ! configs.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdispatch.addEntities( configs );\n\t\t} catch {\n\t\t\t// Do nothing if the request comes back with an API error.\n\t\t}\n\t};\n","export function deepCopyLocksTreePath( tree, path ) {\n\tconst newTree = { ...tree };\n\tlet currentNode = newTree;\n\tfor ( const branchName of path ) {\n\t\tcurrentNode.children = {\n\t\t\t...currentNode.children,\n\t\t\t[ branchName ]: {\n\t\t\t\tlocks: [],\n\t\t\t\tchildren: {},\n\t\t\t\t...currentNode.children[ branchName ],\n\t\t\t},\n\t\t};\n\t\tcurrentNode = currentNode.children[ branchName ];\n\t}\n\treturn newTree;\n}\n\nexport function getNode( tree, path ) {\n\tlet currentNode = tree;\n\tfor ( const branchName of path ) {\n\t\tconst nextNode = currentNode.children[ branchName ];\n\t\tif ( ! nextNode ) {\n\t\t\treturn null;\n\t\t}\n\t\tcurrentNode = nextNode;\n\t}\n\treturn currentNode;\n}\n\nexport function* iteratePath( tree, path ) {\n\tlet currentNode = tree;\n\tyield currentNode;\n\tfor ( const branchName of path ) {\n\t\tconst nextNode = currentNode.children[ branchName ];\n\t\tif ( ! nextNode ) {\n\t\t\tbreak;\n\t\t}\n\t\tyield nextNode;\n\t\tcurrentNode = nextNode;\n\t}\n}\n\nexport function* iterateDescendants( node ) {\n\tconst stack = Object.values( node.children );\n\twhile ( stack.length ) {\n\t\tconst childNode = stack.pop();\n\t\tyield childNode;\n\t\tstack.push( ...Object.values( childNode.children ) );\n\t}\n}\n\nexport function hasConflictingLock( { exclusive }, locks ) {\n\tif ( exclusive && locks.length ) {\n\t\treturn true;\n\t}\n\n\tif ( ! exclusive && locks.filter( ( lock ) => lock.exclusive ).length ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * Internal dependencies\n */\nimport { getNode, deepCopyLocksTreePath } from './utils';\n\nconst DEFAULT_STATE = {\n\trequests: [],\n\ttree: {\n\t\tlocks: [],\n\t\tchildren: {},\n\t},\n};\n\n/**\n * Reducer returning locks.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport default function locks( state = DEFAULT_STATE, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ENQUEUE_LOCK_REQUEST': {\n\t\t\tconst { request } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequests: [ request, ...state.requests ],\n\t\t\t};\n\t\t}\n\t\tcase 'GRANT_LOCK_REQUEST': {\n\t\t\tconst { lock, request } = action;\n\t\t\tconst { store, path } = request;\n\t\t\tconst storePath = [ store, ...path ];\n\n\t\t\tconst newTree = deepCopyLocksTreePath( state.tree, storePath );\n\t\t\tconst node = getNode( newTree, storePath );\n\t\t\tnode.locks = [ ...node.locks, lock ];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequests: state.requests.filter( ( r ) => r !== request ),\n\t\t\t\ttree: newTree,\n\t\t\t};\n\t\t}\n\t\tcase 'RELEASE_LOCK': {\n\t\t\tconst { lock } = action;\n\t\t\tconst storePath = [ lock.store, ...lock.path ];\n\n\t\t\tconst newTree = deepCopyLocksTreePath( state.tree, storePath );\n\t\t\tconst node = getNode( newTree, storePath );\n\t\t\tnode.locks = node.locks.filter( ( l ) => l !== lock );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttree: newTree,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn state;\n}\n","/**\n * Internal dependencies\n */\nimport {\n\titerateDescendants,\n\titeratePath,\n\thasConflictingLock,\n\tgetNode,\n} from './utils';\n\nexport function getPendingLockRequests( state ) {\n\treturn state.requests;\n}\n\nexport function isLockAvailable( state, store, path, { exclusive } ) {\n\tconst storePath = [ store, ...path ];\n\tconst locks = state.tree;\n\n\t// Validate all parents and the node itself\n\tfor ( const node of iteratePath( locks, storePath ) ) {\n\t\tif ( hasConflictingLock( { exclusive }, node.locks ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// iteratePath terminates early if path is unreachable, let's\n\t// re-fetch the node and check it exists in the tree.\n\tconst node = getNode( locks, storePath );\n\tif ( ! node ) {\n\t\treturn true;\n\t}\n\n\t// Validate all nested nodes\n\tfor ( const descendant of iterateDescendants( node ) ) {\n\t\tif ( hasConflictingLock( { exclusive }, descendant.locks ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport { isLockAvailable, getPendingLockRequests } from './selectors';\n\nexport default function createLocks() {\n\tlet state = reducer( undefined, { type: '@@INIT' } );\n\n\tfunction processPendingLockRequests() {\n\t\tfor ( const request of getPendingLockRequests( state ) ) {\n\t\t\tconst { store, path, exclusive, notifyAcquired } = request;\n\t\t\tif ( isLockAvailable( state, store, path, { exclusive } ) ) {\n\t\t\t\tconst lock = { store, path, exclusive };\n\t\t\t\tstate = reducer( state, {\n\t\t\t\t\ttype: 'GRANT_LOCK_REQUEST',\n\t\t\t\t\tlock,\n\t\t\t\t\trequest,\n\t\t\t\t} );\n\t\t\t\tnotifyAcquired( lock );\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction acquire( store, path, exclusive ) {\n\t\treturn new Promise( ( resolve ) => {\n\t\t\tstate = reducer( state, {\n\t\t\t\ttype: 'ENQUEUE_LOCK_REQUEST',\n\t\t\t\trequest: { store, path, exclusive, notifyAcquired: resolve },\n\t\t\t} );\n\t\t\tprocessPendingLockRequests();\n\t\t} );\n\t}\n\tfunction release( lock ) {\n\t\tstate = reducer( state, {\n\t\t\ttype: 'RELEASE_LOCK',\n\t\t\tlock,\n\t\t} );\n\t\tprocessPendingLockRequests();\n\t}\n\n\treturn { acquire, release };\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\n\nexport const EntityContext = createContext( {} );\nEntityContext.displayName = 'EntityContext';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/**\n * WordPress dependencies\n */\nimport { useContext, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { EntityContext } from './entity-context';\n\n/**\n * Context provider component for providing\n * an entity for a specific entity.\n *\n * @param {Object} props          The component's props.\n * @param {string} props.kind     The entity kind.\n * @param {string} props.type     The entity name.\n * @param {number} props.id       The entity ID.\n * @param {*}      props.children The children to wrap.\n *\n * @return {Object} The provided children, wrapped with\n *                   the entity's context provider.\n */\nexport default function EntityProvider( { kind, type: name, id, children } ) {\n\tconst parent = useContext( EntityContext );\n\tconst childContext = useMemo(\n\t\t() => ( {\n\t\t\t...parent,\n\t\t\t[ kind ]: {\n\t\t\t\t...parent?.[ kind ],\n\t\t\t\t[ name ]: id,\n\t\t\t},\n\t\t} ),\n\t\t[ parent, kind, name, id ]\n\t);\n\treturn (\n\t\t<EntityContext.Provider value={ childContext }>\n\t\t\t{ children }\n\t\t</EntityContext.Provider>\n\t);\n}\n","export const enum Status {\n\tIdle = 'IDLE',\n\tResolving = 'RESOLVING',\n\tError = 'ERROR',\n\tSuccess = 'SUCCESS',\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport memoize from './memoize';\nimport { Status } from './constants';\n\nexport const META_SELECTORS = [\n\t'getIsResolving',\n\t'hasStartedResolution',\n\t'hasFinishedResolution',\n\t'isResolving',\n\t'getCachedResolvers',\n];\n\ninterface QuerySelectResponse< Data > {\n\t/** the requested selector return value */\n\tdata: Data;\n\n\t/** is the record still being resolved? Via the `isResolving` meta-selector */\n\tisResolving: boolean;\n\n\t/** was the resolution started? Via the `hasStartedResolution` meta-selector */\n\thasStarted: boolean;\n\n\t/** has the resolution finished? Via the `hasFinishedResolution` meta-selector. */\n\thasResolved: boolean;\n}\n\n/**\n * Like useSelect, but the selectors return objects containing\n * both the original data AND the resolution info.\n *\n * @since 6.1.0 Introduced in WordPress core.\n * @private\n *\n * @param {Function} mapQuerySelect see useSelect\n * @param {Array}    deps           see useSelect\n *\n * @example\n * ```js\n * import { useQuerySelect } from '@wordpress/data';\n * import { store as coreDataStore } from '@wordpress/core-data';\n *\n * function PageTitleDisplay( { id } ) {\n *   const { data: page, isResolving } = useQuerySelect( ( query ) => {\n *     return query( coreDataStore ).getEntityRecord( 'postType', 'page', id )\n *   }, [ id ] );\n *\n *   if ( isResolving ) {\n *     return 'Loading...';\n *   }\n *\n *   return page.title;\n * }\n *\n * // Rendered in the application:\n * // <PageTitleDisplay id={ 10 } />\n * ```\n *\n * In the above example, when `PageTitleDisplay` is rendered into an\n * application, the page and the resolution details will be retrieved from\n * the store state using the `mapSelect` callback on `useQuerySelect`.\n *\n * If the id prop changes then any page in the state for that id is\n * retrieved. If the id prop doesn't change and other props are passed in\n * that do change, the title will not change because the dependency is just\n * the id.\n * @see useSelect\n *\n * @return {QuerySelectResponse} Queried data.\n */\nexport default function useQuerySelect( mapQuerySelect, deps ) {\n\treturn useSelect( ( select, registry ) => {\n\t\tconst resolve = ( store ) => enrichSelectors( select( store ) );\n\t\treturn mapQuerySelect( resolve, registry );\n\t}, deps );\n}\n\ninterface EnrichedSelectors {\n\t< Selectors extends Record< string, ( ...args: any[] ) => any > >(\n\t\tselectors: Selectors\n\t): {\n\t\t[ Selector in keyof Selectors ]: (\n\t\t\t...args: Parameters< Selectors[ Selector ] >\n\t\t) => QuerySelectResponse< ReturnType< Selectors[ Selector ] > >;\n\t};\n}\n\n/**\n * Transform simple selectors into ones that return an object with the\n * original return value AND the resolution info.\n *\n * @param {Object} selectors Selectors to enrich\n * @return {EnrichedSelectors} Enriched selectors\n */\nconst enrichSelectors = memoize( ( ( selectors ) => {\n\tconst resolvers = {};\n\tfor ( const selectorName in selectors ) {\n\t\tif ( META_SELECTORS.includes( selectorName ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tObject.defineProperty( resolvers, selectorName, {\n\t\t\tget:\n\t\t\t\t() =>\n\t\t\t\t( ...args: unknown[] ) => {\n\t\t\t\t\tconst data = selectors[ selectorName ]( ...args );\n\t\t\t\t\tconst resolutionStatus = selectors.getResolutionState(\n\t\t\t\t\t\tselectorName,\n\t\t\t\t\t\targs\n\t\t\t\t\t)?.status;\n\n\t\t\t\t\tlet status;\n\t\t\t\t\tswitch ( resolutionStatus ) {\n\t\t\t\t\t\tcase 'resolving':\n\t\t\t\t\t\t\tstatus = Status.Resolving;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'finished':\n\t\t\t\t\t\t\tstatus = Status.Success;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tstatus = Status.Error;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase undefined:\n\t\t\t\t\t\t\tstatus = Status.Idle;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tstatus,\n\t\t\t\t\t\tisResolving: status === Status.Resolving,\n\t\t\t\t\t\thasStarted: status !== Status.Idle,\n\t\t\t\t\t\thasResolved:\n\t\t\t\t\t\t\tstatus === Status.Success ||\n\t\t\t\t\t\t\tstatus === Status.Error,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t} );\n\t}\n\treturn resolvers;\n} ) as EnrichedSelectors );\n","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport useQuerySelect from './use-query-select';\nimport { store as coreStore } from '../';\nimport type { Status } from './constants';\n\nexport interface EntityRecordResolution< RecordType > {\n\t/** The requested entity record */\n\trecord: RecordType | null;\n\n\t/** The edited entity record */\n\teditedRecord: Partial< RecordType >;\n\n\t/** The edits to the edited entity record */\n\tedits: Partial< RecordType >;\n\n\t/** Apply local (in-browser) edits to the edited entity record */\n\tedit: ( diff: Partial< RecordType > ) => void;\n\n\t/** Persist the edits to the server */\n\tsave: () => Promise< void >;\n\n\t/**\n\t * Is the record still being resolved?\n\t */\n\tisResolving: boolean;\n\n\t/**\n\t * Does the record have any local edits?\n\t */\n\thasEdits: boolean;\n\n\t/**\n\t * Is the record resolved by now?\n\t */\n\thasResolved: boolean;\n\n\t/** Resolution status */\n\tstatus: Status;\n}\n\nexport interface Options {\n\t/**\n\t * Whether to run the query or short-circuit and return null.\n\t *\n\t * @default true\n\t */\n\tenabled: boolean;\n}\n\nconst EMPTY_OBJECT = {};\n\n/**\n * Resolves the specified entity record.\n *\n * @since 6.1.0 Introduced in WordPress core.\n *\n * @param    kind     Kind of the entity, e.g. `root` or a `postType`. See rootEntitiesConfig in ../entities.ts for a list of available kinds.\n * @param    name     Name of the entity, e.g. `plugin` or a `post`. See rootEntitiesConfig in ../entities.ts for a list of available names.\n * @param    recordId ID of the requested entity record.\n * @param    options  Optional hook options.\n * @example\n * ```js\n * import { useEntityRecord } from '@wordpress/core-data';\n *\n * function PageTitleDisplay( { id } ) {\n *   const { record, isResolving } = useEntityRecord( 'postType', 'page', id );\n *\n *   if ( isResolving ) {\n *     return 'Loading...';\n *   }\n *\n *   return record.title;\n * }\n *\n * // Rendered in the application:\n * // <PageTitleDisplay id={ 1 } />\n * ```\n *\n * In the above example, when `PageTitleDisplay` is rendered into an\n * application, the page and the resolution details will be retrieved from\n * the store state using `getEntityRecord()`, or resolved if missing.\n *\n * @example\n * ```js\n * import { useCallback } from 'react';\n * import { useDispatch } from '@wordpress/data';\n * import { __ } from '@wordpress/i18n';\n * import { TextControl } from '@wordpress/components';\n * import { store as noticeStore } from '@wordpress/notices';\n * import { useEntityRecord } from '@wordpress/core-data';\n *\n * function PageRenameForm( { id } ) {\n * \tconst page = useEntityRecord( 'postType', 'page', id );\n * \tconst { createSuccessNotice, createErrorNotice } =\n * \t\tuseDispatch( noticeStore );\n *\n * \tconst setTitle = useCallback( ( title ) => {\n * \t\tpage.edit( { title } );\n * \t}, [ page.edit ] );\n *\n * \tif ( page.isResolving ) {\n * \t\treturn 'Loading...';\n * \t}\n *\n * \tasync function onRename( event ) {\n * \t\tevent.preventDefault();\n * \t\ttry {\n * \t\t\tawait page.save();\n * \t\t\tcreateSuccessNotice( __( 'Page renamed.' ), {\n * \t\t\t\ttype: 'snackbar',\n * \t\t\t} );\n * \t\t} catch ( error ) {\n * \t\t\tcreateErrorNotice( error.message, { type: 'snackbar' } );\n * \t\t}\n * \t}\n *\n * \treturn (\n * \t\t<form onSubmit={ onRename }>\n * \t\t\t<TextControl\n *\t\t\t\t__nextHasNoMarginBottom\n *\t\t\t\t__next40pxDefaultSize\n * \t\t\t\tlabel={ __( 'Name' ) }\n * \t\t\t\tvalue={ page.editedRecord.title }\n * \t\t\t\tonChange={ setTitle }\n * \t\t\t/>\n * \t\t\t<button type=\"submit\">{ __( 'Save' ) }</button>\n * \t\t</form>\n * \t);\n * }\n *\n * // Rendered in the application:\n * // <PageRenameForm id={ 1 } />\n * ```\n *\n * In the above example, updating and saving the page title is handled\n * via the `edit()` and `save()` mutation helpers provided by\n * `useEntityRecord()`;\n *\n * @return Entity record data.\n * @template RecordType\n */\nexport default function useEntityRecord< RecordType >(\n\tkind: string,\n\tname: string,\n\trecordId: string | number,\n\toptions: Options = { enabled: true }\n): EntityRecordResolution< RecordType > {\n\tconst { editEntityRecord, saveEditedEntityRecord } =\n\t\tuseDispatch( coreStore );\n\n\tconst mutations = useMemo(\n\t\t() => ( {\n\t\t\tedit: ( record, editOptions: any = {} ) =>\n\t\t\t\teditEntityRecord( kind, name, recordId, record, editOptions ),\n\t\t\tsave: ( saveOptions: any = {} ) =>\n\t\t\t\tsaveEditedEntityRecord( kind, name, recordId, {\n\t\t\t\t\tthrowOnError: true,\n\t\t\t\t\t...saveOptions,\n\t\t\t\t} ),\n\t\t} ),\n\t\t[ editEntityRecord, kind, name, recordId, saveEditedEntityRecord ]\n\t);\n\n\tconst { editedRecord, hasEdits, edits } = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! options.enabled ) {\n\t\t\t\treturn {\n\t\t\t\t\teditedRecord: EMPTY_OBJECT,\n\t\t\t\t\thasEdits: false,\n\t\t\t\t\tedits: EMPTY_OBJECT,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\teditedRecord: select( coreStore ).getEditedEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t),\n\t\t\t\thasEdits: select( coreStore ).hasEditsForEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t),\n\t\t\t\tedits: select( coreStore ).getEntityRecordNonTransientEdits(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ kind, name, recordId, options.enabled ]\n\t);\n\n\tconst { data: record, ...querySelectRest } = useQuerySelect(\n\t\t( query ) => {\n\t\t\tif ( ! options.enabled ) {\n\t\t\t\treturn {\n\t\t\t\t\tdata: null,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn query( coreStore ).getEntityRecord( kind, name, recordId );\n\t\t},\n\t\t[ kind, name, recordId, options.enabled ]\n\t);\n\n\treturn {\n\t\trecord,\n\t\teditedRecord,\n\t\thasEdits,\n\t\tedits,\n\t\t...querySelectRest,\n\t\t...mutations,\n\t};\n}\n\nexport function __experimentalUseEntityRecord(\n\tkind: string,\n\tname: string,\n\trecordId: any,\n\toptions: any\n) {\n\tdeprecated( `wp.data.__experimentalUseEntityRecord`, {\n\t\talternative: 'wp.data.useEntityRecord',\n\t\tsince: '6.1',\n\t} );\n\treturn useEntityRecord( kind, name, recordId, options );\n}\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport useQuerySelect from './use-query-select';\nimport { store as coreStore } from '../';\nimport type { Options } from './use-entity-record';\nimport type { Status } from './constants';\nimport { unlock } from '../lock-unlock';\nimport { getNormalizedCommaSeparable } from '../utils';\n\ninterface EntityRecordsResolution< RecordType > {\n\t/** The requested entity records */\n\trecords: RecordType[] | null;\n\n\t/**\n\t * Is the record still being resolved?\n\t */\n\tisResolving: boolean;\n\n\t/**\n\t * Is the record resolved by now?\n\t */\n\thasResolved: boolean;\n\n\t/** Resolution status */\n\tstatus: Status;\n\n\t/**\n\t * The total number of available items (if not paginated).\n\t */\n\ttotalItems: number | null;\n\n\t/**\n\t * The total number of pages.\n\t */\n\ttotalPages: number | null;\n}\n\nexport type WithPermissions< RecordType > = RecordType & {\n\tpermissions: { delete: boolean; update: boolean };\n};\n\ninterface EntityRecordsWithPermissionsResolution< RecordType >\n\textends Omit< EntityRecordsResolution< RecordType >, 'records' > {\n\t/** The requested entity records with permissions */\n\trecords: WithPermissions< RecordType >[] | null;\n}\n\nconst EMPTY_ARRAY = [];\n\n/**\n * Resolves the specified entity records.\n *\n * @since 6.1.0 Introduced in WordPress core.\n *\n * @param    kind      Kind of the entity, e.g. `root` or a `postType`. See rootEntitiesConfig in ../entities.ts for a list of available kinds.\n * @param    name      Name of the entity, e.g. `plugin` or a `post`. See rootEntitiesConfig in ../entities.ts for a list of available names.\n * @param    queryArgs Optional HTTP query description for how to fetch the data, passed to the requested API endpoint.\n * @param    options   Optional hook options.\n * @example\n * ```js\n * import { useEntityRecords } from '@wordpress/core-data';\n *\n * function PageTitlesList() {\n *   const { records, isResolving } = useEntityRecords( 'postType', 'page' );\n *\n *   if ( isResolving ) {\n *     return 'Loading...';\n *   }\n *\n *   return (\n *     <ul>\n *       {records.map(( page ) => (\n *         <li>{ page.title }</li>\n *       ))}\n *     </ul>\n *   );\n * }\n *\n * // Rendered in the application:\n * // <PageTitlesList />\n * ```\n *\n * In the above example, when `PageTitlesList` is rendered into an\n * application, the list of records and the resolution details will be retrieved from\n * the store state using `getEntityRecords()`, or resolved if missing.\n *\n * @return Entity records data.\n * @template RecordType\n */\nexport default function useEntityRecords< RecordType >(\n\tkind: string,\n\tname: string,\n\tqueryArgs: Record< string, unknown > = {},\n\toptions: Options = { enabled: true }\n): EntityRecordsResolution< RecordType > {\n\t// Serialize queryArgs to a string that can be safely used as a React dep.\n\t// We can't just pass queryArgs as one of the deps, because if it is passed\n\t// as an object literal, then it will be a different object on each call even\n\t// if the values remain the same.\n\tconst queryAsString = addQueryArgs( '', queryArgs );\n\n\tconst { data: records, ...rest } = useQuerySelect(\n\t\t( query ) => {\n\t\t\tif ( ! options.enabled ) {\n\t\t\t\treturn {\n\t\t\t\t\t// Avoiding returning a new reference on every execution.\n\t\t\t\t\tdata: EMPTY_ARRAY,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn query( coreStore ).getEntityRecords( kind, name, queryArgs );\n\t\t},\n\t\t[ kind, name, queryAsString, options.enabled ]\n\t);\n\n\tconst { totalItems, totalPages } = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! options.enabled ) {\n\t\t\t\treturn {\n\t\t\t\t\ttotalItems: null,\n\t\t\t\t\ttotalPages: null,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttotalItems: select( coreStore ).getEntityRecordsTotalItems(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tqueryArgs\n\t\t\t\t),\n\t\t\t\ttotalPages: select( coreStore ).getEntityRecordsTotalPages(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tqueryArgs\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ kind, name, queryAsString, options.enabled ]\n\t);\n\n\treturn {\n\t\trecords,\n\t\ttotalItems,\n\t\ttotalPages,\n\t\t...rest,\n\t};\n}\n\nexport function __experimentalUseEntityRecords(\n\tkind: string,\n\tname: string,\n\tqueryArgs: any,\n\toptions: any\n) {\n\tdeprecated( `wp.data.__experimentalUseEntityRecords`, {\n\t\talternative: 'wp.data.useEntityRecords',\n\t\tsince: '6.1',\n\t} );\n\treturn useEntityRecords( kind, name, queryArgs, options );\n}\n\nexport function useEntityRecordsWithPermissions< RecordType >(\n\tkind: string,\n\tname: string,\n\tqueryArgs: Record< string, unknown > = {},\n\toptions: Options = { enabled: true }\n): EntityRecordsWithPermissionsResolution< RecordType > {\n\tconst entityConfig = useSelect(\n\t\t( select ) => select( coreStore ).getEntityConfig( kind, name ),\n\t\t[ kind, name ]\n\t);\n\tconst { records: data, ...ret } = useEntityRecords(\n\t\tkind,\n\t\tname,\n\t\t{\n\t\t\t...queryArgs,\n\t\t\t// If _fields is provided, we need to include _links in the request for permission caching to work.\n\t\t\t...( queryArgs._fields\n\t\t\t\t? {\n\t\t\t\t\t\t_fields: [\n\t\t\t\t\t\t\t...new Set( [\n\t\t\t\t\t\t\t\t...( getNormalizedCommaSeparable(\n\t\t\t\t\t\t\t\t\tqueryArgs._fields\n\t\t\t\t\t\t\t\t) || [] ),\n\t\t\t\t\t\t\t\t'_links',\n\t\t\t\t\t\t\t] ),\n\t\t\t\t\t\t].join(),\n\t\t\t\t  }\n\t\t\t\t: {} ),\n\t\t},\n\t\toptions\n\t);\n\tconst ids = useMemo(\n\t\t() =>\n\t\t\tdata?.map(\n\t\t\t\t// @ts-ignore\n\t\t\t\t( record: RecordType ) => record[ entityConfig?.key ?? 'id' ]\n\t\t\t) ?? [],\n\t\t[ data, entityConfig?.key ]\n\t);\n\n\tconst permissions = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecordsPermissions } = unlock(\n\t\t\t\tselect( coreStore )\n\t\t\t);\n\t\t\treturn getEntityRecordsPermissions( kind, name, ids );\n\t\t},\n\t\t[ ids, kind, name ]\n\t);\n\n\tconst dataWithPermissions = useMemo(\n\t\t() =>\n\t\t\tdata?.map( ( record, index ) => ( {\n\t\t\t\t// @ts-ignore\n\t\t\t\t...record,\n\t\t\t\tpermissions: permissions[ index ],\n\t\t\t} ) ) ?? [],\n\t\t[ data, permissions ]\n\t);\n\n\treturn { records: dataWithPermissions, ...ret };\n}\n","/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\nimport { store as coreStore } from '../';\nimport { Status } from './constants';\nimport useQuerySelect from './use-query-select';\n\ninterface GlobalResourcePermissionsResolution {\n\t/** Can the current user create new resources of this type? */\n\tcanCreate: boolean;\n}\ninterface SpecificResourcePermissionsResolution {\n\t/** Can the current user update resources of this type? */\n\tcanUpdate: boolean;\n\t/** Can the current user delete resources of this type? */\n\tcanDelete: boolean;\n}\ninterface ResolutionDetails {\n\t/** Resolution status */\n\tstatus: Status;\n\t/**\n\t * Is the data still being resolved?\n\t */\n\tisResolving: boolean;\n}\n\n/**\n * Is the data resolved by now?\n */\ntype HasResolved = boolean;\n\ntype ResourcePermissionsResolution< IdType > = [\n\tHasResolved,\n\tResolutionDetails &\n\t\tGlobalResourcePermissionsResolution &\n\t\t( IdType extends void ? SpecificResourcePermissionsResolution : {} ),\n];\n\ntype EntityResource = { kind: string; name: string; id?: string | number };\n\nfunction useResourcePermissions< IdType = void >(\n\tresource: string,\n\tid?: IdType\n): ResourcePermissionsResolution< IdType >;\n\nfunction useResourcePermissions< IdType = void >(\n\tresource: EntityResource,\n\tid?: never\n): ResourcePermissionsResolution< IdType >;\n\n/**\n * Resolves resource permissions.\n *\n * @since 6.1.0 Introduced in WordPress core.\n *\n * @param    resource Entity resource to check. Accepts entity object `{ kind: 'postType', name: 'attachment', id: 1 }`\n *                    or REST base as a string - `media`.\n * @param    id       Optional ID of the resource to check, e.g. 10. Note: This argument is discouraged\n *                    when using an entity object as a resource to check permissions and will be ignored.\n *\n * @example\n * ```js\n * import { useResourcePermissions } from '@wordpress/core-data';\n *\n * function PagesList() {\n *   const { canCreate, isResolving } = useResourcePermissions( { kind: 'postType', name: 'page' } );\n *\n *   if ( isResolving ) {\n *     return 'Loading ...';\n *   }\n *\n *   return (\n *     <div>\n *       {canCreate ? (<button>+ Create a new page</button>) : false}\n *       // ...\n *     </div>\n *   );\n * }\n *\n * // Rendered in the application:\n * // <PagesList />\n * ```\n *\n * @example\n * ```js\n * import { useResourcePermissions } from '@wordpress/core-data';\n *\n * function Page({ pageId }) {\n *   const {\n *     canCreate,\n *     canUpdate,\n *     canDelete,\n *     isResolving\n *   } = useResourcePermissions( { kind: 'postType', name: 'page', id: pageId } );\n *\n *   if ( isResolving ) {\n *     return 'Loading ...';\n *   }\n *\n *   return (\n *     <div>\n *       {canCreate ? (<button>+ Create a new page</button>) : false}\n *       {canUpdate ? (<button>Edit page</button>) : false}\n *       {canDelete ? (<button>Delete page</button>) : false}\n *       // ...\n *     </div>\n *   );\n * }\n *\n * // Rendered in the application:\n * // <Page pageId={ 15 } />\n * ```\n *\n * In the above example, when `PagesList` is rendered into an\n * application, the appropriate permissions and the resolution details will be retrieved from\n * the store state using `canUser()`, or resolved if missing.\n *\n * @return Entity records data.\n * @template IdType\n */\nfunction useResourcePermissions< IdType = void >(\n\tresource: string | EntityResource,\n\tid?: IdType\n): ResourcePermissionsResolution< IdType > {\n\t// Serialize `resource` to a string that can be safely used as a React dep.\n\t// We can't just pass `resource` as one of the deps, because if it is passed\n\t// as an object literal, then it will be a different object on each call even\n\t// if the values remain the same.\n\tconst isEntity = typeof resource === 'object';\n\tconst resourceAsString = isEntity ? JSON.stringify( resource ) : resource;\n\n\tif ( isEntity && typeof id !== 'undefined' ) {\n\t\twarning(\n\t\t\t`When 'resource' is an entity object, passing 'id' as a separate argument isn't supported.`\n\t\t);\n\t}\n\n\treturn useQuerySelect(\n\t\t( resolve ) => {\n\t\t\tconst hasId = isEntity ? !! resource.id : !! id;\n\t\t\tconst { canUser } = resolve( coreStore );\n\t\t\tconst create = canUser(\n\t\t\t\t'create',\n\t\t\t\tisEntity\n\t\t\t\t\t? { kind: resource.kind, name: resource.name }\n\t\t\t\t\t: resource\n\t\t\t);\n\n\t\t\tif ( ! hasId ) {\n\t\t\t\tconst read = canUser( 'read', resource );\n\n\t\t\t\tconst isResolving = create.isResolving || read.isResolving;\n\t\t\t\tconst hasResolved = create.hasResolved && read.hasResolved;\n\t\t\t\tlet status = Status.Idle;\n\t\t\t\tif ( isResolving ) {\n\t\t\t\t\tstatus = Status.Resolving;\n\t\t\t\t} else if ( hasResolved ) {\n\t\t\t\t\tstatus = Status.Success;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tstatus,\n\t\t\t\t\tisResolving,\n\t\t\t\t\thasResolved,\n\t\t\t\t\tcanCreate: create.hasResolved && create.data,\n\t\t\t\t\tcanRead: read.hasResolved && read.data,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst read = canUser( 'read', resource, id );\n\t\t\tconst update = canUser( 'update', resource, id );\n\t\t\tconst _delete = canUser( 'delete', resource, id );\n\t\t\tconst isResolving =\n\t\t\t\tread.isResolving ||\n\t\t\t\tcreate.isResolving ||\n\t\t\t\tupdate.isResolving ||\n\t\t\t\t_delete.isResolving;\n\t\t\tconst hasResolved =\n\t\t\t\tread.hasResolved &&\n\t\t\t\tcreate.hasResolved &&\n\t\t\t\tupdate.hasResolved &&\n\t\t\t\t_delete.hasResolved;\n\n\t\t\tlet status = Status.Idle;\n\t\t\tif ( isResolving ) {\n\t\t\t\tstatus = Status.Resolving;\n\t\t\t} else if ( hasResolved ) {\n\t\t\t\tstatus = Status.Success;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tstatus,\n\t\t\t\tisResolving,\n\t\t\t\thasResolved,\n\t\t\t\tcanRead: hasResolved && read.data,\n\t\t\t\tcanCreate: hasResolved && create.data,\n\t\t\t\tcanUpdate: hasResolved && update.data,\n\t\t\t\tcanDelete: hasResolved && _delete.data,\n\t\t\t};\n\t\t},\n\t\t[ resourceAsString, id ]\n\t);\n}\n\nexport default useResourcePermissions;\n\nexport function __experimentalUseResourcePermissions(\n\tresource: string,\n\tid?: unknown\n) {\n\tdeprecated( `wp.data.__experimentalUseResourcePermissions`, {\n\t\talternative: 'wp.data.useResourcePermissions',\n\t\tsince: '6.1',\n\t} );\n\treturn useResourcePermissions( resource, id );\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"warning\"];","/**\n * WordPress dependencies\n */\nimport { useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { EntityContext } from '../entity-context';\n\n/**\n * Hook that returns the ID for the nearest\n * provided entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} name The entity name.\n */\nexport default function useEntityId( kind, name ) {\n\tconst context = useContext( EntityContext );\n\treturn context?.[ kind ]?.[ name ];\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * WordPress dependencies\n */\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\n\n// TODO: The following line should have been:\n//\n//   const unlockedApis = unlock( blockEditorPrivateApis );\n//\n// But there are hidden circular dependencies in RNMobile code, specifically in\n// certain native components in the `components` package that depend on\n// `block-editor`. What follows is a workaround that defers the `unlock` call\n// to prevent native code from failing.\n//\n// Fix once https://github.com/WordPress/gutenberg/issues/52692 is closed.\nlet unlockedApis;\n\nconst cache = new WeakMap();\n\nexport default function getRichTextValuesCached( block ) {\n\tif ( ! unlockedApis ) {\n\t\tunlockedApis = unlock( blockEditorPrivateApis );\n\t}\n\n\tif ( ! cache.has( block ) ) {\n\t\tconst values = unlockedApis.getRichTextValues( [ block ] );\n\t\tcache.set( block, values );\n\t}\n\treturn cache.get( block );\n}\n","/**\n * Internal dependencies\n */\nimport getRichTextValuesCached from './get-rich-text-values-cached';\n\nconst cache = new WeakMap();\n\nfunction getBlockFootnotesOrder( block ) {\n\tif ( ! cache.has( block ) ) {\n\t\tconst order = [];\n\t\tfor ( const value of getRichTextValuesCached( block ) ) {\n\t\t\tif ( ! value ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// replacements is a sparse array, use forEach to skip empty slots.\n\t\t\tvalue.replacements.forEach( ( { type, attributes } ) => {\n\t\t\t\tif ( type === 'core/footnote' ) {\n\t\t\t\t\torder.push( attributes[ 'data-fn' ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\tcache.set( block, order );\n\t}\n\n\treturn cache.get( block );\n}\n\nexport default function getFootnotesOrder( blocks ) {\n\t// We can only separate getting order from blocks at the root level. For\n\t// deeper inner blocks, this will not work since it's possible to have both\n\t// inner blocks and block attributes, so order needs to be computed from the\n\t// Edit functions as a whole.\n\treturn blocks.flatMap( getBlockFootnotesOrder );\n}\n","/**\n * WordPress dependencies\n */\nimport { RichTextData, create, toHTMLString } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport getFootnotesOrder from './get-footnotes-order';\n\nlet oldFootnotes = {};\n\nexport function updateFootnotesFromMeta( blocks, meta ) {\n\tconst output = { blocks };\n\tif ( ! meta ) {\n\t\treturn output;\n\t}\n\n\t// If meta.footnotes is empty, it means the meta is not registered.\n\tif ( meta.footnotes === undefined ) {\n\t\treturn output;\n\t}\n\n\tconst newOrder = getFootnotesOrder( blocks );\n\n\tconst footnotes = meta.footnotes ? JSON.parse( meta.footnotes ) : [];\n\tconst currentOrder = footnotes.map( ( fn ) => fn.id );\n\n\tif ( currentOrder.join( '' ) === newOrder.join( '' ) ) {\n\t\treturn output;\n\t}\n\n\tconst newFootnotes = newOrder.map(\n\t\t( fnId ) =>\n\t\t\tfootnotes.find( ( fn ) => fn.id === fnId ) ||\n\t\t\toldFootnotes[ fnId ] || {\n\t\t\t\tid: fnId,\n\t\t\t\tcontent: '',\n\t\t\t}\n\t);\n\n\tfunction updateAttributes( attributes ) {\n\t\t// Only attempt to update attributes, if attributes is an object.\n\t\tif (\n\t\t\t! attributes ||\n\t\t\tArray.isArray( attributes ) ||\n\t\t\ttypeof attributes !== 'object'\n\t\t) {\n\t\t\treturn attributes;\n\t\t}\n\n\t\tattributes = { ...attributes };\n\n\t\tfor ( const key in attributes ) {\n\t\t\tconst value = attributes[ key ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\tattributes[ key ] = value.map( updateAttributes );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// To do, remove support for string values?\n\t\t\tif (\n\t\t\t\ttypeof value !== 'string' &&\n\t\t\t\t! ( value instanceof RichTextData )\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst richTextValue =\n\t\t\t\ttypeof value === 'string'\n\t\t\t\t\t? RichTextData.fromHTMLString( value )\n\t\t\t\t\t: new RichTextData( value );\n\n\t\t\tlet hasFootnotes = false;\n\n\t\t\trichTextValue.replacements.forEach( ( replacement ) => {\n\t\t\t\tif ( replacement.type === 'core/footnote' ) {\n\t\t\t\t\tconst id = replacement.attributes[ 'data-fn' ];\n\t\t\t\t\tconst index = newOrder.indexOf( id );\n\t\t\t\t\t// The innerHTML contains the count wrapped in a link.\n\t\t\t\t\tconst countValue = create( {\n\t\t\t\t\t\thtml: replacement.innerHTML,\n\t\t\t\t\t} );\n\t\t\t\t\tcountValue.text = String( index + 1 );\n\t\t\t\t\tcountValue.formats = Array.from(\n\t\t\t\t\t\t{ length: countValue.text.length },\n\t\t\t\t\t\t() => countValue.formats[ 0 ]\n\t\t\t\t\t);\n\t\t\t\t\tcountValue.replacements = Array.from(\n\t\t\t\t\t\t{ length: countValue.text.length },\n\t\t\t\t\t\t() => countValue.replacements[ 0 ]\n\t\t\t\t\t);\n\t\t\t\t\treplacement.innerHTML = toHTMLString( {\n\t\t\t\t\t\tvalue: countValue,\n\t\t\t\t\t} );\n\t\t\t\t\thasFootnotes = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( hasFootnotes ) {\n\t\t\t\tattributes[ key ] =\n\t\t\t\t\ttypeof value === 'string'\n\t\t\t\t\t\t? richTextValue.toHTMLString()\n\t\t\t\t\t\t: richTextValue;\n\t\t\t}\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tfunction updateBlocksAttributes( __blocks ) {\n\t\treturn __blocks.map( ( block ) => {\n\t\t\treturn {\n\t\t\t\t...block,\n\t\t\t\tattributes: updateAttributes( block.attributes ),\n\t\t\t\tinnerBlocks: updateBlocksAttributes( block.innerBlocks ),\n\t\t\t};\n\t\t} );\n\t}\n\n\t// We need to go through all block attributes deeply and update the\n\t// footnote anchor numbering (textContent) to match the new order.\n\tconst newBlocks = updateBlocksAttributes( blocks );\n\n\toldFootnotes = {\n\t\t...oldFootnotes,\n\t\t...footnotes.reduce( ( acc, fn ) => {\n\t\t\tif ( ! newOrder.includes( fn.id ) ) {\n\t\t\t\tacc[ fn.id ] = fn;\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {} ),\n\t};\n\n\treturn {\n\t\tmeta: {\n\t\t\t...meta,\n\t\t\tfootnotes: JSON.stringify( newFootnotes ),\n\t\t},\n\t\tblocks: newBlocks,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { useCallback, useMemo } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { parse, __unstableSerializeAndClean } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from '../name';\nimport useEntityId from './use-entity-id';\nimport { updateFootnotesFromMeta } from '../footnotes';\n\nconst EMPTY_ARRAY = [];\nconst parsedBlocksCache = new WeakMap();\n\n/**\n * Hook that returns block content getters and setters for\n * the nearest provided entity of the specified type.\n *\n * The return value has the shape `[ blocks, onInput, onChange ]`.\n * `onInput` is for block changes that don't create undo levels\n * or dirty the post, non-persistent changes, and `onChange` is for\n * persistent changes. They map directly to the props of a\n * `BlockEditorProvider` and are intended to be used with it,\n * or similar components or hooks.\n *\n * @param {string} kind         The entity kind.\n * @param {string} name         The entity name.\n * @param {Object} options\n * @param {string} [options.id] An entity ID to use instead of the context-provided one.\n *\n * @return {[unknown[], Function, Function]} The block array and setters.\n */\nexport default function useEntityBlockEditor( kind, name, { id: _id } = {} ) {\n\tconst providerId = useEntityId( kind, name );\n\tconst id = _id ?? providerId;\n\tconst { getEntityRecord, getEntityRecordEdits } = useSelect( STORE_NAME );\n\tconst { content, editedBlocks, meta } = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! id ) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tconst { getEditedEntityRecord } = select( STORE_NAME );\n\t\t\tconst editedRecord = getEditedEntityRecord( kind, name, id );\n\t\t\treturn {\n\t\t\t\teditedBlocks: editedRecord.blocks,\n\t\t\t\tcontent: editedRecord.content,\n\t\t\t\tmeta: editedRecord.meta,\n\t\t\t};\n\t\t},\n\t\t[ kind, name, id ]\n\t);\n\tconst { __unstableCreateUndoLevel, editEntityRecord } =\n\t\tuseDispatch( STORE_NAME );\n\n\tconst blocks = useMemo( () => {\n\t\tif ( ! id ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ( editedBlocks ) {\n\t\t\treturn editedBlocks;\n\t\t}\n\n\t\tif ( ! content || typeof content !== 'string' ) {\n\t\t\treturn EMPTY_ARRAY;\n\t\t}\n\n\t\t// If there's an edit, cache the parsed blocks by the edit.\n\t\t// If not, cache by the original entity record.\n\t\tconst edits = getEntityRecordEdits( kind, name, id );\n\t\tconst isUnedited = ! edits || ! Object.keys( edits ).length;\n\t\tconst cackeKey = isUnedited ? getEntityRecord( kind, name, id ) : edits;\n\t\tlet _blocks = parsedBlocksCache.get( cackeKey );\n\n\t\tif ( ! _blocks ) {\n\t\t\t_blocks = parse( content );\n\t\t\tparsedBlocksCache.set( cackeKey, _blocks );\n\t\t}\n\n\t\treturn _blocks;\n\t}, [\n\t\tkind,\n\t\tname,\n\t\tid,\n\t\teditedBlocks,\n\t\tcontent,\n\t\tgetEntityRecord,\n\t\tgetEntityRecordEdits,\n\t] );\n\n\tconst onChange = useCallback(\n\t\t( newBlocks, options ) => {\n\t\t\tconst noChange = blocks === newBlocks;\n\t\t\tif ( noChange ) {\n\t\t\t\treturn __unstableCreateUndoLevel( kind, name, id );\n\t\t\t}\n\t\t\tconst { selection, ...rest } = options;\n\n\t\t\t// We create a new function here on every persistent edit\n\t\t\t// to make sure the edit makes the post dirty and creates\n\t\t\t// a new undo level.\n\t\t\tconst edits = {\n\t\t\t\tselection,\n\t\t\t\tcontent: ( { blocks: blocksForSerialization = [] } ) =>\n\t\t\t\t\t__unstableSerializeAndClean( blocksForSerialization ),\n\t\t\t\t...updateFootnotesFromMeta( newBlocks, meta ),\n\t\t\t};\n\n\t\t\teditEntityRecord( kind, name, id, edits, {\n\t\t\t\tisCached: false,\n\t\t\t\t...rest,\n\t\t\t} );\n\t\t},\n\t\t[\n\t\t\tkind,\n\t\t\tname,\n\t\t\tid,\n\t\t\tblocks,\n\t\t\tmeta,\n\t\t\t__unstableCreateUndoLevel,\n\t\t\teditEntityRecord,\n\t\t]\n\t);\n\n\tconst onInput = useCallback(\n\t\t( newBlocks, options ) => {\n\t\t\tconst { selection, ...rest } = options;\n\t\t\tconst footnotesChanges = updateFootnotesFromMeta( newBlocks, meta );\n\t\t\tconst edits = { selection, ...footnotesChanges };\n\n\t\t\teditEntityRecord( kind, name, id, edits, {\n\t\t\t\tisCached: true,\n\t\t\t\t...rest,\n\t\t\t} );\n\t\t},\n\t\t[ kind, name, id, meta, editEntityRecord ]\n\t);\n\n\treturn [ blocks, onInput, onChange ];\n}\n","/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from '../name';\nimport useEntityId from './use-entity-id';\n\n/**\n * Hook that returns the value and a setter for the\n * specified property of the nearest provided\n * entity of the specified type.\n *\n * @param {string}        kind  The entity kind.\n * @param {string}        name  The entity name.\n * @param {string}        prop  The property name.\n * @param {number|string} [_id] An entity ID to use instead of the context-provided one.\n *\n * @return {[*, Function, *]} An array where the first item is the\n *                            property value, the second is the\n *                            setter and the third is the full value\n * \t\t\t\t\t\t\t  object from REST API containing more\n * \t\t\t\t\t\t\t  information like `raw`, `rendered` and\n * \t\t\t\t\t\t\t  `protected` props.\n */\nexport default function useEntityProp( kind, name, prop, _id ) {\n\tconst providerId = useEntityId( kind, name );\n\tconst id = _id ?? providerId;\n\n\tconst { value, fullValue } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEditedEntityRecord } =\n\t\t\t\tselect( STORE_NAME );\n\t\t\tconst record = getEntityRecord( kind, name, id ); // Trigger resolver.\n\t\t\tconst editedRecord = getEditedEntityRecord( kind, name, id );\n\t\t\treturn record && editedRecord\n\t\t\t\t? {\n\t\t\t\t\t\tvalue: editedRecord[ prop ],\n\t\t\t\t\t\tfullValue: record[ prop ],\n\t\t\t\t  }\n\t\t\t\t: {};\n\t\t},\n\t\t[ kind, name, id, prop ]\n\t);\n\tconst { editEntityRecord } = useDispatch( STORE_NAME );\n\tconst setValue = useCallback(\n\t\t( newValue ) => {\n\t\t\teditEntityRecord( kind, name, id, {\n\t\t\t\t[ prop ]: newValue,\n\t\t\t} );\n\t\t},\n\t\t[ editEntityRecord, kind, name, id, prop ]\n\t);\n\n\treturn [ value, setValue, fullValue ];\n}\n","/**\n * Internal dependencies\n */\nimport { useEntityRecordsWithPermissions } from './hooks/use-entity-records';\nimport { RECEIVE_INTERMEDIATE_RESULTS } from './utils';\nimport { lock } from './lock-unlock';\n\nexport const privateApis = {};\nlock( privateApis, {\n\tuseEntityRecordsWithPermissions,\n\tRECEIVE_INTERMEDIATE_RESULTS,\n} );\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as privateSelectors from './private-selectors';\nimport * as actions from './actions';\nimport * as privateActions from './private-actions';\nimport * as resolvers from './resolvers';\nimport createLocksActions from './locks/actions';\nimport {\n\trootEntitiesConfig,\n\tadditionalEntityConfigLoaders,\n\tgetMethodName,\n} from './entities';\nimport { STORE_NAME } from './name';\nimport { unlock } from './lock-unlock';\nimport { dynamicActions, dynamicSelectors } from './dynamic-entities';\nimport logEntityDeprecation from './utils/log-entity-deprecation';\n\n// The entity selectors/resolvers and actions are shortcuts to their generic equivalents\n// (getEntityRecord, getEntityRecords, updateEntityRecord, updateEntityRecords)\n// Instead of getEntityRecord, the consumer could use more user-friendly named selector: getPostType, getTaxonomy...\n// The \"kind\" and the \"name\" of the entity are combined to generate these shortcuts.\nconst entitiesConfig = [\n\t...rootEntitiesConfig,\n\t...additionalEntityConfigLoaders.filter( ( config ) => !! config.name ),\n];\n\nconst entitySelectors = entitiesConfig.reduce( ( result, entity ) => {\n\tconst { kind, name, plural } = entity;\n\n\tconst getEntityRecordMethodName = getMethodName( kind, name );\n\tresult[ getEntityRecordMethodName ] = ( state, key, query ) => {\n\t\tlogEntityDeprecation( kind, name, getEntityRecordMethodName, {\n\t\t\tisShorthandSelector: true,\n\t\t\talternativeFunctionName: 'getEntityRecord',\n\t\t} );\n\t\treturn selectors.getEntityRecord( state, kind, name, key, query );\n\t};\n\n\tif ( plural ) {\n\t\tconst getEntityRecordsMethodName = getMethodName( kind, plural, 'get' );\n\t\tresult[ getEntityRecordsMethodName ] = ( state, query ) => {\n\t\t\tlogEntityDeprecation( kind, name, getEntityRecordsMethodName, {\n\t\t\t\tisShorthandSelector: true,\n\t\t\t\talternativeFunctionName: 'getEntityRecords',\n\t\t\t} );\n\t\t\treturn selectors.getEntityRecords( state, kind, name, query );\n\t\t};\n\t}\n\treturn result;\n}, {} );\n\nconst entityResolvers = entitiesConfig.reduce( ( result, entity ) => {\n\tconst { kind, name, plural } = entity;\n\tconst getEntityRecordMethodName = getMethodName( kind, name );\n\tresult[ getEntityRecordMethodName ] = ( key, query ) => {\n\t\tlogEntityDeprecation( kind, name, getEntityRecordMethodName, {\n\t\t\tisShorthandSelector: true,\n\t\t\talternativeFunctionName: 'getEntityRecord',\n\t\t} );\n\t\treturn resolvers.getEntityRecord( kind, name, key, query );\n\t};\n\n\tif ( plural ) {\n\t\tconst getEntityRecordsMethodName = getMethodName( kind, plural, 'get' );\n\t\tresult[ getEntityRecordsMethodName ] = ( ...args ) => {\n\t\t\tlogEntityDeprecation( kind, plural, getEntityRecordsMethodName, {\n\t\t\t\tisShorthandSelector: true,\n\t\t\t\talternativeFunctionName: 'getEntityRecords',\n\t\t\t} );\n\t\t\treturn resolvers.getEntityRecords( kind, name, ...args );\n\t\t};\n\t\tresult[ getEntityRecordsMethodName ].shouldInvalidate = ( action ) =>\n\t\t\tresolvers.getEntityRecords.shouldInvalidate( action, kind, name );\n\t}\n\treturn result;\n}, {} );\n\nconst entityActions = entitiesConfig.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\n\tconst saveEntityRecordMethodName = getMethodName( kind, name, 'save' );\n\tresult[ saveEntityRecordMethodName ] = ( record, options ) => {\n\t\tlogEntityDeprecation( kind, name, saveEntityRecordMethodName, {\n\t\t\tisShorthandSelector: true,\n\t\t\talternativeFunctionName: 'saveEntityRecord',\n\t\t} );\n\t\treturn actions.saveEntityRecord( kind, name, record, options );\n\t};\n\n\tconst deleteEntityRecordMethodName = getMethodName( kind, name, 'delete' );\n\tresult[ deleteEntityRecordMethodName ] = ( key, query, options ) => {\n\t\tlogEntityDeprecation( kind, name, deleteEntityRecordMethodName, {\n\t\t\tisShorthandSelector: true,\n\t\t\talternativeFunctionName: 'deleteEntityRecord',\n\t\t} );\n\t\treturn actions.deleteEntityRecord( kind, name, key, query, options );\n\t};\n\n\treturn result;\n}, {} );\n\nconst storeConfig = () => ( {\n\treducer,\n\tactions: {\n\t\t...dynamicActions,\n\t\t...actions,\n\t\t...entityActions,\n\t\t...createLocksActions(),\n\t},\n\tselectors: {\n\t\t...dynamicSelectors,\n\t\t...selectors,\n\t\t...entitySelectors,\n\t},\n\tresolvers: { ...resolvers, ...entityResolvers },\n} );\n\n/**\n * Store definition for the code data namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig() );\nunlock( store ).registerPrivateSelectors( privateSelectors );\nunlock( store ).registerPrivateActions( privateActions );\nregister( store ); // Register store after unlocking private selectors to allow resolvers to use them.\n\nexport { default as EntityProvider } from './entity-provider';\nexport * from './entity-provider';\nexport * from './entity-types';\nexport * from './fetch';\nexport * from './hooks';\nexport * from './private-apis';\n","/**\n * Internal dependencies\n */\nimport createLocks from './engine';\n\nexport default function createLocksActions() {\n\tconst locks = createLocks();\n\n\tfunction __unstableAcquireStoreLock( store, path, { exclusive } ) {\n\t\treturn () => locks.acquire( store, path, exclusive );\n\t}\n\n\tfunction __unstableReleaseStoreLock( lock ) {\n\t\treturn () => locks.release( lock );\n\t}\n\n\treturn { __unstableAcquireStoreLock, __unstableReleaseStoreLock };\n}\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","getValuePair","instance","_map","_arrayTreeMap","_objectTreeMap","has","get","properties","keys","sort","map","Array","isArray","property","undefined","propertyValue","valuePair","delete","set","EquivalentKeyMap","iterable","Constructor","TypeError","_classCallCheck","this","clear","iterablePairs","forEach","value","push","protoProps","previousValuePair","callback","_this","thisArg","arguments","call","Map","size","module","exports","equal","a","b","entries","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","toString","hasOwnProperty","DIFF_DELETE","DIFF_INSERT","DIFF_EQUAL","diff_main","text1","text2","cursor_pos","cleanup","_fix_unicode","editdiff","oldText","newText","oldRange","index","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","diff_halfMatch_","mid_common","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","diff_cleanupMerge","changes","equalities","equalitiesLength","lastequality","pointer","length_insertions1","length_deletions1","length_insertions2","length_deletions2","max","splice","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","match","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupSemanticLossless","deletion","insertion","overlap_length1","diff_commonOverlap_","overlap_length2","diff_cleanupSemantic","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","text_length","best","pattern","found","pointerend","is_surrogate_pair_end","fix_unicode","count_delete","count_insert","text_delete","text_insert","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","boolTag","dateTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","g","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","addMapEntry","pair","addSetEntry","add","arrayReduce","array","iteratee","accumulator","initAccum","isHostObject","result","e","mapToArray","overArg","func","transform","arg","setToArray","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","objectToString","reIsNative","replace","Buffer","Uint8Array","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Promise","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","Hash","entry","ListCache","MapCache","Stack","__data__","assignValue","object","objValue","eq","assocIndexOf","baseClone","isDeep","isFull","customizer","stack","isObject","isArr","input","initCloneArray","copyArray","tag","getTag","isFunc","buffer","copy","cloneBuffer","isPrototype","proto","initCloneObject","copyObject","getSymbols","copySymbols","baseAssign","cloneFunc","symbol","Ctor","cloneArrayBuffer","dataView","byteOffset","byteLength","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","initCloneByTag","stacked","keysFunc","symbolsFunc","values","offset","arrayPush","baseGetAllKeys","getAllKeys","arrayEach","subValue","arrayBuffer","newValue","getMapData","type","data","getValue","isFunction","test","baseIsNative","cache","pairs","LARGE_ARRAY_SIZE","isIndex","other","resolve","ctorString","isArrayLike","isLength","inherited","isObjectLike","isArrayLikeObject","isArguments","baseTimes","String","skipIndexes","arrayLikeKeys","baseKeys","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","arrayTag","asyncTag","errorTag","nullTag","proxyTag","undefinedTag","typedArrayTags","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","predicate","nativeObjectToString","symToStringTag","toStringTag","SetCache","baseGetTag","isOwn","unmasked","getRawTag","baseIsArguments","baseIsEqual","bitmask","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","name","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","arrLength","othLength","seen","arrValue","othIndex","isMasked","resIndex","arrayFilter","baseUnary","isArg","isBuff","isType","AttributeMap","compose","keepNull","attributes","cloneDeep","reduce","attrs","isEqual","invert","attr","base","baseInverted","memo","priority","Op","OpIterator","NULL_CHARACTER","fromCharCode","getEmbedTypeAndData","Error","embedType","Delta","ops","registerEmbed","handler","handlers","unregisterEmbed","getHandler","insert","newOp","retain","lastOp","chop","filter","partition","passed","failed","op","initialValue","changeLength","elem","start","end","Infinity","iter","hasNext","nextOp","next","thisIter","otherIter","firstOther","peek","firstLeft","peekType","peekLength","thisOp","otherOp","action","thisData","otherData","rest","strings","join","retDelta","diffResult","component","opLength","eachLine","newline","line","inverted","baseIndex","baseOp","opData","baseOpData","transformPosition","transformedData","nextType","retOp","substr","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","definition","o","globalThis","window","prop","r","nmd","paths","children","mergeHistoryChanges","changes1","changes2","newChanges","to","addHistoryChangesIntoRecord","record","existingChangesIndex","findIndex","recordIdentifier","isShallowEqual","nextRecord","isMatch","reducer","state","replacer","actionProperty","nextKeyState","__assign","assign","t","s","p","apply","lowerCase","toLowerCase","SuppressedError","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","noCase","options","splitRegexp","stripRegexp","delimiter","split","re","capitalCaseTransform","toUpperCase","upperCaseFirst","pascalCaseTransform","firstChar","lowerChars","pascalCase","from","hasProperty","EqualityTraitSymbol","freeze","equalityDeep","randomUUID","crypto","bind","getRandomValues","rnds8","rng","byteToHex","buf","rnds","random","arr","unsafeStringify","abs","imul","round","log10","log2","log","sqrt","Number","isNaN","pow","sign","serializableBlocksCache","makeBlockAttributesSerializable","newAttributes","RichTextData","makeBlocksSerializable","blocks","block","blockAsJson","Y","toJSON","innerBlocks","validationIssues","originalContent","areBlocksEqual","gblock","yblock","yblockAsJson","overwrites","clientId","res","fun","inners","yinners","every","createNewYAttributeMap","blockName","attributeName","attributeValue","createNewYAttributeValue","_attributeValue$toStr","isRichTextAttribute","Text","createNewYBlock","innerBlock","mergeCrdtBlocks","yblocks","incomingBlocks","lastSelection","_origin","_serializableBlocksCa","_blocksToSync$length","blocksToSync","some","blob","shouldBlockBeSynced","numOfCommonEntries","math","left","right","numOfUpdatesNeeded","numOfInsertionsNeeded","numOfDeletionsNeeded","currentAttributes","mergeRichTextUpdate","_attrValue","attrName","_v","newBlock","knownClientIds","uuidv4","cachedRichTextAttributes","_cachedRichTextAttrib","blockType","getBlockTypes","richTextAttributeMap","_blockType$attributes","localDoc","blockYText","updatedValue","doc","Doc","localYText","getText","currentValueAsDelta","toDelta","updatedValueAsDelta","deltaDiff","applyDelta","getRawValue","raw","haveValuesChanged","currentValue","mergeValue","setValue","metaDecisionCache","shouldSyncMetaForPostType","metaKey","postType","slug","decisionMap","shouldSync","Boolean","applyFilters","startsWith","DEFAULT_ENTITY_KEY","POST_RAW_ATTRIBUTES","rootEntitiesConfig","label","__","kind","baseURL","baseURLParams","_fields","plural","context","rawAttributes","supportsPagination","transientEdits","getTitle","getRevisionsUrl","parentId","revisionId","deprecatedEntities","media","since","alternative","additionalEntityConfigLoaders","loadEntities","async","postTypes","apiFetch","path","_postType$rest_namesp","isTemplate","includes","namespace","rest_namespace","syncedProperties","supports","feature","isSupported","getSyncedPropertiesForPostType","rest_base","selection","mergedEdits","meta","_record$slug","title","rendered","__unstablePrePersist","prePersistPostType","__unstable_rest_base","syncConfig","enabled","editor","applyChangesToCRDTDoc","crdtDoc","origin","ydoc","rawRecord","ymap","getMap","CRDT_RECORD_MAP_KEY","_changes$selection$se","_ref","currentBlocks","metaMap","metaValue","updatedMetaValue","newStatus","status","rawNewValue","selectionStart","applyPostChangesToCRDTDoc","getChangesFromCRDTDoc","fromEntries","currentDateIsFloating","modified","allowedMeta","getPostChangesFromCRDTDoc","getInitialObjectData","parse","content","getInitialPostObjectData","getObjectId","objectType","awareness","crdtPersistence","undo","revisionKey","taxonomies","taxonomy","_taxonomy$rest_namesp","_site$schema$properti","entity","site","method","labels","schema","persistedRecord","edits","newEdits","getMethodName","prefix","fn","query","parts","stableKey","page","perPage","fields","include","_getNormalizedCommaSe","_getNormalizedCommaSe2","getNormalizedCommaSeparable","addQueryArgs","getContextFromAction","getQueryParts","getMergedItemIds","itemIds","nextItemIds","_itemIds$length","nextItemIdsStartIndex","mergedItemIds","isInNextItemsRange","removeEntitiesById","entities","ids","itemId","isInteger","receiveQueries","ifMatchingAction","replaceAction","onSubKey","items","item","combineReducers","nextItem","hasChanges","fastDeepEqual","conservativeMapItem","contextState","itemIsComplete","queryParts","isCompleteQuery","queries","removedItems","queryGroup","contextQueries","queryItems","queryId","withMultiEntityRecordEdits","newState","recordId","acc","entityConfig","queriedData","queriedDataReducer","_action$query$context","nextState","nextEdits","_record$key$raw","persistedEdits","saving","pending","error","isAutosave","deleting","revisions","recordKey","users","byId","newUsers","user","queryID","currentTheme","stylesheet","currentGlobalStylesId","currentUser","themeGlobalStyleVariations","variations","themeBaseGlobalStyles","globalStyles","themeGlobalStyleRevisions","currentId","newConfig","entitiesConfig","config","entitiesDataReducer","entitiesByKind","subEntities","newData","records","editsReference","undoManager","history","stagedRecord","dropPendingRedos","appendStagedRecordToLatestHistoryRecord","_history$index","latestRecord","addRecord","isStaged","isEmpty","isRecordEmpty","undoRecord","redo","redoRecord","hasUndo","hasRedo","createUndoManager","embedPreviews","url","preview","userPermissions","isAllowed","permissions","autosaves","postId","autosavesData","blockPatterns","patterns","blockPatternCategories","categories","userPatternCategories","patternCategories","navigationFallbackId","fallbackId","defaultTemplates","JSON","stringify","templateId","registeredPostMeta","STORE_NAME","setNestedValue","normalizedPath","idx","queriedItemsCacheByState","getQueriedItems","createSelector","queriedItemsCache","queriedItems","startOffset","endOffset","filteredItem","f","field","fieldName","getQueriedItemsUncached","getQueriedTotalItems","_state$queries$contex","totalItems","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","loggedAlready","logEntityDeprecation","functionName","alternativeFunctionName","isShorthandSelector","deprecation","alternativeMessage","deprecated","setTimeout","syncProvider","getSyncProvider","fallbackNoOpSyncProvider","SyncProvider","__experimentalEnableSync","getWebRTCSyncProvider","getUndoManager","_getSyncProvider$getU","getNavigationFallbackId","getBlockPatternsForPostType","createRegistrySelector","select","getBlockPatterns","getEntityRecordsPermissions","canUser","update","getEntityRecordPermissions","getRegisteredPostMeta","_state$registeredPost","normalizePageId","getHomePage","siteData","getEntityRecord","homepageId","show_on_front","page_on_front","frontPageTemplateId","getDefaultTemplateId","getPostsPageId","page_for_posts","getTemplateId","homepage","templates","getEntityRecords","per_page","find","editedEntity","getEditedEntityRecord","postsPageId","currentTemplateSlug","template","currentTemplate","slugToCheck","ALLOWED_RESOURCE_ACTIONS","getUserPermissionsFromAllowHeader","allowedMethods","methods","read","actionName","methodName","getUserPermissionCacheKey","resource","EMPTY_OBJECT","isRequestingEmbedPreview","isResolving","getAuthors","getUserQueryResults","getCurrentUser","_state$users$queries$","getEntitiesByKind","getEntitiesConfig","getEntity","getEntityConfig","_query$context","queriedState","_query$context2","hasEntityRecord","_query$context3","part","hasOwn","__experimentalGetEntityRecordNoResolver","__unstableNormalizeArgs","args","newArgs","getRawEntityRecord","_key","attribute","isRawAttribute","_query$context4","hasEntityRecords","getEntityRecordsTotalItems","getEntityRecordsTotalPages","_state$queries$contex2","totalPages","getQueriedTotalPages","__experimentalGetDirtyEntityRecords","dirtyRecords","primaryKeys","primaryKey","hasEditsForEntityRecord","entityRecord","__experimentalGetEntitiesBeingSaved","recordsBeingSaved","isSavingEntityRecord","getEntityRecordEdits","getEntityRecordNonTransientEdits","edited","_query$context5","isAutosavingEntityRecord","_state$entities$recor","_state$entities$recor2","isDeletingEntityRecord","_state$entities$recor3","getLastEntitySaveError","getLastEntityDeleteError","getUndoEdit","getRedoEdit","getCurrentTheme","__experimentalGetCurrentGlobalStylesId","getThemeSupports","_getCurrentTheme$them","theme_supports","getEmbedPreview","isPreviewEmbedFallback","oEmbedLinkCheck","html","isEntity","canUserEditEntityRecord","getAutosaves","getAutosave","authorId","autosave","author","hasFetchedAutosaves","hasFinishedResolution","getReferenceByDistinctEdits","__experimentalGetCurrentThemeBaseGlobalStyles","__experimentalGetCurrentThemeGlobalStylesVariations","getBlockPatternCategories","getUserPatternCategories","getCurrentThemeGlobalStylesRevisions","getRevisions","queriedStateRevisions","getRevision","_query$context6","_getNormalizedCommaSe3","_query$context7","getNestedValue","defaultValue","receiveItems","maxItems","defaultProcessor","requests","preflightResponse","endpoints","results","batchRequests","chunkSize","tmp","chunk","batchResponse","validation","request","body","headers","batchResults","responses","response","output","createBatch","processor","lastId","queue","ObservableSet","inputOrThunk","reject","finally","run","unsubscribe","subscribe","isSuccess","queueItem","_result$output","subscribers","subscriber","receiveUserQuery","receiveCurrentUser","addEntities","receiveEntityRecords","invalidateCache","receiveQueriedItems","receiveCurrentTheme","__experimentalReceiveCurrentGlobalStylesId","__experimentalReceiveThemeBaseGlobalStyles","__experimentalReceiveThemeGlobalStyleVariations","receiveThemeSupports","receiveThemeGlobalStyleRevisions","receiveEmbedPreview","deleteEntityRecord","__unstableFetch","throwOnError","dispatch","resolveSelect","deletedRecord","__unstableAcquireStoreLock","exclusive","hasError","removeItems","_error","__unstableReleaseStoreLock","editEntityRecord","editedRecord","recordValue","editedRecordValue","updateCRDTDoc","undoIgnore","isCached","__unstableCreateUndoLevel","saveEntityRecord","entityIdKey","uuid","evaluatedValue","updatedRecord","currentUserId","autosavePost","newRecord","receiveAutosaves","createEntityMeta","updateLastPersistedDate","__experimentalBatch","batch","api","saveEditedEntityRecord","resultPromises","all","__experimentalSaveSpecifiedEntityEdits","itemsToSave","editsToSave","receiveUploadPermissions","hasUploadPermissions","receiveUserPermission","receiveUserPermissions","receiveNavigationFallbackId","receiveDefaultTemplateId","receiveRevisions","receiveRegisteredPostMeta","editMediaEntity","camelCaseTransform","camelCase","resolverName","RECEIVE_INTERMEDIATE_RESULTS","fetchLinkSuggestions","search","searchOptions","editorSettings","searchOptionsToUse","isInitialSuggestions","initialSuggestionsSearchOptions","subtype","disablePostFormats","then","decodeEntities","catch","source_url","flat","searchTokens","tokenize","scores","titleTokens","exactMatchingTokens","titleToken","searchToken","subMatchingTokens","exactMatchScore","subMatchScore","sortResults","text","CACHE","prependHTTP","isURL","protocol","getProtocol","isValidProtocol","fetchBlockPatterns","restPatterns","registry","json","canUserResolutionsArgs","receiveUserPermissionArgs","bootstrap","editRecord","getEditedRecord","refetchPersistedRecord","finishResolutions","forwardResolver","rawQuery","getResolutionsArgs","recordsQuery","queryArgs","v","parseInt","pageRecords","targetHints","_links","allow","targetHint","shouldInvalidate","activeThemes","embedProxyResponse","requestedAction","hasStartedResolution","relatedAction","resourcePath","finishResolution","restBase","restNamespace","getPostType","globalStylesURL","href","matches","themeGlobalStyles","globalStylesId","revisionsURL","resetRevisions","revision","userCategory","fallback","_embed","_embedded","invalidateNavigationQueries","isPaginated","resolutionsArgs","loader","l","configs","deepCopyLocksTreePath","tree","newTree","currentNode","branchName","locks","getNode","nextNode","hasConflictingLock","DEFAULT_STATE","store","storePath","node","isLockAvailable","iteratePath","descendant","childNode","iterateDescendants","createLocks","processPendingLockRequests","getPendingLockRequests","notifyAcquired","acquire","release","EntityContext","createContext","displayName","EntityProvider","parent","useContext","childContext","useMemo","_jsx","Provider","Status","META_SELECTORS","useQuerySelect","mapQuerySelect","deps","useSelect","enrichSelectors","head","tail","memoized","len","searchCache","prev","val","maxSize","memoize","selectors","resolvers","selectorName","resolutionStatus","getResolutionState","Resolving","Success","Idle","hasStarted","hasResolved","useEntityRecord","useDispatch","coreStore","mutations","editOptions","save","saveOptions","hasEdits","querySelectRest","__experimentalUseEntityRecord","EMPTY_ARRAY","useEntityRecords","queryAsString","__experimentalUseEntityRecords","useResourcePermissions","hasId","canCreate","canRead","_delete","canUpdate","canDelete","__experimentalUseResourcePermissions","useEntityId","unlockedApis","getBlockFootnotesOrder","order","blockEditorPrivateApis","getRichTextValues","getRichTextValuesCached","replacements","oldFootnotes","updateFootnotesFromMeta","footnotes","newOrder","flatMap","getFootnotesOrder","newFootnotes","fnId","updateAttributes","richTextValue","fromHTMLString","hasFootnotes","replacement","countValue","innerHTML","formats","toHTMLString","newBlocks","updateBlocksAttributes","__blocks","parsedBlocksCache","useEntityBlockEditor","_id","providerId","editedBlocks","cackeKey","_blocks","onChange","useCallback","blocksForSerialization","__unstableSerializeAndClean","onInput","useEntityProp","fullValue","privateApis","useEntityRecordsWithPermissions","_data$map","_entityConfig$key","_data$map2","entitySelectors","getEntityRecordMethodName","getEntityRecordsMethodName","entityResolvers","entityActions","saveEntityRecordMethodName","actions","deleteEntityRecordMethodName","createReduxStore","createLocksActions","registerPrivateSelectors","privateSelectors","registerPrivateActions","privateActions","register"],"sourceRoot":""}