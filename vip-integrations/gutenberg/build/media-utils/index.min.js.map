{"version":3,"file":"./build/media-utils/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"i18n\"]","../../packages/media-utils/src/components/media-upload/index.js","webpack://wp/external window [\"wp\",\"blob\"]","webpack://wp/external window [\"wp\",\"apiFetch\"]","../../packages/media-utils/src/utils/flatten-form-data.ts","../../packages/media-utils/src/utils/transform-attachment.ts","../../packages/media-utils/src/utils/upload-error.ts","../../packages/media-utils/src/utils/validate-mime-type.ts","../../packages/media-utils/src/utils/validate-mime-type-for-user.ts","../../packages/media-utils/src/utils/get-mime-types-array.ts","../../packages/media-utils/src/utils/validate-file-size.ts","../../packages/media-utils/src/utils/upload-media.ts","../../packages/media-utils/src/utils/upload-to-server.ts","../../packages/media-utils/src/utils/sideload-media.ts","webpack://wp/external window [\"wp\",\"privateApis\"]","../../packages/media-utils/src/lock-unlock.ts","../../packages/media-utils/src/private-apis.ts","../../packages/media-utils/src/utils/sideload-to-server.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\nconst DEFAULT_EMPTY_GALLERY = [];\n\n/**\n * Prepares the Featured Image toolbars and frames.\n *\n * @return {window.wp.media.view.MediaFrame.Select} The default media workflow.\n */\nconst getFeaturedImageMediaFrame = () => {\n\tconst { wp } = window;\n\n\treturn wp.media.view.MediaFrame.Select.extend( {\n\t\t/**\n\t\t * Enables the Set Featured Image Button.\n\t\t *\n\t\t * @param {Object} toolbar toolbar for featured image state\n\t\t * @return {void}\n\t\t */\n\t\tfeaturedImageToolbar( toolbar ) {\n\t\t\tthis.createSelectToolbar( toolbar, {\n\t\t\t\ttext: wp.media.view.l10n.setFeaturedImage,\n\t\t\t\tstate: this.options.state,\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Handle the edit state requirements of selected media item.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\teditState() {\n\t\t\tconst selection = this.state( 'featured-image' ).get( 'selection' );\n\t\t\tconst view = new wp.media.view.EditImage( {\n\t\t\t\tmodel: selection.single(),\n\t\t\t\tcontroller: this,\n\t\t\t} ).render();\n\n\t\t\t// Set the view to the EditImage frame using the selected image.\n\t\t\tthis.content.set( view );\n\n\t\t\t// After bringing in the frame, load the actual editor via an ajax call.\n\t\t\tview.loadEditor();\n\t\t},\n\n\t\t/**\n\t\t * Create the default states.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\tcreateStates: function createStates() {\n\t\t\tthis.on(\n\t\t\t\t'toolbar:create:featured-image',\n\t\t\t\tthis.featuredImageToolbar,\n\t\t\t\tthis\n\t\t\t);\n\t\t\tthis.on( 'content:render:edit-image', this.editState, this );\n\n\t\t\tthis.states.add( [\n\t\t\t\tnew wp.media.controller.FeaturedImage(),\n\t\t\t\tnew wp.media.controller.EditImage( {\n\t\t\t\t\tmodel: this.options.editImage,\n\t\t\t\t} ),\n\t\t\t] );\n\t\t},\n\t} );\n};\n\n/**\n * Prepares the default frame for selecting a single media item.\n *\n * @return {window.wp.media.view.MediaFrame.Select} The default media workflow.\n */\nconst getSingleMediaFrame = () => {\n\tconst { wp } = window;\n\n\t// Extend the default Select frame, and use the same `createStates` method as in core,\n\t// but with the addition of `filterable: 'uploaded'` to the Library state, so that\n\t// the user can filter the media library by uploaded media.\n\treturn wp.media.view.MediaFrame.Select.extend( {\n\t\t/**\n\t\t * Create the default states on the frame.\n\t\t */\n\t\tcreateStates() {\n\t\t\tconst options = this.options;\n\n\t\t\tif ( this.options.states ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Add the default states.\n\t\t\tthis.states.add( [\n\t\t\t\t// Main states.\n\t\t\t\tnew wp.media.controller.Library( {\n\t\t\t\t\tlibrary: wp.media.query( options.library ),\n\t\t\t\t\tmultiple: options.multiple,\n\t\t\t\t\ttitle: options.title,\n\t\t\t\t\tpriority: 20,\n\t\t\t\t\tfilterable: 'uploaded', // Allow filtering by uploaded images.\n\t\t\t\t} ),\n\t\t\t\tnew wp.media.controller.EditImage( {\n\t\t\t\t\tmodel: options.editImage,\n\t\t\t\t} ),\n\t\t\t] );\n\t\t},\n\t} );\n};\n\n/**\n * Prepares the Gallery toolbars and frames.\n *\n * @return {window.wp.media.view.MediaFrame.Post} The default media workflow.\n */\nconst getGalleryDetailsMediaFrame = () => {\n\tconst { wp } = window;\n\t/**\n\t * Custom gallery details frame.\n\t *\n\t * @see https://github.com/xwp/wp-core-media-widgets/blob/905edbccfc2a623b73a93dac803c5335519d7837/wp-admin/js/widgets/media-gallery-widget.js\n\t * @class GalleryDetailsMediaFrame\n\t * @class\n\t */\n\treturn wp.media.view.MediaFrame.Post.extend( {\n\t\t/**\n\t\t * Set up gallery toolbar.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\tgalleryToolbar() {\n\t\t\tconst editing = this.state().get( 'editing' );\n\t\t\tthis.toolbar.set(\n\t\t\t\tnew wp.media.view.Toolbar( {\n\t\t\t\t\tcontroller: this,\n\t\t\t\t\titems: {\n\t\t\t\t\t\tinsert: {\n\t\t\t\t\t\t\tstyle: 'primary',\n\t\t\t\t\t\t\ttext: editing\n\t\t\t\t\t\t\t\t? wp.media.view.l10n.updateGallery\n\t\t\t\t\t\t\t\t: wp.media.view.l10n.insertGallery,\n\t\t\t\t\t\t\tpriority: 80,\n\t\t\t\t\t\t\trequires: { library: true },\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @fires wp.media.controller.State#update\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tclick() {\n\t\t\t\t\t\t\t\tconst controller = this.controller,\n\t\t\t\t\t\t\t\t\tstate = controller.state();\n\n\t\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\t\tstate.trigger(\n\t\t\t\t\t\t\t\t\t'update',\n\t\t\t\t\t\t\t\t\tstate.get( 'library' )\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t// Restore and reset the default state.\n\t\t\t\t\t\t\t\tcontroller.setState( controller.options.state );\n\t\t\t\t\t\t\t\tcontroller.reset();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Handle the edit state requirements of selected media item.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\teditState() {\n\t\t\tconst selection = this.state( 'gallery' ).get( 'selection' );\n\t\t\tconst view = new wp.media.view.EditImage( {\n\t\t\t\tmodel: selection.single(),\n\t\t\t\tcontroller: this,\n\t\t\t} ).render();\n\n\t\t\t// Set the view to the EditImage frame using the selected image.\n\t\t\tthis.content.set( view );\n\n\t\t\t// After bringing in the frame, load the actual editor via an ajax call.\n\t\t\tview.loadEditor();\n\t\t},\n\n\t\t/**\n\t\t * Create the default states.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\tcreateStates: function createStates() {\n\t\t\tthis.on( 'toolbar:create:main-gallery', this.galleryToolbar, this );\n\t\t\tthis.on( 'content:render:edit-image', this.editState, this );\n\n\t\t\tthis.states.add( [\n\t\t\t\tnew wp.media.controller.Library( {\n\t\t\t\t\tid: 'gallery',\n\t\t\t\t\ttitle: wp.media.view.l10n.createGalleryTitle,\n\t\t\t\t\tpriority: 40,\n\t\t\t\t\ttoolbar: 'main-gallery',\n\t\t\t\t\tfilterable: 'uploaded',\n\t\t\t\t\tmultiple: 'add',\n\t\t\t\t\teditable: false,\n\n\t\t\t\t\tlibrary: wp.media.query( {\n\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t...this.options.library,\n\t\t\t\t\t} ),\n\t\t\t\t} ),\n\t\t\t\tnew wp.media.controller.EditImage( {\n\t\t\t\t\tmodel: this.options.editImage,\n\t\t\t\t} ),\n\n\t\t\t\tnew wp.media.controller.GalleryEdit( {\n\t\t\t\t\tlibrary: this.options.selection,\n\t\t\t\t\tediting: this.options.editing,\n\t\t\t\t\tmenu: 'gallery',\n\t\t\t\t\tdisplaySettings: false,\n\t\t\t\t\tmultiple: true,\n\t\t\t\t} ),\n\n\t\t\t\tnew wp.media.controller.GalleryAdd(),\n\t\t\t] );\n\t\t},\n\t} );\n};\n\n// The media library image object contains numerous attributes\n// we only need this set to display the image in the library.\nconst slimImageObject = ( img ) => {\n\tconst attrSet = [\n\t\t'sizes',\n\t\t'mime',\n\t\t'type',\n\t\t'subtype',\n\t\t'id',\n\t\t'url',\n\t\t'alt',\n\t\t'link',\n\t\t'caption',\n\t];\n\treturn attrSet.reduce( ( result, key ) => {\n\t\tif ( img?.hasOwnProperty( key ) ) {\n\t\t\tresult[ key ] = img[ key ];\n\t\t}\n\t\treturn result;\n\t}, {} );\n};\n\nconst getAttachmentsCollection = ( ids ) => {\n\tconst { wp } = window;\n\n\treturn wp.media.query( {\n\t\torder: 'ASC',\n\t\torderby: 'post__in',\n\t\tpost__in: ids,\n\t\tposts_per_page: -1,\n\t\tquery: true,\n\t\ttype: 'image',\n\t} );\n};\n\nclass MediaUpload extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.openModal = this.openModal.bind( this );\n\t\tthis.onOpen = this.onOpen.bind( this );\n\t\tthis.onSelect = this.onSelect.bind( this );\n\t\tthis.onUpdate = this.onUpdate.bind( this );\n\t\tthis.onClose = this.onClose.bind( this );\n\t}\n\n\tinitializeListeners() {\n\t\t// When an image is selected in the media frame...\n\t\tthis.frame.on( 'select', this.onSelect );\n\t\tthis.frame.on( 'update', this.onUpdate );\n\t\tthis.frame.on( 'open', this.onOpen );\n\t\tthis.frame.on( 'close', this.onClose );\n\t}\n\n\t/**\n\t * Sets the Gallery frame and initializes listeners.\n\t *\n\t * @return {void}\n\t */\n\tbuildAndSetGalleryFrame() {\n\t\tconst {\n\t\t\taddToGallery = false,\n\t\t\tallowedTypes,\n\t\t\tmultiple = false,\n\t\t\tvalue = DEFAULT_EMPTY_GALLERY,\n\t\t} = this.props;\n\n\t\t// If the value did not changed there is no need to rebuild the frame,\n\t\t// we can continue to use the existing one.\n\t\tif ( value === this.lastGalleryValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { wp } = window;\n\n\t\tthis.lastGalleryValue = value;\n\n\t\t// If a frame already existed remove it.\n\t\tif ( this.frame ) {\n\t\t\tthis.frame.remove();\n\t\t}\n\t\tlet currentState;\n\t\tif ( addToGallery ) {\n\t\t\tcurrentState = 'gallery-library';\n\t\t} else {\n\t\t\tcurrentState = value && value.length ? 'gallery-edit' : 'gallery';\n\t\t}\n\t\tif ( ! this.GalleryDetailsMediaFrame ) {\n\t\t\tthis.GalleryDetailsMediaFrame = getGalleryDetailsMediaFrame();\n\t\t}\n\t\tconst attachments = getAttachmentsCollection( value );\n\t\tconst selection = new wp.media.model.Selection( attachments.models, {\n\t\t\tprops: attachments.props.toJSON(),\n\t\t\tmultiple,\n\t\t} );\n\t\tthis.frame = new this.GalleryDetailsMediaFrame( {\n\t\t\tmimeType: allowedTypes,\n\t\t\tstate: currentState,\n\t\t\tmultiple,\n\t\t\tselection,\n\t\t\tediting: !! value?.length,\n\t\t} );\n\t\twp.media.frame = this.frame;\n\t\tthis.initializeListeners();\n\t}\n\n\t/**\n\t * Initializes the Media Library requirements for the featured image flow.\n\t *\n\t * @return {void}\n\t */\n\tbuildAndSetFeatureImageFrame() {\n\t\tconst { wp } = window;\n\t\tconst { value: featuredImageId, multiple, allowedTypes } = this.props;\n\t\tconst featuredImageFrame = getFeaturedImageMediaFrame();\n\t\tconst attachments = getAttachmentsCollection( featuredImageId );\n\t\tconst selection = new wp.media.model.Selection( attachments.models, {\n\t\t\tprops: attachments.props.toJSON(),\n\t\t} );\n\t\tthis.frame = new featuredImageFrame( {\n\t\t\tmimeType: allowedTypes,\n\t\t\tstate: 'featured-image',\n\t\t\tmultiple,\n\t\t\tselection,\n\t\t\tediting: featuredImageId,\n\t\t} );\n\t\twp.media.frame = this.frame;\n\t\t// In order to select the current featured image when opening\n\t\t// the media library we have to set the appropriate settings.\n\t\t// Currently they are set in php for the post editor, but\n\t\t// not for site editor.\n\t\twp.media.view.settings.post = {\n\t\t\t...wp.media.view.settings.post,\n\t\t\tfeaturedImageId: featuredImageId || -1,\n\t\t};\n\t}\n\n\t/**\n\t * Initializes the Media Library requirements for the single image flow.\n\t *\n\t * @return {void}\n\t */\n\tbuildAndSetSingleMediaFrame() {\n\t\tconst { wp } = window;\n\t\tconst {\n\t\t\tallowedTypes,\n\t\t\tmultiple = false,\n\t\t\ttitle = __( 'Select or Upload Media' ),\n\t\t\tvalue,\n\t\t} = this.props;\n\n\t\tconst frameConfig = {\n\t\t\ttitle,\n\t\t\tmultiple,\n\t\t};\n\t\tif ( !! allowedTypes ) {\n\t\t\tframeConfig.library = { type: allowedTypes };\n\t\t}\n\n\t\t// If a frame already exists, remove it.\n\t\tif ( this.frame ) {\n\t\t\tthis.frame.remove();\n\t\t}\n\n\t\tconst singleImageFrame = getSingleMediaFrame();\n\t\tconst attachments = getAttachmentsCollection( value );\n\t\tconst selection = new wp.media.model.Selection( attachments.models, {\n\t\t\tprops: attachments.props.toJSON(),\n\t\t} );\n\t\tthis.frame = new singleImageFrame( {\n\t\t\tmimeType: allowedTypes,\n\t\t\tmultiple,\n\t\t\tselection,\n\t\t\t...frameConfig,\n\t\t} );\n\t\twp.media.frame = this.frame;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.frame?.remove();\n\t}\n\n\tonUpdate( selections ) {\n\t\tconst { onSelect, multiple = false } = this.props;\n\t\tconst state = this.frame.state();\n\t\tconst selectedImages = selections || state.get( 'selection' );\n\n\t\tif ( ! selectedImages || ! selectedImages.models.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( multiple ) {\n\t\t\tonSelect(\n\t\t\t\tselectedImages.models.map( ( model ) =>\n\t\t\t\t\tslimImageObject( model.toJSON() )\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tonSelect( slimImageObject( selectedImages.models[ 0 ].toJSON() ) );\n\t\t}\n\t}\n\n\tonSelect() {\n\t\tconst { onSelect, multiple = false } = this.props;\n\t\t// Get media attachment details from the frame state.\n\t\tconst attachment = this.frame.state().get( 'selection' ).toJSON();\n\t\tonSelect( multiple ? attachment : attachment[ 0 ] );\n\t}\n\n\tonOpen() {\n\t\tconst { wp } = window;\n\t\tconst { value } = this.props;\n\t\tthis.updateCollection();\n\n\t\t//Handle active tab in media model on model open.\n\t\tif ( this.props.mode ) {\n\t\t\tthis.frame.content.mode( this.props.mode );\n\t\t}\n\n\t\t// Handle both this.props.value being either (number[]) multiple ids\n\t\t// (for galleries) or a (number) singular id (e.g. image block).\n\t\tconst hasMedia = Array.isArray( value ) ? !! value?.length : !! value;\n\n\t\tif ( ! hasMedia ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isGallery = this.props.gallery;\n\t\tconst selection = this.frame.state().get( 'selection' );\n\t\tconst valueArray = Array.isArray( value ) ? value : [ value ];\n\n\t\tif ( ! isGallery ) {\n\t\t\tvalueArray.forEach( ( id ) => {\n\t\t\t\tselection.add( wp.media.attachment( id ) );\n\t\t\t} );\n\t\t}\n\n\t\t// Load the images so they are available in the media modal.\n\t\tconst attachments = getAttachmentsCollection( valueArray );\n\n\t\t// Once attachments are loaded, set the current selection.\n\t\tattachments.more().done( function () {\n\t\t\tif ( isGallery && attachments?.models?.length ) {\n\t\t\t\tselection.add( attachments.models );\n\t\t\t}\n\t\t} );\n\t}\n\n\tonClose() {\n\t\tconst { onClose } = this.props;\n\n\t\tif ( onClose ) {\n\t\t\tonClose();\n\t\t}\n\n\t\tthis.frame.detach();\n\t}\n\n\tupdateCollection() {\n\t\tconst frameContent = this.frame.content.get();\n\t\tif ( frameContent && frameContent.collection ) {\n\t\t\tconst collection = frameContent.collection;\n\n\t\t\t// Clean all attachments we have in memory.\n\t\t\tcollection\n\t\t\t\t.toArray()\n\t\t\t\t.forEach( ( model ) => model.trigger( 'destroy', model ) );\n\n\t\t\t// Reset has more flag, if library had small amount of items all items may have been loaded before.\n\t\t\tcollection.mirroring._hasMore = true;\n\n\t\t\t// Request items.\n\t\t\tcollection.more();\n\t\t}\n\t}\n\n\topenModal() {\n\t\tconst {\n\t\t\tgallery = false,\n\t\t\tunstableFeaturedImageFlow = false,\n\t\t\tmodalClass,\n\t\t} = this.props;\n\n\t\tif ( gallery ) {\n\t\t\tthis.buildAndSetGalleryFrame();\n\t\t} else {\n\t\t\tthis.buildAndSetSingleMediaFrame();\n\t\t}\n\n\t\tif ( modalClass ) {\n\t\t\tthis.frame.$el.addClass( modalClass );\n\t\t}\n\n\t\tif ( unstableFeaturedImageFlow ) {\n\t\t\tthis.buildAndSetFeatureImageFrame();\n\t\t}\n\t\tthis.initializeListeners();\n\t\tthis.frame.open();\n\t}\n\n\trender() {\n\t\treturn this.props.render( { open: this.openModal } );\n\t}\n}\n\nexport default MediaUpload;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blob\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","/**\n * Determines whether the passed argument appears to be a plain object.\n *\n * @param data The object to inspect.\n */\nfunction isPlainObject( data: unknown ): data is Record< string, unknown > {\n\treturn (\n\t\tdata !== null &&\n\t\ttypeof data === 'object' &&\n\t\tObject.getPrototypeOf( data ) === Object.prototype\n\t);\n}\n\n/**\n * Recursively flatten data passed to form data, to allow using multi-level objects.\n *\n * @param {FormData}      formData Form data object.\n * @param {string}        key      Key to amend to form data object\n * @param {string|Object} data     Data to be amended to form data.\n */\nexport function flattenFormData(\n\tformData: FormData,\n\tkey: string,\n\tdata: string | undefined | Record< string, string >\n) {\n\tif ( isPlainObject( data ) ) {\n\t\tfor ( const [ name, value ] of Object.entries( data ) ) {\n\t\t\tflattenFormData( formData, `${ key }[${ name }]`, value );\n\t\t}\n\t} else if ( data !== undefined ) {\n\t\tformData.append( key, String( data ) );\n\t}\n}\n","/**\n * Internal dependencies\n */\nimport type { Attachment, RestAttachment } from './types';\n\n/**\n * Transforms an attachment object from the REST API shape into the shape expected by the block editor and other consumers.\n *\n * @param attachment REST API attachment object.\n */\nexport function transformAttachment( attachment: RestAttachment ): Attachment {\n\t// eslint-disable-next-line camelcase\n\tconst { alt_text, source_url, ...savedMediaProps } = attachment;\n\treturn {\n\t\t...savedMediaProps,\n\t\talt: attachment.alt_text,\n\t\tcaption: attachment.caption?.raw ?? '',\n\t\ttitle: attachment.title.raw,\n\t\turl: attachment.source_url,\n\t\tposter:\n\t\t\tattachment._embedded?.[ 'wp:featuredmedia' ]?.[ 0 ]?.source_url ||\n\t\t\tundefined,\n\t};\n}\n","interface UploadErrorArgs {\n\tcode: string;\n\tmessage: string;\n\tfile: File;\n\tcause?: Error;\n}\n\n/**\n * MediaError class.\n *\n * Small wrapper around the `Error` class\n * to hold an error code and a reference to a file object.\n */\nexport class UploadError extends Error {\n\tcode: string;\n\tfile: File;\n\n\tconstructor( { code, message, file, cause }: UploadErrorArgs ) {\n\t\tsuper( message, { cause } );\n\n\t\tObject.setPrototypeOf( this, new.target.prototype );\n\n\t\tthis.code = code;\n\t\tthis.file = file;\n\t}\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { UploadError } from './upload-error';\n\n/**\n * Verifies if the caller (e.g. a block) supports this mime type.\n *\n * @param file         File object.\n * @param allowedTypes List of allowed mime types.\n */\nexport function validateMimeType( file: File, allowedTypes?: string[] ) {\n\tif ( ! allowedTypes ) {\n\t\treturn;\n\t}\n\n\t// Allowed type specified by consumer.\n\tconst isAllowedType = allowedTypes.some( ( allowedType ) => {\n\t\t// If a complete mimetype is specified verify if it matches exactly the mime type of the file.\n\t\tif ( allowedType.includes( '/' ) ) {\n\t\t\treturn allowedType === file.type;\n\t\t}\n\t\t// Otherwise a general mime type is used, and we should verify if the file mimetype starts with it.\n\t\treturn file.type.startsWith( `${ allowedType }/` );\n\t} );\n\n\tif ( file.type && ! isAllowedType ) {\n\t\tthrow new UploadError( {\n\t\t\tcode: 'MIME_TYPE_NOT_SUPPORTED',\n\t\t\tmessage: sprintf(\n\t\t\t\t// translators: %s: file name.\n\t\t\t\t__( '%s: Sorry, this file type is not supported here.' ),\n\t\t\t\tfile.name\n\t\t\t),\n\t\t\tfile,\n\t\t} );\n\t}\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { UploadError } from './upload-error';\nimport { getMimeTypesArray } from './get-mime-types-array';\n\n/**\n * Verifies if the user is allowed to upload this mime type.\n *\n * @param file               File object.\n * @param wpAllowedMimeTypes List of allowed mime types and file extensions.\n */\nexport function validateMimeTypeForUser(\n\tfile: File,\n\twpAllowedMimeTypes?: Record< string, string > | null\n) {\n\t// Allowed types for the current WP_User.\n\tconst allowedMimeTypesForUser = getMimeTypesArray( wpAllowedMimeTypes );\n\n\tif ( ! allowedMimeTypesForUser ) {\n\t\treturn;\n\t}\n\n\tconst isAllowedMimeTypeForUser = allowedMimeTypesForUser.includes(\n\t\tfile.type\n\t);\n\n\tif ( file.type && ! isAllowedMimeTypeForUser ) {\n\t\tthrow new UploadError( {\n\t\t\tcode: 'MIME_TYPE_NOT_ALLOWED_FOR_USER',\n\t\t\tmessage: sprintf(\n\t\t\t\t// translators: %s: file name.\n\t\t\t\t__(\n\t\t\t\t\t'%s: Sorry, you are not allowed to upload this file type.'\n\t\t\t\t),\n\t\t\t\tfile.name\n\t\t\t),\n\t\t\tfile,\n\t\t} );\n\t}\n}\n","/**\n * Browsers may use unexpected mime types, and they differ from browser to browser.\n * This function computes a flexible array of mime types from the mime type structured provided by the server.\n * Converts { jpg|jpeg|jpe: \"image/jpeg\" } into [ \"image/jpeg\", \"image/jpg\", \"image/jpeg\", \"image/jpe\" ]\n *\n * @param {?Object} wpMimeTypesObject Mime type object received from the server.\n *                                    Extensions are keys separated by '|' and values are mime types associated with an extension.\n *\n * @return An array of mime types or null\n */\nexport function getMimeTypesArray(\n\twpMimeTypesObject?: Record< string, string > | null\n) {\n\tif ( ! wpMimeTypesObject ) {\n\t\treturn null;\n\t}\n\treturn Object.entries( wpMimeTypesObject ).flatMap(\n\t\t( [ extensionsString, mime ] ) => {\n\t\t\tconst [ type ] = mime.split( '/' );\n\t\t\tconst extensions = extensionsString.split( '|' );\n\t\t\treturn [\n\t\t\t\tmime,\n\t\t\t\t...extensions.map(\n\t\t\t\t\t( extension ) => `${ type }/${ extension }`\n\t\t\t\t),\n\t\t\t];\n\t\t}\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { UploadError } from './upload-error';\n\n/**\n * Verifies whether the file is within the file upload size limits for the site.\n *\n * @param file              File object.\n * @param maxUploadFileSize Maximum upload size in bytes allowed for the site.\n */\nexport function validateFileSize( file: File, maxUploadFileSize?: number ) {\n\t// Don't allow empty files to be uploaded.\n\tif ( file.size <= 0 ) {\n\t\tthrow new UploadError( {\n\t\t\tcode: 'EMPTY_FILE',\n\t\t\tmessage: sprintf(\n\t\t\t\t// translators: %s: file name.\n\t\t\t\t__( '%s: This file is empty.' ),\n\t\t\t\tfile.name\n\t\t\t),\n\t\t\tfile,\n\t\t} );\n\t}\n\n\tif ( maxUploadFileSize && file.size > maxUploadFileSize ) {\n\t\tthrow new UploadError( {\n\t\t\tcode: 'SIZE_ABOVE_LIMIT',\n\t\t\tmessage: sprintf(\n\t\t\t\t// translators: %s: file name.\n\t\t\t\t__(\n\t\t\t\t\t'%s: This file exceeds the maximum upload size for this site.'\n\t\t\t\t),\n\t\t\t\tfile.name\n\t\t\t),\n\t\t\tfile,\n\t\t} );\n\t}\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { createBlobURL, revokeBlobURL } from '@wordpress/blob';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tAdditionalData,\n\tAttachment,\n\tOnChangeHandler,\n\tOnErrorHandler,\n} from './types';\nimport { uploadToServer } from './upload-to-server';\nimport { validateMimeType } from './validate-mime-type';\nimport { validateMimeTypeForUser } from './validate-mime-type-for-user';\nimport { validateFileSize } from './validate-file-size';\nimport { UploadError } from './upload-error';\n\ndeclare global {\n\tinterface Window {\n\t\t__experimentalMediaProcessing?: boolean;\n\t}\n}\n\ninterface UploadMediaArgs {\n\t// Additional data to include in the request.\n\tadditionalData?: AdditionalData;\n\t// Array with the types of media that can be uploaded, if unset all types are allowed.\n\tallowedTypes?: string[];\n\t// List of files.\n\tfilesList: File[];\n\t// Maximum upload size in bytes allowed for the site.\n\tmaxUploadFileSize?: number;\n\t// Function called when an error happens.\n\tonError?: OnErrorHandler;\n\t// Function called each time a file or a temporary representation of the file is available.\n\tonFileChange?: OnChangeHandler;\n\t// List of allowed mime types and file extensions.\n\twpAllowedMimeTypes?: Record< string, string > | null;\n\t// Abort signal.\n\tsignal?: AbortSignal;\n\t// Whether to allow multiple files to be uploaded.\n\tmultiple?: boolean;\n}\n\n/**\n * Upload a media file when the file upload button is activated\n * or when adding a file to the editor via drag & drop.\n *\n * @param $0                    Parameters object passed to the function.\n * @param $0.allowedTypes       Array with the types of media that can be uploaded, if unset all types are allowed.\n * @param $0.additionalData     Additional data to include in the request.\n * @param $0.filesList          List of files.\n * @param $0.maxUploadFileSize  Maximum upload size in bytes allowed for the site.\n * @param $0.onError            Function called when an error happens.\n * @param $0.onFileChange       Function called each time a file or a temporary representation of the file is available.\n * @param $0.wpAllowedMimeTypes List of allowed mime types and file extensions.\n * @param $0.signal             Abort signal.\n * @param $0.multiple           Whether to allow multiple files to be uploaded.\n */\nexport function uploadMedia( {\n\twpAllowedMimeTypes,\n\tallowedTypes,\n\tadditionalData = {},\n\tfilesList,\n\tmaxUploadFileSize,\n\tonError,\n\tonFileChange,\n\tsignal,\n\tmultiple = true,\n}: UploadMediaArgs ) {\n\tif ( ! multiple && filesList.length > 1 ) {\n\t\tonError?.( new Error( __( 'Only one file can be used here.' ) ) );\n\t\treturn;\n\t}\n\n\tconst validFiles = [];\n\n\tconst filesSet: Array< Partial< Attachment > | null > = [];\n\tconst setAndUpdateFiles = ( index: number, value: Attachment | null ) => {\n\t\t// For client-side media processing, this is handled by the upload-media package.\n\t\tif ( ! window.__experimentalMediaProcessing ) {\n\t\t\tif ( filesSet[ index ]?.url ) {\n\t\t\t\trevokeBlobURL( filesSet[ index ].url );\n\t\t\t}\n\t\t}\n\t\tfilesSet[ index ] = value;\n\t\tonFileChange?.(\n\t\t\tfilesSet.filter( ( attachment ) => attachment !== null )\n\t\t);\n\t};\n\n\tfor ( const mediaFile of filesList ) {\n\t\t// Verify if user is allowed to upload this mime type.\n\t\t// Defer to the server when type not detected.\n\t\ttry {\n\t\t\tvalidateMimeTypeForUser( mediaFile, wpAllowedMimeTypes );\n\t\t} catch ( error: unknown ) {\n\t\t\tonError?.( error as Error );\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check if the caller (e.g. a block) supports this mime type.\n\t\t// Defer to the server when type not detected.\n\t\ttry {\n\t\t\tvalidateMimeType( mediaFile, allowedTypes );\n\t\t} catch ( error: unknown ) {\n\t\t\tonError?.( error as Error );\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Verify if file is greater than the maximum file upload size allowed for the site.\n\t\ttry {\n\t\t\tvalidateFileSize( mediaFile, maxUploadFileSize );\n\t\t} catch ( error: unknown ) {\n\t\t\tonError?.( error as Error );\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalidFiles.push( mediaFile );\n\n\t\t// For client-side media processing, this is handled by the upload-media package.\n\t\tif ( ! window.__experimentalMediaProcessing ) {\n\t\t\t// Set temporary URL to create placeholder media file, this is replaced\n\t\t\t// with final file from media gallery when upload is `done` below.\n\t\t\tfilesSet.push( { url: createBlobURL( mediaFile ) } );\n\t\t\tonFileChange?.( filesSet as Array< Partial< Attachment > > );\n\t\t}\n\t}\n\n\tvalidFiles.map( async ( file, index ) => {\n\t\ttry {\n\t\t\tconst attachment = await uploadToServer(\n\t\t\t\tfile,\n\t\t\t\tadditionalData,\n\t\t\t\tsignal\n\t\t\t);\n\t\t\tsetAndUpdateFiles( index, attachment );\n\t\t} catch ( error ) {\n\t\t\t// Reset to empty on failure.\n\t\t\tsetAndUpdateFiles( index, null );\n\n\t\t\t// @wordpress/api-fetch throws any response that isn't in the 200 range as-is.\n\t\t\tlet message: string;\n\t\t\tif (\n\t\t\t\ttypeof error === 'object' &&\n\t\t\t\terror !== null &&\n\t\t\t\t'message' in error\n\t\t\t) {\n\t\t\t\tmessage =\n\t\t\t\t\ttypeof error.message === 'string'\n\t\t\t\t\t\t? error.message\n\t\t\t\t\t\t: String( error.message );\n\t\t\t} else {\n\t\t\t\tmessage = sprintf(\n\t\t\t\t\t// translators: %s: file name\n\t\t\t\t\t__( 'Error while uploading file %s to the media library.' ),\n\t\t\t\t\tfile.name\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tonError?.(\n\t\t\t\tnew UploadError( {\n\t\t\t\t\tcode: 'GENERAL',\n\t\t\t\t\tmessage,\n\t\t\t\t\tfile,\n\t\t\t\t\tcause: error instanceof Error ? error : undefined,\n\t\t\t\t} )\n\t\t\t);\n\t\t}\n\t} );\n}\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport { flattenFormData } from './flatten-form-data';\nimport { transformAttachment } from './transform-attachment';\nimport type { CreateRestAttachment, RestAttachment } from './types';\n\nexport async function uploadToServer(\n\tfile: File,\n\tadditionalData: CreateRestAttachment = {},\n\tsignal?: AbortSignal\n) {\n\t// Create upload payload.\n\tconst data = new FormData();\n\tdata.append( 'file', file, file.name || file.type.replace( '/', '.' ) );\n\tfor ( const [ key, value ] of Object.entries( additionalData ) ) {\n\t\tflattenFormData(\n\t\t\tdata,\n\t\t\tkey,\n\t\t\tvalue as string | Record< string, string > | undefined\n\t\t);\n\t}\n\n\treturn transformAttachment(\n\t\tawait apiFetch< RestAttachment >( {\n\t\t\t// This allows the video block to directly get a video's poster image.\n\t\t\tpath: '/wp/v2/media?_embed=wp:featuredmedia',\n\t\t\tbody: data,\n\t\t\tmethod: 'POST',\n\t\t\tsignal,\n\t\t} )\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tOnChangeHandler,\n\tOnErrorHandler,\n\tCreateSideloadFile,\n\tRestAttachment,\n} from './types';\nimport { sideloadToServer } from './sideload-to-server';\nimport { UploadError } from './upload-error';\n\nconst noop = () => {};\n\ninterface SideloadMediaArgs {\n\t// Additional data to include in the request.\n\tadditionalData?: CreateSideloadFile;\n\t// File to sideload.\n\tfile: File;\n\t// Attachment ID.\n\tattachmentId: RestAttachment[ 'id' ];\n\t// Function called when an error happens.\n\tonError?: OnErrorHandler;\n\t// Function called each time a file or a temporary representation of the file is available.\n\tonFileChange?: OnChangeHandler;\n\t// Abort signal.\n\tsignal?: AbortSignal;\n}\n\n/**\n * Uploads a file to the server without creating an attachment.\n *\n * @param $0                Parameters object passed to the function.\n * @param $0.file           Media File to Save.\n * @param $0.attachmentId   Parent attachment ID.\n * @param $0.additionalData Additional data to include in the request.\n * @param $0.signal         Abort signal.\n * @param $0.onFileChange   Function called each time a file or a temporary representation of the file is available.\n * @param $0.onError        Function called when an error happens.\n */\nexport async function sideloadMedia( {\n\tfile,\n\tattachmentId,\n\tadditionalData = {},\n\tsignal,\n\tonFileChange,\n\tonError = noop,\n}: SideloadMediaArgs ) {\n\ttry {\n\t\tconst attachment = await sideloadToServer(\n\t\t\tfile,\n\t\t\tattachmentId,\n\t\t\tadditionalData,\n\t\t\tsignal\n\t\t);\n\t\tonFileChange?.( [ attachment ] );\n\t} catch ( error ) {\n\t\tlet message;\n\t\tif ( error instanceof Error ) {\n\t\t\tmessage = error.message;\n\t\t} else {\n\t\t\tmessage = sprintf(\n\t\t\t\t// translators: %s: file name\n\t\t\t\t__( 'Error while sideloading file %s to the server.' ),\n\t\t\t\tfile.name\n\t\t\t);\n\t\t}\n\t\tonError(\n\t\t\tnew UploadError( {\n\t\t\t\tcode: 'GENERAL',\n\t\t\t\tmessage,\n\t\t\t\tfile,\n\t\t\t\tcause: error instanceof Error ? error : undefined,\n\t\t\t} )\n\t\t);\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\n\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I acknowledge private features are not for use in themes or plugins and doing so will break in the next version of WordPress.',\n\t\t'@wordpress/media-utils'\n\t);\n","/**\n * Internal dependencies\n */\nimport { sideloadMedia } from './utils/sideload-media';\nimport { lock } from './lock-unlock';\n\n/**\n * Private @wordpress/media-utils APIs.\n */\nexport const privateApis = {};\n\nlock( privateApis, {\n\tsideloadMedia,\n} );\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport type { CreateSideloadFile, RestAttachment } from './types';\nimport { flattenFormData } from './flatten-form-data';\nimport { transformAttachment } from './transform-attachment';\n\n/**\n * Uploads a file to the server without creating an attachment.\n *\n * @param file           Media File to Save.\n * @param attachmentId   Parent attachment ID.\n * @param additionalData Additional data to include in the request.\n * @param signal         Abort signal.\n *\n * @return The saved attachment.\n */\nexport async function sideloadToServer(\n\tfile: File,\n\tattachmentId: RestAttachment[ 'id' ],\n\tadditionalData: CreateSideloadFile = {},\n\tsignal?: AbortSignal\n) {\n\t// Create upload payload.\n\tconst data = new FormData();\n\tdata.append( 'file', file, file.name || file.type.replace( '/', '.' ) );\n\tfor ( const [ key, value ] of Object.entries( additionalData ) ) {\n\t\tflattenFormData(\n\t\t\tdata,\n\t\t\tkey,\n\t\t\tvalue as string | Record< string, string > | undefined\n\t\t);\n\t}\n\n\treturn transformAttachment(\n\t\tawait apiFetch< RestAttachment >( {\n\t\t\tpath: `/wp/v2/media/${ attachmentId }/sideload`,\n\t\t\tbody: data,\n\t\t\tmethod: 'POST',\n\t\t\tsignal,\n\t\t} )\n\t);\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","DEFAULT_EMPTY_GALLERY","getFeaturedImageMediaFrame","wp","media","view","MediaFrame","Select","extend","featuredImageToolbar","toolbar","this","createSelectToolbar","text","l10n","setFeaturedImage","state","options","editState","selection","EditImage","model","single","controller","render","content","set","loadEditor","createStates","on","states","add","FeaturedImage","editImage","getSingleMediaFrame","Library","library","query","multiple","title","priority","filterable","getGalleryDetailsMediaFrame","Post","galleryToolbar","editing","Toolbar","items","insert","style","updateGallery","insertGallery","requires","click","close","trigger","setState","reset","id","createGalleryTitle","editable","type","GalleryEdit","menu","displaySettings","GalleryAdd","slimImageObject","img","reduce","result","getAttachmentsCollection","ids","order","orderby","post__in","posts_per_page","MediaUpload","Component","constructor","super","arguments","openModal","bind","onOpen","onSelect","onUpdate","onClose","initializeListeners","frame","buildAndSetGalleryFrame","addToGallery","allowedTypes","props","lastGalleryValue","currentState","remove","length","GalleryDetailsMediaFrame","attachments","Selection","models","toJSON","mimeType","buildAndSetFeatureImageFrame","featuredImageId","featuredImageFrame","settings","post","buildAndSetSingleMediaFrame","__","frameConfig","singleImageFrame","componentWillUnmount","selections","selectedImages","map","attachment","updateCollection","mode","Array","isArray","isGallery","gallery","valueArray","forEach","more","done","detach","frameContent","collection","toArray","mirroring","_hasMore","unstableFeaturedImageFlow","modalClass","$el","addClass","open","flattenFormData","formData","data","getPrototypeOf","isPlainObject","name","entries","undefined","append","String","transformAttachment","_attachment$caption$r","alt_text","source_url","savedMediaProps","alt","caption","raw","url","poster","_embedded","UploadError","Error","code","message","file","cause","setPrototypeOf","validateMimeType","isAllowedType","some","allowedType","includes","startsWith","sprintf","validateMimeTypeForUser","wpAllowedMimeTypes","allowedMimeTypesForUser","wpMimeTypesObject","flatMap","extensionsString","mime","split","extension","isAllowedMimeTypeForUser","validateFileSize","maxUploadFileSize","size","uploadMedia","additionalData","filesList","onError","onFileChange","signal","validFiles","filesSet","setAndUpdateFiles","index","__experimentalMediaProcessing","revokeBlobURL","filter","mediaFile","error","push","createBlobURL","async","FormData","replace","apiFetch","path","body","method","uploadToServer","noop","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","privateApis","sideloadMedia","attachmentId","sideloadToServer"],"sourceRoot":""}