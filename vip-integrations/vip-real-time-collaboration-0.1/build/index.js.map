{"version":3,"file":"index.js","mappings":"iCAAA,kBAEI,IAAIA,EAAU,CAAC,GAcV,SAASA,GAClB,aACAA,EAAQC,YAAa,EAiBrBD,EAAQE,aAAe,GACvBF,EAAQG,UAAY,GAEpB,IAAIC,EAAI,IAAIC,YAAY,CACpB,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,UAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,aAExC,SAASC,EAAWC,EAAGC,EAAGC,EAAGC,EAAKC,GAE9B,IADA,IAAIC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAIC,EAClCb,GAAO,IAAI,CASd,IARAC,EAAIJ,EAAE,GACNK,EAAIL,EAAE,GACNM,EAAIN,EAAE,GACNO,EAAIP,EAAE,GACNQ,EAAIR,EAAE,GACNS,EAAIT,EAAE,GACNU,EAAIV,EAAE,GACNW,EAAIX,EAAE,GACDa,EAAI,EAAGA,EAAI,GAAIA,IAChBC,EAAIZ,EAAU,EAAJW,EACVd,EAAEc,IAAe,IAAPZ,EAAEa,KAAc,IAAmB,IAAXb,EAAEa,EAAI,KAAc,IACrC,IAAXb,EAAEa,EAAI,KAAc,EAAiB,IAAXb,EAAEa,EAAI,GAE1C,IAAKD,EAAI,GAAIA,EAAI,GAAIA,IAEjBE,IADAH,EAAIb,EAAEc,EAAI,MACE,GAAKD,GAAK,KAAcA,IAAM,GAAKA,GAAK,IAAcA,IAAM,GAExEI,IADAJ,EAAIb,EAAEc,EAAI,OACE,EAAID,GAAK,KAAaA,IAAM,GAAKA,GAAK,IAAcA,IAAM,EACtEb,EAAEc,IAAME,EAAKhB,EAAEc,EAAI,GAAK,IAAMG,EAAKjB,EAAEc,EAAI,IAAM,GAEnD,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAChBE,KAAUP,IAAM,EAAIA,GAAK,KAAaA,IAAM,GAAKA,GAAK,KACjDA,IAAM,GAAKA,GAAK,KAAgBA,EAAIC,GAAOD,EAAIE,GAAO,IACrDC,GAAMf,EAAEiB,GAAKd,EAAEc,GAAM,GAAM,GAAM,EACvCG,IAAQZ,IAAM,EAAIA,GAAK,KAAaA,IAAM,GAAKA,GAAK,KAC/CA,IAAM,GAAKA,GAAK,MAAgBA,EAAIC,EAAMD,EAAIE,EAAMD,EAAIC,GAAO,EACpEK,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKD,EAAIQ,EAAM,EACfR,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKW,EAAKC,EAAM,EAEpBhB,EAAE,IAAMI,EACRJ,EAAE,IAAMK,EACRL,EAAE,IAAMM,EACRN,EAAE,IAAMO,EACRP,EAAE,IAAMQ,EACRR,EAAE,IAAMS,EACRT,EAAE,IAAMU,EACRV,EAAE,IAAMW,EACRT,GAAO,GACPC,GAAO,EACX,CACA,OAAOD,CACX,CAEA,IAAIe,EAAsB,WACtB,SAASA,IACLC,KAAKxB,aAAeF,EAAQE,aAC5BwB,KAAKvB,UAAYH,EAAQG,UAEzBuB,KAAKC,MAAQ,IAAIC,WAAW,GAC5BF,KAAKG,KAAO,IAAID,WAAW,IAC3BF,KAAKI,OAAS,IAAIC,WAAW,KAC7BL,KAAKM,aAAe,EACpBN,KAAKO,YAAc,EACnBP,KAAKQ,UAAW,EAChBR,KAAKS,OACT,CAmHA,OAhHAV,EAAKW,UAAUD,MAAQ,WAYnB,OAXAT,KAAKC,MAAM,GAAK,WAChBD,KAAKC,MAAM,GAAK,WAChBD,KAAKC,MAAM,GAAK,WAChBD,KAAKC,MAAM,GAAK,WAChBD,KAAKC,MAAM,GAAK,WAChBD,KAAKC,MAAM,GAAK,WAChBD,KAAKC,MAAM,GAAK,UAChBD,KAAKC,MAAM,GAAK,WAChBD,KAAKM,aAAe,EACpBN,KAAKO,YAAc,EACnBP,KAAKQ,UAAW,EACTR,IACX,EAEAD,EAAKW,UAAUC,MAAQ,WACnB,IAAK,IAAIhB,EAAI,EAAGA,EAAIK,KAAKI,OAAOQ,OAAQjB,IACpCK,KAAKI,OAAOT,GAAK,EAErB,IAASA,EAAI,EAAGA,EAAIK,KAAKG,KAAKS,OAAQjB,IAClCK,KAAKG,KAAKR,GAAK,EAEnBK,KAAKS,OACT,EAQAV,EAAKW,UAAUG,OAAS,SAAUC,EAAMC,GAEpC,QADmB,IAAfA,IAAyBA,EAAaD,EAAKF,QAC3CZ,KAAKQ,SACL,MAAM,IAAIQ,MAAM,mDAEpB,IAAIC,EAAU,EAEd,GADAjB,KAAKO,aAAeQ,EAChBf,KAAKM,aAAe,EAAG,CACvB,KAAON,KAAKM,aAAe,IAAMS,EAAa,GAC1Cf,KAAKI,OAAOJ,KAAKM,gBAAkBQ,EAAKG,KACxCF,IAEsB,KAAtBf,KAAKM,eACL1B,EAAWoB,KAAKG,KAAMH,KAAKC,MAAOD,KAAKI,OAAQ,EAAG,IAClDJ,KAAKM,aAAe,EAE5B,CAKA,IAJIS,GAAc,KACdE,EAAUrC,EAAWoB,KAAKG,KAAMH,KAAKC,MAAOa,EAAMG,EAASF,GAC3DA,GAAc,IAEXA,EAAa,GAChBf,KAAKI,OAAOJ,KAAKM,gBAAkBQ,EAAKG,KACxCF,IAEJ,OAAOf,IACX,EAIAD,EAAKW,UAAUQ,OAAS,SAAUC,GAC9B,IAAKnB,KAAKQ,SAAU,CAChB,IAAID,EAAcP,KAAKO,YACnBa,EAAOpB,KAAKM,aACZe,EAAYd,EAAc,UAAc,EACxCe,EAAWf,GAAe,EAC1BgB,EAAahB,EAAc,GAAK,GAAM,GAAK,IAC/CP,KAAKI,OAAOgB,GAAQ,IACpB,IAAK,IAAIzB,EAAIyB,EAAO,EAAGzB,EAAI4B,EAAY,EAAG5B,IACtCK,KAAKI,OAAOT,GAAK,EAErBK,KAAKI,OAAOmB,EAAY,GAAMF,IAAa,GAAM,IACjDrB,KAAKI,OAAOmB,EAAY,GAAMF,IAAa,GAAM,IACjDrB,KAAKI,OAAOmB,EAAY,GAAMF,IAAa,EAAK,IAChDrB,KAAKI,OAAOmB,EAAY,GAAMF,IAAa,EAAK,IAChDrB,KAAKI,OAAOmB,EAAY,GAAMD,IAAa,GAAM,IACjDtB,KAAKI,OAAOmB,EAAY,GAAMD,IAAa,GAAM,IACjDtB,KAAKI,OAAOmB,EAAY,GAAMD,IAAa,EAAK,IAChDtB,KAAKI,OAAOmB,EAAY,GAAMD,IAAa,EAAK,IAChD1C,EAAWoB,KAAKG,KAAMH,KAAKC,MAAOD,KAAKI,OAAQ,EAAGmB,GAClDvB,KAAKQ,UAAW,CACpB,CACA,IAASb,EAAI,EAAGA,EAAI,EAAGA,IACnBwB,EAAQ,EAAJxB,EAAQ,GAAMK,KAAKC,MAAMN,KAAO,GAAM,IAC1CwB,EAAQ,EAAJxB,EAAQ,GAAMK,KAAKC,MAAMN,KAAO,GAAM,IAC1CwB,EAAQ,EAAJxB,EAAQ,GAAMK,KAAKC,MAAMN,KAAO,EAAK,IACzCwB,EAAQ,EAAJxB,EAAQ,GAAMK,KAAKC,MAAMN,KAAO,EAAK,IAE7C,OAAOK,IACX,EAEAD,EAAKW,UAAUc,OAAS,WACpB,IAAIL,EAAM,IAAId,WAAWL,KAAKxB,cAE9B,OADAwB,KAAKkB,OAAOC,GACLA,CACX,EAEApB,EAAKW,UAAUe,WAAa,SAAUN,GAClC,IAAK,IAAIxB,EAAI,EAAGA,EAAIK,KAAKC,MAAMW,OAAQjB,IACnCwB,EAAIxB,GAAKK,KAAKC,MAAMN,EAE5B,EAEAI,EAAKW,UAAUgB,cAAgB,SAAUC,EAAMpB,GAC3C,IAAK,IAAIZ,EAAI,EAAGA,EAAIK,KAAKC,MAAMW,OAAQjB,IACnCK,KAAKC,MAAMN,GAAKgC,EAAKhC,GAEzBK,KAAKO,YAAcA,EACnBP,KAAKQ,UAAW,EAChBR,KAAKM,aAAe,CACxB,EACOP,CACX,CAhIyB,GAiIzBzB,EAAQyB,KAAOA,EAEf,IAAI6B,EAAsB,WACtB,SAASA,EAAKC,GACV7B,KAAK8B,MAAQ,IAAI/B,EACjBC,KAAK+B,MAAQ,IAAIhC,EACjBC,KAAKvB,UAAYuB,KAAK8B,MAAMrD,UAC5BuB,KAAKxB,aAAewB,KAAK8B,MAAMtD,aAC/B,IAAIwD,EAAM,IAAI3B,WAAWL,KAAKvB,WAC9B,GAAIoD,EAAIjB,OAASZ,KAAKvB,WAClB,IAAKsB,GAAQc,OAAOgB,GAAKX,OAAOc,GAAKrB,aAGrC,IAAK,IAAIhB,EAAI,EAAGA,EAAIkC,EAAIjB,OAAQjB,IAC5BqC,EAAIrC,GAAKkC,EAAIlC,GAGrB,IAASA,EAAI,EAAGA,EAAIqC,EAAIpB,OAAQjB,IAC5BqC,EAAIrC,IAAM,GAGd,IADAK,KAAK8B,MAAMjB,OAAOmB,GACTrC,EAAI,EAAGA,EAAIqC,EAAIpB,OAAQjB,IAC5BqC,EAAIrC,IAAM,IAOd,IALAK,KAAK+B,MAAMlB,OAAOmB,GAClBhC,KAAKiC,OAAS,IAAItD,YAAY,GAC9BqB,KAAKkC,OAAS,IAAIvD,YAAY,GAC9BqB,KAAK8B,MAAML,WAAWzB,KAAKiC,QAC3BjC,KAAK+B,MAAMN,WAAWzB,KAAKkC,QAClBvC,EAAI,EAAGA,EAAIqC,EAAIpB,OAAQjB,IAC5BqC,EAAIrC,GAAK,CAEjB,CAuCA,OAnCAiC,EAAKlB,UAAUD,MAAQ,WAGnB,OAFAT,KAAK8B,MAAMJ,cAAc1B,KAAKiC,OAAQjC,KAAK8B,MAAMrD,WACjDuB,KAAK+B,MAAML,cAAc1B,KAAKkC,OAAQlC,KAAK+B,MAAMtD,WAC1CuB,IACX,EAEA4B,EAAKlB,UAAUC,MAAQ,WACnB,IAAK,IAAIhB,EAAI,EAAGA,EAAIK,KAAKiC,OAAOrB,OAAQjB,IACpCK,KAAKkC,OAAOvC,GAAKK,KAAKiC,OAAOtC,GAAK,EAEtCK,KAAK8B,MAAMnB,QACXX,KAAK+B,MAAMpB,OACf,EAEAiB,EAAKlB,UAAUG,OAAS,SAAUC,GAE9B,OADAd,KAAK8B,MAAMjB,OAAOC,GACXd,IACX,EAEA4B,EAAKlB,UAAUQ,OAAS,SAAUC,GAQ9B,OAPInB,KAAK+B,MAAMvB,SACXR,KAAK+B,MAAMb,OAAOC,IAGlBnB,KAAK8B,MAAMZ,OAAOC,GAClBnB,KAAK+B,MAAMlB,OAAOM,EAAKnB,KAAKxB,cAAc0C,OAAOC,IAE9CnB,IACX,EAEA4B,EAAKlB,UAAUc,OAAS,WACpB,IAAIL,EAAM,IAAId,WAAWL,KAAKxB,cAE9B,OADAwB,KAAKkB,OAAOC,GACLA,CACX,EACOS,CACX,CAtEyB,GAyEzB,SAASO,EAAKrB,GACV,IAAIrB,GAAI,IAAKM,GAAQc,OAAOC,GACxBU,EAAS/B,EAAE+B,SAEf,OADA/B,EAAEkB,QACKa,CACX,CAKA,SAASY,EAAKP,EAAKf,GACf,IAAIrB,EAAI,IAAKmC,EAAKC,GAAMhB,OAAOC,GAC3BU,EAAS/B,EAAE+B,SAEf,OADA/B,EAAEkB,QACKa,CACX,CAIA,SAASa,EAAWjC,EAAQgC,EAAME,EAAMC,GAEpC,IAAIC,EAAMD,EAAQ,GAClB,GAAY,IAARC,EACA,MAAM,IAAIxB,MAAM,4BAGpBoB,EAAK3B,QAGD+B,EAAM,GACNJ,EAAKvB,OAAOT,GAGZkC,GACAF,EAAKvB,OAAOyB,GAGhBF,EAAKvB,OAAO0B,GAEZH,EAAKlB,OAAOd,GAEZmC,EAAQ,IACZ,CA5CAjE,EAAQsD,KAAOA,EAQftD,EAAQ6D,KAAOA,EAEf7D,EAAiB,QAAI6D,EAQrB7D,EAAQ8D,KAAOA,EA2Bf,IAAIK,EAAW,IAAIpC,WAAW/B,EAAQE,cA0BtCF,EAAQoE,KAzBR,SAAcb,EAAKc,EAAML,EAAM1B,QACd,IAAT+B,IAAmBA,EAAOF,QACf,IAAX7B,IAAqBA,EAAS,IAWlC,IAVA,IAAI2B,EAAU,IAAIlC,WAAW,CAAC,IAE1BuC,EAAMR,EAAKO,EAAMd,GAGjBgB,EAAQ,IAAIjB,EAAKgB,GAEjBxC,EAAS,IAAIC,WAAWwC,EAAMrE,cAC9BsE,EAAS1C,EAAOQ,OAChBO,EAAM,IAAId,WAAWO,GAChBjB,EAAI,EAAGA,EAAIiB,EAAQjB,IACpBmD,IAAW1C,EAAOQ,SAClByB,EAAWjC,EAAQyC,EAAOP,EAAMC,GAChCO,EAAS,GAEb3B,EAAIxB,GAAKS,EAAO0C,KAKpB,OAHAD,EAAMlC,QACNP,EAAO2C,KAAK,GACZR,EAAQQ,KAAK,GACN5B,CACX,EAgDA7C,EAAQ0E,OAxCR,SAAgBC,EAAUN,EAAMO,EAAYC,GAOxC,IANA,IAAIC,EAAM,IAAIxB,EAAKqB,GACfhE,EAAMmE,EAAI5E,aACV6E,EAAM,IAAIhD,WAAW,GACrBiD,EAAI,IAAIjD,WAAWpB,GACnBS,EAAI,IAAIW,WAAWpB,GACnBsE,EAAK,IAAIlD,WAAW8C,GACfxD,EAAI,EAAGA,EAAIV,EAAMkE,EAAOxD,IAAK,CAClC,IAAIP,EAAIO,EAAI,EACZ0D,EAAI,GAAMjE,IAAM,GAAM,IACtBiE,EAAI,GAAMjE,IAAM,GAAM,IACtBiE,EAAI,GAAMjE,IAAM,EAAK,IACrBiE,EAAI,GAAMjE,IAAM,EAAK,IACrBgE,EAAI3C,QACJ2C,EAAIvC,OAAO8B,GACXS,EAAIvC,OAAOwC,GACXD,EAAIlC,OAAOxB,GACX,IAAK,IAAIE,EAAI,EAAGA,EAAIX,EAAKW,IACrB0D,EAAE1D,GAAKF,EAAEE,GAEb,IAASA,EAAI,EAAGA,GAAKsD,EAAYtD,IAAK,CAClCwD,EAAI3C,QACJ2C,EAAIvC,OAAOnB,GAAGwB,OAAOxB,GACrB,IAAK,IAAI8D,EAAI,EAAGA,EAAIvE,EAAKuE,IACrBF,EAAEE,IAAM9D,EAAE8D,EAElB,CACA,IAAS5D,EAAI,EAAGA,EAAIX,GAAOU,EAAIV,EAAMW,EAAIuD,EAAOvD,IAC5C2D,EAAG5D,EAAIV,EAAMW,GAAK0D,EAAE1D,EAE5B,CACA,IAASD,EAAI,EAAGA,EAAIV,EAAKU,IACrB2D,EAAE3D,GAAKD,EAAEC,GAAK,EAElB,IAASA,EAAI,EAAGA,EAAI,EAAGA,IACnB0D,EAAI1D,GAAK,EAGb,OADAyD,EAAIzC,QACG4C,CACX,CAEA,CAvaIE,CAAQnF,GACR,IAAIoF,EAASpF,EAAiB,QAC9B,IAAK,IAAIkF,KAAKlF,EACVoF,EAAOF,GAAKlF,EAAQkF,GAGoC,iBAAnBG,EAAOrF,QAC5CqF,EAAOrF,QAAUoF,OAEmB,KAApC,aAAoB,OAAOA,CAAS,+BAI3C,CAhBD,E,GCCIE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAazF,QAGrB,IAAIqF,EAASC,EAAyBE,GAAY,CAGjDxF,QAAS,CAAC,GAOX,OAHA2F,EAAoBH,GAAUI,KAAKP,EAAOrF,QAASqF,EAAQA,EAAOrF,QAASuF,GAGpEF,EAAOrF,OACf,CCrBAuF,EAAoBM,EAAKR,IACxB,IAAIS,EAAST,GAAUA,EAAOpF,WAC7B,IAAOoF,EAAiB,QACxB,IAAM,EAEP,OADAE,EAAoBxE,EAAE+E,EAAQ,CAAElF,EAAGkF,IAC5BA,GCLRP,EAAoBxE,EAAI,CAACf,EAAS+F,KACjC,IAAI,IAAIxC,KAAOwC,EACXR,EAAoBS,EAAED,EAAYxC,KAASgC,EAAoBS,EAAEhG,EAASuD,IAC5E0C,OAAOC,eAAelG,EAASuD,EAAK,CAAE4C,YAAY,EAAMC,IAAKL,EAAWxC,MCJ3EgC,EAAoBS,EAAI,CAACK,EAAKC,IAAUL,OAAO7D,UAAUmE,eAAeX,KAAKS,EAAKC,G,mBCAlF,MAAM,EAA+BE,OAAW,GAAS,MCAnD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAwB,gBCAvD,EAA+BA,OAAW,GAAc,WCAxD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAQ,KCKlD,SAAUC,GAAQ,UACvBC,EAAS,oBACTC,IAKA,MAAMC,EAAQ,CACbC,QAAgC,IAAxBF,EAA+B,aAAcD,EAAUI,aAAWpB,EAC1EqB,QAASL,EAAUM,YAAc,EAAI,IAGtC,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UAClDF,EAAAA,EAAAA,KAAA,OACCG,IAAMV,EAAUW,KAChBC,IAAMZ,EAAUa,UAChBX,MAAQA,EACRY,MAAQd,EAAUW,QAItB,CC3BO,MAAMI,EAAgCC,EAAwB,kBASxDC,EAAgBD,EAAwB,SAOrD,SAASA,EAA0DnE,GAClE,MAAK,oBAAuBiD,aAAU,IAAuBA,OAAOoB,QAC5D,GAGDpB,OAAOoB,QAASrE,EACxB,CCpBO,IAAKsE,GAAZ,SAAYA,GACXA,EAAAA,EAAA,uBACAA,EAAAA,EAAA,iBACAA,EAAAA,EAAA,qBACAA,EAAAA,EAAA,eACAA,EAAAA,EAAA,gBACA,CAND,CAAYA,IAAAA,EAAQ,KAQpB,MAAMC,EAA2DD,EAASE,QAEpE,MAAOC,EAGZC,WAAAA,CACCC,EAAyB,GACjBC,EAAsBL,GAAtB,KAAAK,UAAAA,EAERzG,KAAK0G,UAAY,WAAWF,EAAiB,IAAKA,IAAoB,GACvE,CAEUG,GAAAA,CAAKC,KAAoBC,GAClC,GAAKD,EAAQ5G,KAAKyG,UACjB,OAID,MAAMK,EAAWX,EAAUS,GAG3BG,QAAQJ,IAAK,IAAK3G,KAAK0G,cAAgBI,QAAiBD,EACzD,CAEOG,KAAAA,IAAUH,GAChB7G,KAAK2G,IAAKR,EAASc,SAAUJ,EAC9B,CAEOvE,IAAAA,IAASuE,GACf7G,KAAK2G,IAAKR,EAASe,QAASL,EAC7B,CAEOM,IAAAA,IAASN,GACf7G,KAAK2G,IAAKR,EAASE,WAAYQ,EAChC,CAEOO,KAAAA,IAAUP,GAChB7G,KAAK2G,IAAKR,EAASkB,SAAUR,EAC9B,CAEOS,QAAAA,IAAaT,GACnB7G,KAAK2G,IAAKR,EAASoB,YAAaV,EACjC,EClDD,MAAMW,EAAS,IAAIlB,EAAQ,iBAQdmB,EAAuBA,CAAO5F,EAAa6F,KACvD,IACC,MAAMC,EAAQC,aAAaC,QAAShG,GACpC,GAAK8F,EAAQ,CACZ,MAAMG,EAASC,KAAKC,MAAOL,GAE3B,MAAuB,iBAAXG,GAAkC,OAAXA,GAAqBG,MAAMC,QAASJ,GAIhEA,EAHNvD,OAAA4D,OAAA5D,OAAA4D,OAAA,GAAYT,GAAmBI,EAIjC,CACD,CAAE,MAAQV,GACTI,EAAOL,KAAM,+CAAgDtF,MAAUuF,EACxE,CACA,OAAOM,GAQKU,EAAqBA,CAAOvG,EAAaf,KACrD,IACC8G,aAAaS,QAASxG,EAAKkG,KAAKO,UAAWxH,GAC5C,CAAE,MAAQsG,GACTI,EAAOL,KAAM,6CAA8CtF,MAAUuF,EACtE,GCjCKmB,EAAoB,mBASpBC,EAA+B,CACpCC,2BAA2B,EAC3BC,8BAA8B,EAC9BC,2BAA2B,EAC3BC,wBAAwB,GAoEnBC,EAAY,CACjBJ,yBAAAA,CAA2BxI,GAC1B,MAAM,0BAAEwI,GAA8BxI,EACtC,OAAOwI,CACR,EACAC,4BAAAA,CAA8BzI,GAC7B,MAAM,6BAAEyI,GAAiCzI,EACzC,OAAOyI,CACR,EACAC,yBAAAA,CAA2B1I,GAC1B,MAAM,0BAAE0I,GAA8B1I,EACtC,OAAO0I,CACR,EACAC,sBAAAA,CAAwB3I,GACvB,MAAM,uBAAE2I,GAA2B3I,EACnC,OAAO2I,CACR,GAYYE,GAAQC,EAAAA,EAAAA,kBA9GF,uCA8GgC,CAClDC,QA3EeA,CACf/I,EAAQwH,EAAsBc,EAAmBC,GACjDS,KAEA,OAASA,EAAOC,MACf,IAAK,gCAAiC,CACrC,MAAMC,EAAQ5E,OAAA4D,OAAA5D,OAAA4D,OAAA,GACVlI,GAAK,CACRwI,0BAA2BQ,EAAOG,UAInC,OADAhB,EAAoBG,EAAmBY,GAChCA,CACR,CACA,IAAK,mCAAoC,CACxC,MAAMA,EAAQ5E,OAAA4D,OAAA5D,OAAA4D,OAAA,GACVlI,GAAK,CACRyI,6BAA8BO,EAAOG,UAItC,OADAhB,EAAoBG,EAAmBY,GAChCA,CACR,CACA,IAAK,gCAAiC,CACrC,MAAMA,EAAQ5E,OAAA4D,OAAA5D,OAAA4D,OAAA,GACVlI,GAAK,CACR0I,0BAA2BM,EAAOG,UAInC,OADAhB,EAAoBG,EAAmBY,GAChCA,CACR,CACA,IAAK,6BAA8B,CAClC,MAAMA,EAAQ5E,OAAA4D,OAAA5D,OAAA4D,OAAA,GACVlI,GAAK,CACR2I,uBAAwBK,EAAOG,UAIhC,OADAhB,EAAoBG,EAAmBY,GAChCA,CACR,CACA,QACC,OAAOlJ,IAkCToJ,QA/Fe,CACfC,2BAA8BC,IAAgB,CAC7CL,KAAM,gCACNE,QAASG,IAEVC,8BAAiCD,IAAgB,CAChDL,KAAM,mCACNE,QAASG,IAEVE,2BAA8BF,IAAgB,CAC7CL,KAAM,gCACNE,QAASG,IAEVG,wBAA2BH,IAAgB,CAC1CL,KAAM,6BACNE,QAASG,KAiFVV,eAGCc,EAAAA,EAAAA,UAAkDb,GCxHpD,MAAM,EAA+BhE,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAY,S,ICKhD8E,EAqGN,SAAUC,EACfC,EACAC,GAGA,GADkE,IAAzCxF,OAAOyF,KAAMF,GAAiBlJ,OAGtD,MAAO,CACNsI,KAAMU,EAAcK,MAKtB,MAAMC,EAAwBJ,EAAeK,WAAaJ,EAAaI,SACjEC,EAAeF,GAAyBJ,EAAeO,SAAWN,EAAaM,OAMrF,OAJCH,QAC0BlG,IAA1B8F,EAAeO,aACSrG,IAAxB+F,EAAaM,OAIN,CACNnB,KAAMU,EAAcU,WACpBC,QAAST,EAAeK,UAEdC,EAEJ,CACNlB,KAAMU,EAAcY,OACpBD,QAAST,EAAeK,SACxBM,eAAgBX,EAAeO,QAErBH,EAEJ,CACNhB,KAAMU,EAAcc,oBACpBH,QAAST,EAAeK,SACxBQ,oBAAqBb,EAAeO,OACpCO,kBAAmBb,EAAaM,QAK3B,CACNnB,KAAMU,EAAciB,0BACpBC,aAAchB,EAAeK,SAC7BY,WAAYhB,EAAaI,SACzBQ,oBAAqBb,EAAeO,OACpCO,kBAAmBb,EAAaM,OAElC,CCtJM,SAAUW,EAAoBC,EAAuBC,GAC1D,OAAK3G,OAAOyF,KAAMiB,GAAarK,SAAW2D,OAAOyF,KAAMkB,GAAatK,QAI7D2D,OAAO4G,QAASF,GAAaG,MAAO,EAAIvJ,EAAKwJ,MAEnD,MACM,gBADGxJ,GAXoByJ,EAaEL,EAAWM,YAbSC,EAaIN,EAAWK,YAZ5DE,QAASH,GAAUE,GDmDrB,SACLE,EACAC,GAEA,GAAKD,EAAWxC,OAASyC,EAAWzC,KACnC,OAAO,EAGR,OAASwC,EAAWxC,MACnB,KAAKU,EAAcK,KAClB,OAAO,EAER,KAAKL,EAAcY,OAClB,OACCkB,EAAWnB,UAAcoB,EAAgCpB,SACzDmB,EAAWjB,iBAAqBkB,EAAgClB,eAGlE,KAAKb,EAAcc,oBAClB,OACCgB,EAAWnB,UAAcoB,EAAoCpB,SAC7DmB,EAAWf,sBACRgB,EAAoChB,qBACvCe,EAAWd,oBAAwBe,EAAoCf,kBAGzE,KAAKhB,EAAciB,0BAClB,OACCa,EAAWZ,eAAmBa,EAA0Cb,cACxEY,EAAWX,aAAiBY,EAA0CZ,YACtEW,EAAWf,sBACRgB,EAA0ChB,qBAC7Ce,EAAWd,oBACRe,EAA0Cf,kBAG/C,KAAKhB,EAAcU,WAClB,OAAOoB,EAAWnB,UAAcoB,EAAoCpB,QAErE,QACC,OAAO,EAEV,CC7FqCqB,CAAoBN,EAAOO,UAAWL,EAAOK,aAevER,IAAUH,EAAYrJ,GAhBjC,IAA+ByJ,EAAsBE,GAmBrD,EDjBA,SAAY5B,GACXA,EAAA,YACAA,EAAA,gBACAA,EAAA,6CACAA,EAAA,yDACAA,EAAA,wBACA,CAND,CAAYA,IAAAA,EAAa,KECzB,MA+CMpB,EAAgC,CACrCsD,QAAS,IAAIC,KA+ERlD,EAAY,CACjBmD,mBAAoB/L,GACZgI,MAAMtG,KAAM1B,EAAM6L,QAAQ9B,QAElCiC,eAAgBhM,GACRA,EAAM6L,QAEdI,eAAgBjM,IAIP,IAFPgI,MAAMtG,KAAMkH,EAAUoD,eAAgBhM,GAAQkM,UAAWC,UACxDC,GAAQA,EAAKC,OAAQ,IAAUD,EAAK/G,cAM3BwD,GAAQC,EAAAA,EAAAA,kBA/IF,wCA+IgC,CAClDC,QA3EeA,CAAE/I,EAAQuI,EAAeS,KACxC,OAASA,EAAOC,MACf,IAAK,aACJ,GAAKjJ,EAAM6L,QAAQS,IAAKtD,EAAOG,QAAQe,UAAa,CAEnD,MAAMqC,EAAgBvM,EAAM6L,QAAQpH,IAAKuE,EAAOG,QAAQe,UAClDsC,EAAYlI,OAAA4D,OAAA5D,OAAA4D,OAAA,GACdqE,GACAvD,EAAOG,QAAQpE,WAGnB,IAAOgG,EAAoBwB,EAAeC,GAGzC,OAFAxM,EAAM6L,QAAQY,IAAKzD,EAAOG,QAAQe,SAAUsC,GAE5ClI,OAAA4D,OAAA5D,OAAA4D,OAAA,GACIlI,GAAK,CACR6L,QAAS,IAAIC,IAAK9L,EAAM6L,UAG3B,CAGA,OAAO7L,EAGR,IAAK,cAGJ,OAFAA,EAAM6L,QAAQa,OAAQ1D,EAAOG,QAAQe,UAErC5F,OAAA4D,OAAA5D,OAAA4D,OAAA,GACIlI,GAAK,CACR6L,QAAS,IAAIC,IAAK9L,EAAM6L,WAI1B,IAAK,cACJ,OAAK7L,EAAM6L,QAAQS,IAAKtD,EAAOG,QAAQe,WAIjCa,EAFiB/K,EAAM6L,QAAQpH,IAAKuE,EAAOG,QAAQe,UAEhBlB,EAAOG,QAAQpE,WAE/C/E,GAITA,EAAM6L,QAAQY,IAAKzD,EAAOG,QAAQe,SAAUlB,EAAOG,QAAQpE,WAE3DT,OAAA4D,OAAA5D,OAAA4D,OAAA,GACIlI,GAAK,CACR6L,QAAS,IAAIC,IAAK9L,EAAM6L,YAI1B,QACC,OAAO7L,IAsBToJ,QA9Fe,CACfuD,UAAWA,CAAEzC,EAAkBnF,KAA+B,CAC7DkE,KAAM,aACNE,QAAS,CAAEe,WAAUnF,eAItB6H,WAAc1C,IAAgB,CAC7BjB,KAAM,cACNE,QAAS,CAAEe,cAGZ2C,WAAYA,CAAE3C,EAAkBnF,KAAoB,CACnDkE,KAAM,cACNE,QAAS,CAAEe,WAAUnF,gBAiFtB6D,UAASA,IC5IJ,SAAUkE,IACf,MAAMC,GAAcC,EAAAA,EAAAA,WAAgEC,GAC5EA,EAAQC,GAAiBlB,kBAGjC,OAAOmB,EAAAA,EAAAA,SAAS,IACRnF,MAAMtG,KAAMqL,EAAYb,UAAWkB,KAAM,CAAEC,EAAkBC,IAC9DD,EAAMhB,OAAUiB,EAAMjB,MAClB,GAEFgB,EAAMhB,MAAQiB,EAAMjB,KACnB,EAED,GAEN,CAAEU,GACN,CCnBM,SAAUQ,IACf,MAAMR,EAAcD,IACdnE,GAAyBqE,EAAAA,EAAAA,WAA8CC,GACrEA,EAAQO,GAAmB7E,0BAGnC,GAAKoE,EAAYpM,QAAU,IAAOgI,EAIjC,OAAO,KAGR,MAAM8E,EAAeV,EAAYW,MAAO,EAAG,GACrCC,EAAiBZ,EAAYW,MAAO,GACpCE,EAAqBD,EAAeE,IAAK9I,GAAaA,EAAUW,MAAOoI,KAAM,MAEnF,OACCC,EAAAA,EAAAA,MAAA,OAAKxI,UAAU,sCAAqCC,SAAA,CACjDiI,EAAaI,IAAK9I,IACnBO,EAAAA,EAAAA,KAACR,EAAM,CAA4BC,UAAYA,EAAYC,qBAAsB,GAAnED,EAAUmF,WAGvByD,EAAehN,OAAS,IACzBoN,EAAAA,EAAAA,MAAA,OAAKxI,UAAU,+CAA+CM,MAAQ+H,EAAkBpI,SAAA,KACpFmI,EAAehN,YAKvB,EFoHE+I,EAAAA,EAAAA,UAA4Db,GG3J9D,MAAM,EAA+BhE,OAAW,GAAc,WCc9D,GAT2B,SAAK,EAAAmJ,IAAK,CACnCC,QAAS,YACTC,MAAO,6BACP1I,UAAuB,SAAK,EAAA2I,KAAM,CAChCC,SAAU,UACVC,SAAU,UACVjP,EAAG,qSCXD,EAA+ByF,OAAW,GAAW,QCcrD,SAAUyJ,IACf,MAAMC,ECXD,SAAyCC,EAAwBA,QACtE,MAAMC,GAAczB,EAAAA,EAAAA,WAAkDC,IACrE,MAAM,qBAAEyB,GAAyBzB,EAAQ0B,EAAAA,OACzC,OAAOD,MAGR,OAAOE,EAAAA,EAAAA,oBAAoBH,QAAAA,EAAe,GAAID,EAC/C,CDImBK,GAGlB,OEZK,WACL,MAAQC,EAA2BC,IAAiCC,EAAAA,EAAAA,WAAqB,GACnFC,GAAaC,EAAAA,EAAAA,QAAiC,MAE9CjD,GAAiBe,EAAAA,EAAAA,WAA+CC,GAC9DA,EAAQC,GAAiBjB,kBAgBjC,OAbAkD,EAAAA,EAAAA,WAAW,K,MAUV,OATKlD,EACJgD,EAAWG,QAAUC,WAAY,KAChCN,GAA8B,IhBZU,MgBezCA,GAA8B,GAC9BO,aAAgC,QAAlBC,EAAAN,EAAWG,eAAO,IAAAG,EAAAA,OAAIxL,IAG9B,KAAK,IAAAwL,EAAC,OAAAD,aAAgC,QAAlBC,EAAAN,EAAWG,eAAO,IAAAG,EAAAA,OAAIxL,KAC/C,CAAEkI,IAEE6C,CACR,CFZwBU,IAOtBlK,EAAAA,EAAAA,KAACmK,EAAAA,MAAK,CACLC,0BAA2B,EAC3BC,KAAOxI,EACPyI,eAAgB,EAChBC,cAAe,EACfC,eAAiBA,OACjBC,2BAA4B,EAC5BC,kBAAmB,EAAKxK,UAExBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCC,UACpDuI,EAAAA,EAAAA,MAACkC,EAAAA,qBAAM,CAACC,UAAU,SAASC,QAAQ,SAASC,QAAU,EAAC5K,SAAA,EACtDF,EAAAA,EAAAA,KAAC+K,EAAAA,KAAI,CAACvN,KAAK,OAAO6M,KAAOxI,EAAQmJ,KAAO,MACxChL,EAAAA,EAAAA,KAAA,MAAAE,UAAM+K,EAAAA,EAAAA,IAAI,eAAgB,kCAC1BxC,EAAAA,EAAAA,MAAA,KAAGxI,UAAU,+BAA8BC,SAAA,EACxC+K,EAAAA,EAAAA,IACD,wEACA,+BACI,KACHA,EAAAA,EAAAA,IACD,yEACA,mCAGFxC,EAAAA,EAAAA,MAACyC,EAAAA,qBAAM,CAACJ,QAAU,EAAID,QAAQ,SAAQ3K,SAAA,EACrCF,EAAAA,EAAAA,KAACmL,EAAAA,OAAM,CAACC,IAAMnC,EAAYoC,QAAQ,UAASnL,UACxC+K,EAAAA,EAAAA,IAAI,oBAAqB,kCAE5BjL,EAAAA,EAAAA,KAACmL,EAAAA,OAAM,CAACG,KAAK,WAAWC,eAAgB,EAAOF,QAAQ,YAAWnL,UAC/D+K,EAAAA,EAAAA,IAAI,oBAAqB,2CAhCzB,IAuCT,CG4CA,MAAMO,EAAsBA,CAC3BC,EACAzG,IAEOyG,EAAoBC,cAAe,gBAAiB1G,OCpGtD,SAAU2G,EAA0BC,GACzC,IAAIC,EAAkC,KAEtC,MAAO,KACoB,OAArBA,GACJC,qBAAsBD,GAEvBA,EAAmBE,sBAAuB,KACzCH,MAGH,CCNA,IAAKI,GAAL,SAAKA,GACJA,EAAAA,EAAA,eACAA,EAAAA,EAAA,2BACAA,EAAAA,EAAA,YACA,CAJD,CAAKA,IAAAA,EAAQ,KAMb,MAAM/J,EAAS,IAAIlB,EAAQ,sBAoKrBkL,EAAoBA,CACzB3F,EACA4F,EACAC,KAEA,MAAMC,EAAeF,EAAeR,cACnC,gBAAiBpF,EAAUtB,aAG5B,IAAOoH,EACN,OAAO,KAGR,MAAMC,EAASC,EACdF,EACA9F,EAAUpB,eACVgH,EACAC,GAGD,OAAOE,QAAAA,EAAU,MAYZC,EAA2BA,CAChCF,EACAG,EACAL,EACAC,KAEA,MAAM,KAAEK,EAAI,OAAE1H,GAAW2H,EAAsBL,EAAcG,EAAYL,GAEnEQ,EAAcR,EAAeS,cAEnC,IACCD,EAAYE,SAAUJ,EAAM1H,EAC7B,CAAE,MAAQjD,GAET,OADAI,EAAOJ,MAAO,uCAAwC,CAAEA,QAAO2K,OAAM1H,WAC9D,IACR,CAGA4H,EAAYG,UAAU,GAEtB,MAAMC,EAAaJ,EAAYK,wBACzBC,EAAcb,EAAQY,wBACtBE,EAAYb,EAAaW,wBAE/B,IAAIG,EAAU,EACVC,EAAU,EAGI,IAAjBL,EAAWM,GACM,IAAjBN,EAAWO,GACU,IAArBP,EAAWQ,OACW,IAAtBR,EAAWS,QAGXL,EAAUD,EAAUpR,KAAOmR,EAAYnR,KACvCsR,EAAUF,EAAUO,IAAMR,EAAYQ,MAEtCN,EAAUJ,EAAWjR,KAAOmR,EAAYnR,KACxCsR,EAAUL,EAAWU,IAAMR,EAAYQ,KAGxC,IAAIC,EAAeX,EAAWS,OAM9B,OALsB,IAAjBE,IACJA,EACCC,SAAUnO,OAAOoO,iBAAkBvB,GAAewB,WAAY,KAAQX,EAAUM,QAG3E,CACNH,EAAGF,EACHG,EAAGF,EACHI,OAAQE,IAcJhB,EAAuBA,CAC5BL,EACAtH,EACAoH,K,cAEA,MAAM2B,EAAa3B,EAAe4B,iBACjC1B,EACA2B,WAAWC,UAAYD,WAAWE,cAGnC,IAAIC,EAAgB,EAChBC,EAA4B,KAE5B3B,EAAoB,KACpB4B,EAAY,EAEhB,KAAU5B,EAAOqB,EAAWQ,YAAe,CAG1C,GAFAD,IAEKA,EA7BuB,IA+B3B,OAAKD,EACG,CAAE3B,KAAM2B,EAAcrJ,OAAQ,GAE/B,CAAE0H,KAAMJ,EAActH,OAAQ,GAGtC,MAAMwJ,EAAmC,QAAtBC,EAAc,QAAdtE,EAAAuC,EAAKgC,iBAAS,IAAAvE,OAAA,EAAAA,EAAE5O,cAAM,IAAAkT,EAAAA,EAAI,EAE7C,GAAK/B,EAAKiC,WAAaC,KAAKC,cA2B5B,GAAoB,IAAfL,EAAL,CAKA,GAAKJ,EAAgBI,GAAcxJ,EAElC,MAAO,CAAE0H,OAAM1H,OAAQA,EAASoJ,GAGjCA,GAAiBI,EAEZ9B,EAAKiC,WAAaC,KAAKE,YAC3BT,EAAe3B,EAVhB,OA7BC,GAAuB,OAAlBA,EAAKqC,SAAoB,CAG7B,GAAKX,EAAgB,GAAKpJ,EAAS,CAElC,MAAMgK,EAAcjB,EAAWQ,WAE/B,OAAKS,aAAW,EAAXA,EAAaL,YAAaC,KAAKE,UAC5B,CAAEpC,KAAMsC,EAAahK,OAAQ,GACzBqJ,EAEJ,CAAE3B,KAAM2B,EAAcrJ,OAAsC,QAA9BiK,EAAsB,QAAtBC,EAAAb,EAAaK,iBAAS,IAAAQ,OAAA,EAAAA,EAAE3T,cAAM,IAAA0T,EAAAA,EAAI,GAGjE,CAAEvC,KAAMJ,EAActH,OAAQ,EACtC,CAGAoJ,GAAiB,EACjB,QACD,CAqBF,CAEA,OAAKC,IAAsC,QAAtBc,EAAAd,EAAaK,iBAAS,IAAAS,OAAA,EAAAA,EAAE5T,QAErC,CAAEmR,KAAM2B,EAAcrJ,OAAQqJ,EAAaK,UAAUnT,QAItD,CAAEmR,KAAMJ,EAActH,OAAQ,ICnVhC,SAAUoK,GAAY,eAAEC,IAC7B,MAAMC,GAAaxF,EAAAA,EAAAA,QAAiC,MAE9CyF,GAAmB3H,EAAAA,EAAAA,WAA8CC,GAC/DA,EAAQO,GAAmBhF,6BAMnC,OHZK,SAAgCuI,GACrC,MAAM6D,GAAsB1F,EAAAA,EAAAA,QAAyB,IAAI2F,KACnDC,GAAa9H,EAAAA,EAAAA,WAAmDC,GAC9DjF,MAAMtG,KAAMuL,EAAQC,GAAiBlB,iBAAiBE,YAGxD,oBAAE6I,EAAmB,uBAAEpM,IAA2BqE,EAAAA,EAAAA,WAGrDC,IACK,CACN8H,oBAAqB9H,EAAQO,GAAmB/E,+BAChDE,uBAAwBsE,EAAQO,GAAmB7E,6BAKrDwG,EAAAA,EAAAA,WAAW,KAEV,GAA6B,OAAxB4B,EACJ,OAGD,MAAMiE,EAAsBC,IAC3BA,EAASC,QAAS5K,IACjB,MAAMoH,EAAeZ,EAAqBC,EAAqBzG,GAE1DoH,IACJA,EAAazM,MAAMkQ,UAAY,GAC/BzD,EAAazM,MAAMmQ,aAAe,IAGnCR,EAAoBxF,QAAQ1C,OAAQpC,MAIhC+K,EAAoBP,EACxBjH,IAAK9I,I,QACL,MAAMuQ,GAC2B,QAAhCzB,EAAqB,QAArBtE,EAAAxK,EAAUuG,mBAAW,IAAAiE,OAAA,EAAAA,EAAE3D,iBAAS,IAAAiI,OAAA,EAAAA,EAAE5K,QAASU,EAAcU,WACpDkL,GAAiBxQ,EAAUsH,MAAO1D,EAExC,OAAK2M,GAAwBC,EAGrB,CACNjL,QAHiBvF,EAAUuG,YAAYM,UAGpBtB,QACnBnF,MAAOJ,EAAUI,OAIZ,OAEPqQ,OAAQC,GAAmB,OAAVA,GAEnB,IAAOV,EAGN,YADAC,EAAmBhN,MAAMtG,KAAMkT,EAAoBxF,UAKpD,MAAMsG,EAAmBL,EAAkBxH,IAAK4H,GAASA,EAAMnL,SAK/D0K,EAJ+BhN,MAAMtG,KAAMkT,EAAoBxF,SAAUoG,OACxElL,IAAaoL,EAAiBC,SAAUrL,KAMzC+K,EAAkBH,QAASU,IAC1B,MAAM,MAAEzQ,EAAK,QAAEmF,GAAYsL,EACrBlE,EAAeZ,EAAqBC,EAAqBzG,GAExDoH,GAIFA,IACJA,EAAazM,MAAMkQ,UAAY,GAAIhQ,cACnCuM,EAAazM,MAAMmQ,aAAe,MAClCR,EAAoBxF,QAAQyG,IAAKvL,OAGjC,CAAEwK,EAAYC,EAAqBpM,EAAwBoI,GAC/D,CG5EC+E,CAAsBrB,GDCjB,SACLC,EACA3D,GAEA,MAAMgF,GAAW/I,EAAAA,EAAAA,WAA+CC,IAC/D,MAAM,0BAAEvE,EAAyB,uBAAEC,GAA2BsE,EAAQO,GACtE,OAAK9E,IACCC,IACG2I,EAAS0E,IAGV1E,EAAS2E,WAGV3E,EAAStH,OAGXkM,EAAcpJ,IAGdqJ,GAAmBjH,EAAAA,EAAAA,WAGzBC,EAAAA,EAAAA,WAAW,KACVgH,EAAiB/G,QAAU,KAC1B,MAAMgH,EAAiBF,EAAYrI,IAAKzB,I,MAAQ,MAAE,CACjDiK,SAAUjK,EAAK1G,KAEfkG,UAAqC,QAA1B2D,EAAAnD,EAAKd,YAAYM,iBAAS,IAAA2D,EAAAA,EAAI,CAAEtG,KAAMU,EAAcK,MAC/D7E,MAAOiH,EAAKjH,MACZkH,KAAMD,EAAKC,QAkCYiK,EAC1B7E,EACAD,EACA4E,EACAL,KAEOtE,GAAaD,IAKGC,EAAQ8E,iBAAkB,qCAClCrB,QAASsB,IACvBA,EAAUC,WAGNV,IAAazE,EAAStH,MAK3BoM,EAAelB,QAAS,EAAImB,WAAUzK,YAAWzG,QAAOkH,WACvD,GAAKA,GAAQ0J,IAAazE,EAAS2E,WAElC,OAGD,IAAItE,EAA0D,KAE9D,GAAK/F,EAAU3C,OAASU,EAAcK,WAE/B,GAAK4B,EAAU3C,OAASU,EAAcU,iBAEtC,GAAKuB,EAAU3C,OAASU,EAAcY,OAC5CoH,EAASJ,EAAmB3F,EAAW4F,EAAgBC,QACjD,GAAK7F,EAAU3C,OAASU,EAAcc,oBAAsB,CAElE,MAAMiM,EAAqC,CAC1CzN,KAAMU,EAAcY,OACpBD,QAASsB,EAAUtB,QACnBE,eAAgBoB,EAAUlB,qBAG3BiH,EAASJ,EAAmBmF,EAAmBlF,EAAgBC,EAChE,MAAO,GAAK7F,EAAU3C,OAASU,EAAciB,0BAA4B,CAExE,MAAM8L,EAAqC,CAC1CzN,KAAMU,EAAcY,OACpBD,QAASsB,EAAUf,aACnBL,eAAgBoB,EAAUlB,qBAG3BiH,EAASJ,EAAmBmF,EAAmBlF,EAAgBC,EAChE,CAEA,GAAKE,EAAS,CAGb,MAAMgF,EAAgBC,SAASC,cAAe,OAC9CF,EAAcpR,UAAY,mCAC1BoR,EAAc1R,MAAM9D,KAAO,GAAIwQ,EAAOe,MACtCiE,EAAc1R,MAAM6N,IAAM,GAAInB,EAAOgB,MAGrC,MAAMmE,EAASF,SAASC,cAAe,OACvCC,EAAOvR,UAAY,0CACnBuR,EAAO7R,MAAM8R,gBAAkB5R,EAC/B2R,EAAO7R,MAAM4N,OAAS,GAAIlB,EAAOkB,WAGjC,MAAMmE,EAAQJ,SAASC,cAAe,OACtCG,EAAMzR,UAAY,yCAClByR,EAAMC,YAAcZ,EACpBW,EAAM/R,MAAM8R,gBAAkB5R,EAG9BwR,EAAcO,YAAaJ,GAC3BH,EAAcO,YAAaF,GAE3BvF,EAAQyF,YAAaP,EACtB,MA/GCL,CAAoB5B,EAAWtF,QAAS2B,EAAqBqF,EAAgBL,IAI9EI,EAAiB/G,WACf,CAAE2G,EAAUG,EAAaxB,EAAWtF,QAAS2B,KAGhD5B,EAAAA,EAAAA,WAAW,KACV,MAMMgI,EAAwBlG,EANTmG,KACfjB,EAAiB/G,SACrB+G,EAAiB/G,YAOnB,OADAvK,OAAOwS,iBAAkB,SAAUF,GAC5B,KACNtS,OAAOyS,oBAAqB,SAAUH,KAErC,GACJ,CCvDCI,CAAkB7C,EAAYD,IAG7B1G,EAAAA,EAAAA,MAAAyJ,EAAAA,SAAA,CAAAhS,SAAA,EAGCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA2CmL,IAAMgE,KAIhEpP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,SACvDmP,IAAoBrP,EAAAA,EAAAA,KAACiI,EAAO,OAG/BjI,EAAAA,EAAAA,KAACgJ,EAAe,MAGnB,CC1CA,MAAM,EAA+BzJ,OAAW,GAAe,YCAzD,SAAU4S,IACf,MAAMC,EAAY7S,OAAO8S,UAAUD,UACnC,IAAIE,EAAc,UAgBlB,OAdKF,EAAU/B,SAAU,WACxBiC,EAAc,UACHF,EAAU/B,SAAU,OAC/BiC,EAAc,iBACHF,EAAU/B,SAAU,YAAgB+B,EAAU/B,SAAU,OACnEiC,EAAc,SACHF,EAAU/B,SAAU,YAAgB+B,EAAU/B,SAAU,UACnEiC,EAAc,SACHF,EAAU/B,SAAU,SAAY+B,EAAU/B,SAAU,WAC/DiC,EAAc,qBACHF,EAAU/B,SAAU,UAAa+B,EAAU/B,SAAU,UAChEiC,EAAc,SAGRA,CACR,CCbM,SAAgBC,I,2CACrB,MAAQC,YAAaC,EAAU,GAAEC,EAAE,KAAEtS,GAA6C,QAApC6J,GAAAtC,EAAAA,EAAAA,QAAQgL,EAAAA,OAAYC,wBAAgB,IAAA3I,EAAAA,EAAI,CAAC,EAEvF,OAAOyI,EAQA,CAAEpS,WAFSmS,aAAU,EAAVA,EAAc,OAAQA,aAAU,EAAVA,EAAc,OAAQA,aAAU,EAAVA,EAAc,KAExDC,KAAItS,eALjB,IAAIyS,QAASC,GAAW/I,WAAY+I,EAAS,YACtCP,IAKf,E,2RCdA,MAAMQ,EAAe,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAGA,WAMK/P,EAAoB,0BASpBgQ,EAAoBC,IAEzBA,EAAiBA,EAAe1K,IAAK1I,GAASA,EAAMuI,MAAO,GAAI,IAC/D,MAAM8K,EAAkBH,EAAa7C,OAAQrQ,IAAWoT,EAAe5C,SAAUxQ,IAEjF,GAAgC,IAA3BqT,EAAgB7X,OAKpB,MAAO,QAHK8X,EAAmB,EAAG,SACfA,EAAmB,GAAI,UACxBA,EAAmB,GAAI,aAI1C,IAAIC,EAAW,KAEf,MAAMC,EAAiBnR,EAAuCc,EAAmB,MAgBjF,OAdKqQ,GAAkBH,EAAgB7C,SAAUgD,GAChDD,EAAWC,GAGXD,EAAWF,EAAiB,GADRC,EAAmB,EAAGD,EAAgB7X,OAAS,MAEnEwH,EAAoBG,EAAmBoQ,IASjC,GAAIA,IALME,KAAKC,MAAOC,OAC3BC,SAAU,IACVC,SAAU,EAAG,KACbC,iBAYGR,EAAoBA,CAAES,EAAaC,IACjCP,KAAKQ,MAAOR,KAAKS,UAAaF,EAAMD,EAAM,IAAQA,ECvCpD,MAAOI,EAIZhT,WAAAA,CAA6BiT,EAA8BC,GAA9B,KAAAD,UAAAA,EAA8B,KAAAC,SAAAA,EAFnD,KAAAjS,OAAiB,IAAIlB,EAAQ,qBAGpCtG,KAAK0Z,sBACL1Z,KAAK2Z,mBACL3Z,KAAK4Z,8BACL5Z,KAAK6Z,wBACN,CAEO,iBAAaC,CAAYN,EAAsBO,G,qCAChDR,EAAiBS,WACrBT,EAAiBS,WAAWxS,OAAOJ,MAClC,0DAA2D2S,MAK7DR,EAAiBS,WAAa,IAAIT,EAAkBC,QAAiB1B,IACtE,E,2RAEO,0BAAOmC,CAAqB9P,EAAkB7E,G,MACpD,GAAK6E,KAAwC,QAA3BqF,EAAA+J,EAAiBS,kBAAU,IAAAxK,OAAA,EAAAA,EAAEgK,UAAUU,UACxD,OAGD,MAAM,UAAEtN,IAAcuN,EAAAA,EAAAA,UAAUhN,GAC3BP,EAAWzC,EAAU,CAAE7E,eAC7B,CAEQoU,mBAAAA,G,MACP,MAAMU,EAASpa,KAAKqa,YACdC,EAAkBrS,MAAMtG,KAAMyY,EAAOjO,UACzCsJ,OAAQzQ,IAAeA,EAAUsH,MACjCwB,IAAK9I,GAAaA,EAAUI,OAC5BqQ,OAAQhK,SAEJ8O,EAAgBhW,OAAA4D,OAAA5D,OAAA4D,OAAA,GAClBnI,KAAKyZ,UAAQ,CAChBe,YAAa9C,IACbvN,SAAUnK,KAAKwZ,UAAUU,SACzB9U,MAAOmT,EAAiB+B,GACxB/O,YAAqD,QAAxCiE,EAAAxP,KAAKya,mBAAoB,sBAAe,IAAAjL,EAAAA,EAAI,CACxD3D,UAAW,CACV3C,KAAMU,EAAcK,OAGtB3E,aAAa,EACbgH,MAAM,IAGPtM,KAAKwZ,UAAUkB,cAAeH,EAC/B,CAKQF,SAAAA,GACP,OAAOra,KAAKwZ,UAAUa,WACvB,CAKQI,kBAAAA,CACPE,G,MAGA,OAAsD,QAA/CnL,EAAExP,KAAKwZ,UAAUoB,uBAA8B,IAAApL,OAAA,EAAAA,EAAImL,EAC3D,CAKQE,kBAAAA,CACPF,EACAtP,GAEArL,KAAKwZ,UAAUqB,mBAAoBF,EAAOtP,EAC3C,CAEQsO,gBAAAA,GACP,MAAM,WAAE9M,EAAU,WAAEC,IAAeqN,EAAAA,EAAAA,UAAUhN,IACvC,mBAAEnB,IAAuBkB,EAAAA,EAAAA,QAAQC,GAEjC2N,EAAqB,IAAIhG,IAAe9I,KACxC+O,EAAyB,IAAIjG,IAEnC9U,KAAKqa,YAAYlF,QAAS,CAAEnQ,EAAWmF,KAG/BnK,KAAKgb,kBAAmBhW,KAI/BA,EAAUsH,KAAOtH,EAAUmF,WAAanK,KAAKwZ,UAAUU,SAElDpN,EAAY3C,EAAUnF,GAC3B+V,EAAuBjF,IAAK3L,MAI7B2Q,EAAmB3F,QAAShL,IACpB4Q,EAAuBxO,IAAKpC,IAC7B0C,EAAY1C,IAGpB,CAEQyP,2BAAAA,GACP,MAAM,sCAAEqB,EAAqC,kBAAEC,EAAiB,gBAAEC,IAAoBjO,EAAAA,EAAAA,QACrFkO,EAAAA,QAEK,UAAExO,IAAcuN,EAAAA,EAAAA,UAAUhN,GAIhC,IAIIkO,EACAC,EALAxR,EAAiBoR,IACjBnR,EAAeoR,KAMnBI,EAAAA,EAAAA,WAAW,KACV,MAAMC,EAAoBN,IACpBO,EAAkBN,IAExB,GAAKK,IAAsB1R,GAAkB2R,IAAoB1R,EAChE,OAGDD,EAAiB0R,EACjBzR,EAAe0R,EAEf,MAAMlQ,EAAc,CACnBM,UAAWhC,EAAmBC,EAAgBC,IAG/CwF,aAAc8L,GACd9L,aAAc+L,GAEdA,EAAqBhM,WAAY,MnBlB9B,SACLxF,EACAC,EACA2R,G,0CAEA,MAAM,iBAAEC,IAAqBxB,EAAAA,EAAAA,UAAUjC,EAAAA,QACjC,iBAAE0D,EAAgB,mBAAEC,IAAuB3O,EAAAA,EAAAA,QAAQ0B,EAAAA,OAEnDkN,EAASF,IACTG,EAAWF,IAEjB,IAAOC,IAAYC,IAAcjS,EAAeK,SAC/C,OAWD,MAAM6R,EAAQ,CACbnQ,UAAW,CAAE/B,iBAAgBC,eAAc2R,0BAGtCC,EAAkB,WAAYI,EAAUD,EAAQE,EAAO,CAC5DC,YAAY,GAEd,E,+QmBXSC,CACJpS,EACAC,EACAkR,KAEIrO,EAAW5M,KAAKwZ,UAAUU,SAAU,CAAE3O,iBzB1LG,IyB6L/C8P,EAAyB/L,WAAY,KACpCtP,KAAK6a,mBAAoB,cAAetP,IzB/LU,MyBkMrD,CAEQsO,sBAAAA,GACP,MAAMsC,EAAsB,IAAIpQ,KAC1B,UAAEa,EAAS,WAAEC,EAAU,WAAEC,IAAeqN,EAAAA,EAAAA,UAAUhN,GAExDnN,KAAKwZ,UAAU4C,GAAI,SAAU,EAAIC,QAAOC,UAASC,cAChD,MAAMC,EAAoBxc,KAAKqa,YAE/B,IAAKgC,KAAUE,GAAUpH,QAAS8C,IACjC,MAAMjT,EAAYwX,EAAkB9X,IAAKuT,GAEpCkE,EAAoB5P,IAAK0L,KAC7B1I,aAAc4M,EAAoBzX,IAAKuT,IACvCkE,EAAoBxP,OAAQsL,IAGtBjY,KAAKgb,kBAAmBhW,KAK1BA,EAAUmF,WAAanK,KAAKwZ,UAAUU,UAa3ClV,EAAUM,aAAc,EACxBN,EAAUsH,MAAO,EAEZQ,EAAYmL,EAAIjT,KAZW,IAA1BA,EAAUM,aACTsH,EAAWqL,EAAI,CACnB3S,aAAa,OAajBgX,EAAQnH,QAAS8C,IAGXkE,EAAoB5P,IAAK0L,KAIzBrL,EAAWqL,EAAI,CACnB3S,aAAa,IAGd6W,EAAoBzP,IACnBuL,EACA3I,WAAY,KACX6M,EAAoBxP,OAAQsL,GACvBpL,EAAYoL,IzBtPY,UyB2PlC,CAEQ+C,iBAAAA,CAAmBhW,GAG1B,UAAOA,aAAS,EAATA,EAAWmF,YAAcnF,aAAS,EAATA,EAAWiT,MAAQjT,aAAS,EAATA,EAAWuG,aAK/D,ECrQM,MAAMkR,EAAeC,OAAOD,aAS7BE,GARuBD,OAAOE,cAQd,SAQhBC,GAAqB,WAOdC,GAAgB,CAACC,EAAGC,IATTD,IAAKA,EAAEE,QAAQN,EAAe,IASPO,CAASH,EAAEE,QAAQJ,GAAoBM,GAAS,GAAGH,IAjB9ED,IAAKA,EAAEK,cAiBmFA,CAAYD,OAwBxC,oBAAhBE,aAA8B,IAAIA,YAmC7F,IAAIC,GAAyC,oBAAhBC,YAA8B,KAAO,IAAIA,YAAY,QAAS,CAAEC,OAAO,EAAMC,WAAW,IAGxHH,IAAuE,IAApDA,GAAgBI,OAAO,IAAIrd,YAAcO,SAO9D0c,GAAkB,MAOb,MC5FMK,GAAS,IAAM,IAAI5R,ICsBhC,IAAI6R,GAAgB,IAzBpB,MACE,WAAArX,GACEvG,KAAK8N,IAAM,IAAI/B,GACjB,CAMA,OAAA1D,CAASxG,EAAKgc,GACZ7d,KAAK8N,IAAIpB,IAAI7K,EAAKgc,EACpB,CAKA,OAAAhW,CAAShG,GACP,OAAO7B,KAAK8N,IAAIpJ,IAAI7C,EACtB,GAQEic,IAAc,EAElB,IAG8B,oBAAjBlW,eACTgW,GAAgBhW,aAChBkW,IAAc,EAElB,CAAE,MAAOxe,GAAK,CAMP,MAAMye,GAAaH,GCvCbI,GAA4B,oBAAZC,SAA2BA,QAAQC,SAAW,cAAcC,KAAKF,QAAQC,QAAQvY,MAEjGyY,GAA8B,oBAAXtZ,SAA2BkZ,GAO3D,IAAIK,GALsC,oBAAdzG,WAA4B,MAAMuG,KAAKvG,UAAU0G,UAM7E,MAAMzX,GAAO,GAoDWlB,IAjDF,MACpB,QAAe3B,IAAXqa,GACF,GAAIL,GAAQ,CACVK,GAAS,KACT,MAAME,EAAQN,QAAQO,KACtB,IAAIC,EAAgB,KAEpB,IAAK,IAAI9e,EAAI,EAAGA,EAAI4e,EAAM3d,OAAQjB,IAAK,CACrC,MAAM+e,EAAOH,EAAM5e,GACH,MAAZ+e,EAAK,IACe,OAAlBD,GACFJ,GAAO3R,IAAI+R,EAAe,IAE5BA,EAAgBC,GAEM,OAAlBD,GACFJ,GAAO3R,IAAI+R,EAAeC,GAC1BD,EAAgB,MAEhB5X,GAAK8X,KAAKD,EAGhB,CACsB,OAAlBD,GACFJ,GAAO3R,IAAI+R,EAAe,GAG9B,KAA+B,iBAAbG,UAChBP,GAAS,MAEPO,SAASC,QAAU,KAAKlR,MAAM,GAAGmR,MAAM,KAAK3J,QAAQ4J,IACpD,GAAkB,IAAdA,EAAGne,OAAc,CACnB,MAAOiB,EAAKwJ,GAAS0T,EAAGD,MAAM,KAC9BT,GAAO3R,IAAI,KAAK,GAAqB7K,EAAK,OAAQwJ,GAClDgT,GAAO3R,IAAI,IAAI,GAAqB7K,EAAK,OAAQwJ,EACnD,KAGFgT,GAAS,KAGb,OAAOA,IAQuBW,GAAgBzS,IAAI5G,GA6BrBsZ,CAAS,KAGN,eAhBPtZ,KAAQqY,YC/EOha,KAAXlF,ED+EIkf,GAAoCC,QAAQiB,IAAIvZ,EAAKuT,eAA6C,GAAmBrR,QAAQlC,IC/E1G,KAAO7G,EAA9BA,OD4FyBqgB,CAGtB,cE7F3B,MA8DMC,GAAW,GAvCAC,IACtB,IAAItC,EAAI,GACR,IAAK,IAAIpd,EAAI,EAAGA,EAAI0f,EAAMC,WAAY3f,IACpCod,GAAK,EAAoBsC,EAAM1f,IAGjC,OAAO4f,KAAKxC,IAOOsC,GAASG,OAAO7d,KAAK0d,EAAMjf,OAAQif,EAAMI,WAAYJ,EAAMC,YAAYtG,SAAS,UA6BxF0G,GAAa,GAtBA3C,IAExB,MAAM7d,EAAIygB,KAAK5C,GACTsC,GA9C+BpgB,EA8CCC,EAAE0B,OA9CI,IAAIP,WAAWpB,IAAtBA,MA+CrC,IAAK,IAAIU,EAAI,EAAGA,EAAIT,EAAE0B,OAAQjB,IAC5B0f,EAAM1f,GAAKT,EAAE0gB,WAAWjgB,GAE1B,OAAO0f,GAMctC,IACrB,MAAM8C,EAAML,OAAO7d,KAAKob,EAAG,UAC3B,OAAO,IAAI1c,WAAWwf,EAAIzf,OAAQyf,EAAIJ,WAAYI,EAAIP,aClD3CQ,GAAchb,OAAOib,GAAGC,KAAKC,EAAEH,YAC/BI,GAAgBpb,OAAOib,GAAGC,KAAKC,EAAEC,cACjCC,GAAoBrb,OAAOib,GAAGC,KAAKC,EAAEE,kBACrCC,GAAsBtb,OAAOib,GAAGC,KAAKC,EAAEG,oBACvCC,GAAwBvb,OAAOib,GAAGC,KAAKC,EAAEI,sBACzCC,GAAMxb,OAAOib,GAAGC,KAAKC,EAAEK,ICT9B,SAAgBC,GAAYC,EAAAC,G,sCACjCC,EACAC,EACAC,EAAW,IAEX,MAAMC,GAAW,IAAIxD,aAAcyD,OAAQJ,GAE3C,GAAK5b,OAAOic,gBAEX,OApBF,SAA2BC,EAA0BJ,EAAW,IAG/D,OAFkB3Y,MAAMtG,KAAM,IAAItB,WAAY2gB,IACvBlT,IAAK+R,GAAOA,EAAI7G,SAAU4H,GAAW3H,SAAU,EAAG,MAAQlL,KAAM,GAExF,CAgBSkT,OADkBnc,OAAOoc,OAAOC,OAAO3f,OAAQmf,EAAWE,GAC5BD,GAetC,MAAM,IAAI5f,MAAO,6EAClB,E,2RAtCe,IAAIsF,EAAQ,U,uSC0B3B,SAAS8a,GAAkBC,GAC1B,OAAOjhB,GAAiB6f,GAAyBoB,GAClD,CA+EM,SAAUC,GAAmBD,G,MAElC,MAAME,EAAoE,QAAjD/R,EAAE6R,EAAQG,YAAuC,IAAAhS,OAAA,EAAAA,EAAE9K,IAAK,WAGjF,MAAO,iBAAoB6c,EAAUA,EAFb,CAGzB,CCtHA,MAAM,GAA+Bzc,OAAW,GAAY,S,eCcrD,MAAM,GAAS,IAAM,IAAIiH,IAgCnB,GAAiB,CAAC+B,EAAKjM,EAAK4f,KACvC,IAAI/U,EAAMoB,EAAIpJ,IAAI7C,GAIlB,YAHYmC,IAAR0I,GACFoB,EAAIpB,IAAI7K,EAAK6K,EAAM+U,KAEd/U,GC7CI,GAAS,IAAM,IAAIoI,ICEnB,GAAe4H,OAAOD,aAe7B,IAduBC,OAAOE,cAMD,GAAa,OAQ1B,SAQhB,GAAqB,WAOd,GAAgB,CAACG,EAAGC,IATTD,IAAKA,EAAEE,QAAQ,GAAe,IASP,CAASF,EAAEE,QAAQ,GAAoBE,GAAS,GAAGH,IAjB9ED,IAAKA,EAAEK,cAiBmF,CAAYD,OAwB7G,GAAqE,oBAAhBE,YAA8B,IAAIA,YAAgB,KAmC7G,IAAI,GAAyC,oBAAhBE,YAA8B,KAAO,IAAIA,YAAY,QAAS,CAAEC,OAAO,EAAMC,WAAW,IAGxH,IAAuE,IAApD,GAAgBC,OAAO,IAAIrd,YAAcO,SAO9D,GAAkB,MCvEpB,IAAI,GAAgB,IAzBpB,MACE,WAAA2F,GACEvG,KAAK8N,IAAM,IAAI/B,GACjB,CAMA,OAAA1D,CAASxG,EAAKgc,GACZ7d,KAAK8N,IAAIpB,IAAI7K,EAAKgc,EACpB,CAKA,OAAAhW,CAAShG,GACP,OAAO7B,KAAK8N,IAAIpJ,IAAI7C,EACtB,GAQE,IAAc,EAGlB,IAE8B,oBAAjB+F,cAAgCA,eACzC,GAAgBA,aAChB,IAAc,EAElB,CAAE,MAAOtI,GAAK,CAOP,MAAM,GAAa,GCFb,GAAO2I,MAAMtG,KCrCb,IDoHUsG,MAAMC,QCpHY,oBAAZ+V,SAA2BA,QAAQC,SAAW,cAAcC,KAAKF,QAAQC,QAAQvY,OAA0F,qBAAjFpB,OAAO7D,UAAUsY,SAAS9U,KAAwB,oBAAZ+Z,QAA0BA,QAAU,IAGpL,GAA8B,oBAAXnZ,QAA8C,oBAAb+R,WAA6B,GAS9F,IAAI,GAPsC,oBAAde,WACxB,MAAMuG,KAAKvG,UAAU0G,UAOzB,MAAM,GAAO,GAmDA,GAAY3Y,GAhDH,MACpB,QAAe3B,IAAX,GACF,GAAI,GAAQ,CACV,GAAS,KACT,MAAMua,EAAQN,QAAQO,KACtB,IAAIC,EAAgB,KACpB,IAAK,IAAI9e,EAAI,EAAGA,EAAI4e,EAAM3d,OAAQjB,IAAK,CACrC,MAAM+e,EAAOH,EAAM5e,GACH,MAAZ+e,EAAK,IACe,OAAlBD,GACF,GAAO/R,IAAI+R,EAAe,IAE5BA,EAAgBC,GAEM,OAAlBD,GACF,GAAO/R,IAAI+R,EAAeC,GAC1BD,EAAgB,MAEhB,GAAKE,KAAKD,EAGhB,CACsB,OAAlBD,GACF,GAAO/R,IAAI+R,EAAe,GAG9B,KAA+B,iBAAbG,UAChB,GAAS,MACRA,SAASC,QAAU,KAAKlR,MAAM,GAAGmR,MAAM,KAAK3J,QAAS4J,IACpD,GAAkB,IAAdA,EAAGne,OAAc,CACnB,MAAOiB,EAAKwJ,GAAS0T,EAAGD,MAAM,KAC9B,GAAOpS,IAAI,KAAK,GAAqB7K,EAAK,OAAQwJ,GAClD,GAAOqB,IAAI,IAAI,GAAqB7K,EAAK,OAAQwJ,EACnD,KAGF,GAAS,KAGb,OAAO,IASyB,GAAgBkB,IAAI5G,GAgBzC,GAAeA,IAC1B,YCnFwC3B,KAAXlF,EDmF7B,GAC+Bmf,QAAQiB,IAAIvZ,EAAKuT,cAAcwI,WAAW,IAAK,MAC/C,GAAmB7Z,QAAQlC,ICrFN,KAAO7G,EAA9BA,OD+GlB,GAAW6G,GACtB,GAAS,KAAOA,IAA+B,OAAtB,GAAYA,GE4BhB,IAAC0F,GFzBE,GAAQ,cAGf,KEsBKA,GFrBZ4S,QAAQiB,IAAIyC,YAAa,CAAC,OAAQ,IAAK,KEqBA/L,SAASvK,OFVzD,GAAS,iBACT,GAAQ,eACP,IAAU4S,QAAQ2D,OAAOC,UACxB,IACD,GAAS,YACoB,OAA7B,GAAY,eACX,GAAY,SAAW,IAAIjM,SAAS,UAPlC,MG7DM,GAAW,GAzCAyJ,IACtB,IAAItC,EAAI,GACR,IAAK,IAAIpd,EAAI,EAAGA,EAAI0f,EAAMC,WAAY3f,IACpCod,GAAK,GAAoBsC,EAAM1f,IAGjC,OAAO4f,KAAKxC,IAQOsC,GAASG,OAAO7d,KAAK0d,EAAMjf,OAAQif,EAAMI,WAAYJ,EAAMC,YAAYtG,SAAS,UA8BxF,GAAa,GAvBA+D,IAExB,MAAM7d,EAAIygB,KAAK5C,GACTsC,GA/C+BpgB,EA+CCC,EAAE0B,OA/CI,IAAIP,WAAWpB,IAAtBA,MAgDrC,IAAK,IAAIU,EAAI,EAAGA,EAAIT,EAAE0B,OAAQjB,IAC5B0f,EAAM1f,GAAKT,EAAE0gB,WAAWjgB,GAE1B,OAAO0f,GAOctC,IACrB,MAAM8C,EAAML,OAAO7d,KAAKob,EAAG,UAC3B,OAnDkD3c,EAmDPyf,EAAIzf,OAnDWqf,EAmDHI,EAAIJ,WAnDW7e,EAmDCif,EAAIP,WAnDM,IAAIjf,WAAWD,EAAQqf,EAAY7e,GAAnE,IAACR,EAAQqf,EAAY7e,GCQlEkhB,GAAW,IAAI/V,IAmCfgW,GAAiC,oBAArBC,iBAhClB,MAIE,WAAAzb,CAAa0b,GNsBSC,MMrBpBliB,KAAKiiB,KAAOA,EAIZjiB,KAAKmiB,UAAY,KAIjBniB,KAAKoiB,UAAY9iB,GAAKA,EAAEuC,MAAQogB,GAA2B,OAAnBjiB,KAAKmiB,WAAsBniB,KAAKmiB,UAAU,CAAErhB,KAAM,GAAkBxB,EAAEue,UAAY,MNatGqE,EMZHliB,KAAKoiB,UNYc,IAAe9K,iBAAiB,UAA8B,EMXpG,CAKA,WAAA+K,CAAaxC,GACX,GAAmBxX,QAAQrI,KAAKiiB,KAAM,GDzBe,IAAI5hB,WCyBoCwf,IAC/F,CAEA,KAAAyC,GNWuBJ,QMVHliB,KAAKoiB,UNUc,IAAe7K,oBAAoB,UAA8B,EMTxG,GAM0EyK,iBAMtEO,GAAaN,GACjB,GAAmBH,GAAUG,EAAM,KACjC,MAAMO,EAAO,KACPC,EAAK,IAAIV,GAAGE,GAMlB,OADAQ,EAAGN,UAAY7iB,GAAKkjB,EAAKrN,QAAQuN,GAAOA,EAAIpjB,EAAEwB,KAAM,qBAC7C,CACL2hB,KAAID,UAyCGG,GAAU,CAACV,EAAMnhB,EAAM8hB,EAAS,QAC3C,MAAMxjB,EAAImjB,GAAWN,GACrB7iB,EAAEqjB,GAAGJ,YAAYvhB,GACjB1B,EAAEojB,KAAKrN,QAAQuN,GAAOA,EAAI5hB,EAAM8hB,KC3GrBC,GAAcC,KAAKC,ICfnB1J,GAAQR,KAAKQ,MAwBbF,IAvBON,KAAKmK,KACNnK,KAAKoK,IACJpK,KAAKqK,KACJrK,KAAKC,MACLD,KAAKsK,MACNtK,KAAKuK,KACNvK,KAAKlS,IACJkS,KAAKwK,KAgBN,CAACnkB,EAAGC,IAAMD,EAAIC,EAAID,EAAIC,GAY5BmkB,IAFQC,OAAOC,MAET3K,KAAKyK,KCtBXG,ID+BO5K,KAAK6K,KC/BL,KAsCPC,GAAQ,ICrBd,MAAMC,GACX,WAAArd,GACEvG,KAAK6jB,KAAO,EACZ7jB,KAAK8jB,KAAO,IAAIzjB,WAAW,KAI3BL,KAAK+jB,KAAO,EACd,EAOK,MAAMC,GAAgB,IAAM,IAAIJ,GAkB1B,GAASK,IACpB,IAAIhlB,EAAMglB,EAAQJ,KAClB,IAAK,IAAIlkB,EAAI,EAAGA,EAAIskB,EAAQF,KAAKnjB,OAAQjB,IACvCV,GAAOglB,EAAQF,KAAKpkB,GAAGiB,OAEzB,OAAO3B,GAmBIilB,GAAeD,IAC1B,MAAME,EAAW,IAAI9jB,WAAW,GAAO4jB,IACvC,IAAIG,EAAS,EACb,IAAK,IAAIzkB,EAAI,EAAGA,EAAIskB,EAAQF,KAAKnjB,OAAQjB,IAAK,CAC5C,MAAMN,EAAI4kB,EAAQF,KAAKpkB,GACvBwkB,EAASzX,IAAIrN,EAAG+kB,GAChBA,GAAU/kB,EAAEuB,MACd,CAEA,OADAujB,EAASzX,IAAI,IAAIrM,WAAW4jB,EAAQH,KAAK1jB,OAAQ,EAAG6jB,EAAQJ,MAAOO,GAC5DD,GA0BIE,GAAQ,CAACJ,EAASzhB,KAC7B,MAAM8hB,EAAYL,EAAQH,KAAKljB,OAC3BqjB,EAAQJ,OAASS,IACnBL,EAAQF,KAAKpF,KAAKsF,EAAQH,MAC1BG,EAAQH,KAAO,IAAIzjB,WAAuB,EAAZikB,GAC9BL,EAAQJ,KAAO,GAEjBI,EAAQH,KAAKG,EAAQJ,QAAUrhB,GA2HpB+hB,GAAe,CAACN,EAASzhB,KACpC,KAAOA,EAAM,IACX6hB,GAAMJ,EAAS,GAAe,GAAezhB,GAC7CA,EAAM,GAAWA,EAAM,KAEzB6hB,GAAMJ,EAAS,GAAezhB,IA+InBgiB,IAhHM,IAAInkB,WAAW,KACFO,OA+CD,IAA6C,GAAyB6jB,WAgEtE,CAACR,EAASS,KACvC,MAAMJ,EAAYL,EAAQH,KAAKljB,OACzBijB,EAAOI,EAAQJ,KACfc,EAAc,GAASL,EAAYT,EAAMa,EAAW9jB,QACpDgkB,EAAeF,EAAW9jB,OAAS+jB,EFrXxB,IAACzlB,EAAGC,EEsXrB8kB,EAAQH,KAAKpX,IAAIgY,EAAWG,SAAS,EAAGF,GAAcd,GACtDI,EAAQJ,MAAQc,EACZC,EAAe,IAGjBX,EAAQF,KAAKpF,KAAKsF,EAAQH,MAE1BG,EAAQH,KAAO,IAAIzjB,YF7XHnB,EE6XmC,EAAZolB,IF7XpBnlB,EE6XmCylB,GF7XrB1lB,EAAIC,GE+XrC8kB,EAAQH,KAAKpX,IAAIgY,EAAWG,SAASF,IACrCV,EAAQJ,KAAOe,KAWNE,GAAqB,CAACb,EAASS,KAC1CH,GAAaN,EAASS,EAAWpF,YACjCkF,GAAgBP,EAASS,IAmDN,IAAIK,SAAS,IAAIC,YAAY,IC7d3C,MAAMC,GAAmB1B,OAAO0B,iBCE1B,IDDmB1B,OAAO2B,iBAOd3B,OAAO4B,UACX5B,OAAOC,MACJD,OAAOtQ,SCRT8J,GAAK,IAAI/b,MAAM+b,ICwB/BqI,GAA4B,GAAa,2BACzCC,GAAyB,GAAa,wBAKrC,MAAMC,GAIX,WAAA/e,CAAame,GAMX1kB,KAAKulB,IAAMb,EAMX1kB,KAAKhB,IAAM,CACb,EAQK,MAmDMwmB,GAAoBC,GAhBH,EAACA,EAASxmB,KACtC,MAAMymB,EAAO,IAAIrlB,WAAWolB,EAAQF,IAAInlB,OAAQqlB,EAAQzmB,IAAMymB,EAAQF,IAAI9F,WAAYxgB,GAEtF,OADAwmB,EAAQzmB,KAAOC,EACRymB,GAamCC,CAAeF,EAASG,GAAYH,IA2HnEG,GAAcH,IACzB,IAAIjjB,EAAM,EACNqjB,EAAO,EACX,MAAM5mB,EAAMwmB,EAAQF,IAAI3kB,OACxB,KAAO6kB,EAAQzmB,IAAMC,GAAK,CACxB,MAAM6mB,EAAIL,EAAQF,IAAIE,EAAQzmB,OAI9B,GAFAwD,IAAasjB,EAAI,IAAgBD,EACjCA,GAAQ,IACJC,EAAI,GACN,OAAOtjB,EAGT,GAAIA,EAAM,GACR,MAAM6iB,EAGV,CACA,MAAMD,IC5PK,GAAQvM,KAAKQ,MCcb,IDbOR,KAAKmK,KACNnK,KAAKoK,IACJpK,KAAKqK,KACJrK,KAAKC,MACLD,KAAKsK,MACNtK,KAAKuK,KACNvK,KAAKlS,IACJkS,KAAKwK,KA0BJE,OAAOC,MAET3K,KAAKyK,IASJzK,KAAK6K,KC/BL,KAsCP,GAAQ,IClDR,GAAehH,OAAOD,aAsDtB,IArDgBC,OAAOE,cAMD,GAAa,OA+CkC,oBAAhBS,YAA8B,IAAIA,YAAgB,MAavG,GAAa,GAPO0I,GAAO,GAAgBjF,OAAOiF,GAjB5BA,IACjC,MAAMC,EAAgBC,SAASC,mBAAmBH,IAC5C9mB,EAAM+mB,EAAcplB,OACpBif,EAAM,IAAIxf,WAAWpB,GAC3B,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAKU,IACvBkgB,EAAIlgB,GAA4BqmB,EAAcG,YAAYxmB,GAE5D,OAAOkgB,GAuCF,IAAI,GAAyC,oBAAhBtC,YAA8B,KAAO,IAAIA,YAAY,QAAS,CAAEC,OAAO,EAAMC,WAAW,IAGxH,IAAuE,IAApD,GAAgBC,OAAO,IAAIrd,YAAcO,SAO9D,GAAkB,MCtEb,MAAM,GACX,WAAA2F,GACEvG,KAAK6jB,KAAO,EACZ7jB,KAAK8jB,KAAO,IAAIzjB,WAAW,KAI3BL,KAAK+jB,KAAO,EACd,EAOK,MA6EM,GAAQ,CAACE,EAASzhB,KAC7B,MAAM8hB,EAAYL,EAAQH,KAAKljB,OAC3BqjB,EAAQJ,OAASS,IACnBL,EAAQF,KAAKpF,KAAKsF,EAAQH,MAC1BG,EAAQH,KAAO,IAAIzjB,WAAuB,EAAZikB,GAC9BL,EAAQJ,KAAO,GAEjBI,EAAQH,KAAKG,EAAQJ,QAAUrhB,GA2HpB,GAAe,CAACyhB,EAASzhB,KACpC,KAAOA,EAAM,IACX,GAAMyhB,EAAS,GAAe,GAAezhB,GAC7CA,EAAM,GAAWA,EAAM,KAEzB,GAAMyhB,EAAS,GAAezhB,IA+B1B,GAAa,IAAInC,WAAW,KAC5B,GAAe,GAAWO,OAAS,EA+C5B,GAAkB,IAA6C,GAAyB6jB,WAtChE,CAACR,EAAS8B,KAC7C,GAAIA,EAAInlB,OAAS,GAAc,CAG7B,MAAMwlB,EAAU,GAAuB3B,WAAWsB,EAAK,IAAYK,SAAW,EAC9E,GAAanC,EAASmC,GACtB,IAAK,IAAIzmB,EAAI,EAAGA,EAAIymB,EAASzmB,IAC3B,GAAMskB,EAAS,GAAWtkB,GAE9B,MACE,GAAmBskB,EAAS,GAAkB8B,KAWX,CAAC9B,EAAS8B,KAC/C,MAAMC,EAAgBC,SAASC,mBAAmBH,IAC5C9mB,EAAM+mB,EAAcplB,OAC1B,GAAaqjB,EAAShlB,GACtB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAKU,IACvB,GAAMskB,EAAgC+B,EAAcG,YAAYxmB,KAsGvD,GAAqB,CAACskB,EAASS,KAC1C,GAAaT,EAASS,EAAWpF,YA3BJ,EAAC2E,EAASS,KACvC,MAAMJ,EAAYL,EAAQH,KAAKljB,OACzBijB,EAAOI,EAAQJ,KACfc,GH5XYzlB,EG4XWolB,EAAYT,IH5XpB1kB,EG4X0BulB,EAAW9jB,QH5XvB1B,EAAIC,EAAtB,IAACD,EAAGC,EG6XrB,MAAMylB,EAAeF,EAAW9jB,OAAS+jB,EACzCV,EAAQH,KAAKpX,IAAIgY,EAAWG,SAAS,EAAGF,GAAcd,GACtDI,EAAQJ,MAAQc,EACZC,EAAe,IAGjBX,EAAQF,KAAKpF,KAAKsF,EAAQH,MAE1BG,EAAQH,KAAO,IAAIzjB,WH7XJ,EAACnB,EAAGC,IAAMD,EAAIC,EAAID,EAAIC,EG6XP,CAAqB,EAAZmlB,EAAeM,IAEtDX,EAAQH,KAAKpX,IAAIgY,EAAWG,SAASF,IACrCV,EAAQJ,KAAOe,IAajB,CAAgBX,EAASS,IAmDN,IAAIK,SAAS,IAAIC,YAAY,IC7d3C,MAAM,GAAmBzB,OAAO0B,iBCE1B,IDDmB1B,OAAO2B,iBAOd3B,OAAO4B,UACX5B,OAAOC,MACJD,OAAOtQ,SCRT8J,GAAK,IAAI/b,MAAM+b,ICwB/B,GAA4B,GAAa,2BACzC,GAAyB,GAAa,wBAKrC,MAAM,GAIX,WAAAxW,CAAame,GAMX1kB,KAAKulB,IAAMb,EAMX1kB,KAAKhB,IAAM,CACb,EAQK,MAmDM,GAAoBymB,GAhBH,EAACA,EAASxmB,KACtC,MAAMymB,EAAO,IAAIrlB,WAAWolB,EAAQF,IAAInlB,OAAQqlB,EAAQzmB,IAAMymB,EAAQF,IAAI9F,WAAYxgB,GAEtF,OADAwmB,EAAQzmB,KAAOC,EACRymB,GAamC,CAAeD,EAAS,GAAYA,IAwBnE,GAAYA,GAAWA,EAAQF,IAAIE,EAAQzmB,OAmG3C,GAAcymB,IACzB,IAAIjjB,EAAM,EACNqjB,EAAO,EACX,MAAM5mB,EAAMwmB,EAAQF,IAAI3kB,OACxB,KAAO6kB,EAAQzmB,IAAMC,GAAK,CACxB,MAAM6mB,EAAIL,EAAQF,IAAIE,EAAQzmB,OAI9B,GAFAwD,IAAasjB,EAAI,IAAgBD,EACjCA,GAAQ,IACJC,EAAI,GACN,OAAOtjB,EAGT,GAAIA,EAAM,GACR,MAAM,EAGV,CACA,MAAM,IA+HK,GAAgB,GAbOijB,GACjB,GAAyB/H,OAAO,GAAkB+H,IAhC/BA,IACpC,IAAIY,EAAe,GAAYZ,GAC/B,GAAqB,IAAjBY,EACF,MAAO,GACF,CACL,IAAIL,EAAgBtJ,OAAOE,cAAc,GAAU6I,IACnD,KAAMY,EAAe,IACnB,KAAOA,KACLL,GAAiBtJ,OAAOE,cAAc,GAAU6I,SAGlD,KAAOY,EAAe,GAAG,CACvB,MAAMC,EAAUD,EAAe,IAAQA,EAAe,IAEhDhH,EAAQoG,EAAQF,IAAIV,SAASY,EAAQzmB,IAAKymB,EAAQzmB,IAAMsnB,GAC9Db,EAAQzmB,KAAOsnB,EAEfN,GAAiBtJ,OAAOE,cAAc2J,MAAM,KAAyB,GACrEF,GAAgBC,CAClB,CAEF,OAAOE,mBAAmBC,OAAOT,GACnC,GC5TWU,GAAiB,CAACzC,EAAS0C,KACtC,GAAsB1C,EAXW,GAYjC,MAAM2C,EAAK,GAAoBD,GAC/B,GAA4B1C,EAAS2C,IAQ1BC,GAAiB,CAAC5C,EAAS0C,EAAKG,KAC3C,GAAsB7C,EArBW,GAsBjC,GAA4BA,EAAS,GAAsB0C,EAAKG,KAoBrDC,GAAgB,CAACtB,EAASkB,EAAKK,KAC1C,IACE,GAAcL,EAAK,GAA2BlB,GAAUuB,EAC1D,CAAE,MAAO5f,GAEPL,QAAQK,MAAM,2CAA4CA,EAC5D,GAmBW6f,GAAaF,GCpFb,GAAcjE,KAAKC,ICPnB,GAAS,IAAM,IAAIhX,ICRnB,GAAS,IAAM,IAAI+I,IC6CnB,GAAO7M,MAAMtG,KA+EHsG,MAAMC,QClCtB,MAAMgf,GACX,WAAA3gB,GAKEvG,KAAKmnB,WAAa,IACpB,CAMA,EAAA/K,CAAIzW,EAAMpG,GH/DkB,EAACuO,EAAKjM,EAAK4f,KACvC,IAAI/U,EAAMoB,EAAIpJ,IAAI7C,GAIlB,YAHYmC,IAAR0I,GACFoB,EAAIpB,IAAI7K,EAAK6K,EAAM+U,KAEd/U,GG2DL,CAAmB1M,KAAKmnB,WAAYxhB,EAAM,IAAYmQ,IAAIvW,EAC5D,CAMA,IAAA6nB,CAAMzhB,EAAMpG,GAIV,MAAM8nB,EAAK,IAAIxgB,KACb7G,KAAKsnB,IAAI3hB,EAAM0hB,GACf9nB,KAAKsH,IAEP7G,KAAKoc,GAAGzW,EAAM0hB,EAChB,CAMA,GAAAC,CAAK3hB,EAAMpG,GACT,MAAMgoB,EAAYvnB,KAAKmnB,WAAWziB,IAAIiB,QACpB3B,IAAdujB,IACFA,EAAU5a,OAAOpN,GACM,IAAnBgoB,EAAUhX,MACZvQ,KAAKmnB,WAAWxa,OAAOhH,GAG7B,CAWA,IAAA6hB,CAAM7hB,EAAMkB,GAEV,OAAO,IAAY7G,KAAKmnB,WAAWziB,IAAIiB,IAAS,MAAcwG,UAAUgJ,QAAQ5V,GAAKA,KAAKsH,GAC5F,CAEA,OAAA4gB,GACEznB,KAAKmnB,WAAa,IACpB,EChJoB5iB,OAAO4D,OALtB,MAUM6B,GAAOzF,OAAOyF,KAyCd,IAlCSzF,OAAO4H,OAkCPxH,GAAOqF,GAAKrF,GAAK/D,QAwD1B8mB,GAAc,CAAC/iB,EAAK9C,IAAQ0C,OAAO7D,UAAUmE,eAAeX,KAAKS,EAAK9C,GCpHtE8lB,IDiISpjB,OAAOqjB,OCjIMC,OAAO,aCsE7B,GAAe,CAAC3oB,EAAGC,KAC9B,GAAID,IAAMC,EACR,OAAO,EAET,GAAS,MAALD,GAAkB,MAALC,GAAaD,EAAEqH,cAAgBpH,EAAEoH,YAChD,OAAO,EAET,GAAqC,MAAjCrH,EAAE,IACJ,OAAOA,EAAE,IAA4BC,GAEvC,OAAQD,EAAEqH,aACR,KAAKye,YACH9lB,EAAI,IAAImB,WAAWnB,GACnBC,EAAI,IAAIkB,WAAWlB,GAErB,KAAKkB,WACH,GAAInB,EAAEogB,aAAengB,EAAEmgB,WACrB,OAAO,EAET,IAAK,IAAI3f,EAAI,EAAGA,EAAIT,EAAE0B,OAAQjB,IAC5B,GAAIT,EAAES,KAAOR,EAAEQ,GACb,OAAO,EAGX,MAEF,KAAKmV,IACH,GAAI5V,EAAEqR,OAASpR,EAAEoR,KACf,OAAO,EAET,IAAK,MAAMlF,KAASnM,EAClB,IAAKC,EAAEoN,IAAIlB,GACT,OAAO,EAGX,MAEF,KAAKU,IACH,GAAI7M,EAAEqR,OAASpR,EAAEoR,KACf,OAAO,EAET,IAAK,MAAM1O,KAAO3C,EAAE8K,OAClB,IAAK7K,EAAEoN,IAAI1K,KAAS,GAAa3C,EAAEwF,IAAI7C,GAAM1C,EAAEuF,IAAI7C,IACjD,OAAO,EAGX,MAEF,KAAK0C,OACH,GAAI,GAAcrF,KAAO,GAAcC,GACrC,OAAO,EAET,IAAK,MAAM0C,KAAO3C,EAChB,IAAK,GAAmBA,EAAG2C,KAAS,GAAa3C,EAAE2C,GAAM1C,EAAE0C,IACzD,OAAO,EAGX,MACF,KAAKoG,MACH,GAAI/I,EAAE0B,SAAWzB,EAAEyB,OACjB,OAAO,EAET,IAAK,IAAIjB,EAAI,EAAGA,EAAIT,EAAE0B,OAAQjB,IAC5B,IAAK,GAAaT,EAAES,GAAIR,EAAEQ,IACxB,OAAO,EAGX,MACF,QACE,OAAO,EAEX,OAAO,GCvGF,MAAMmoB,WAAkBZ,GAI7B,WAAA3gB,CAAaogB,GACXoB,QACA/nB,KAAK2mB,IAAMA,EAIX3mB,KAAKka,SAAWyM,EAAIzM,SAKpBla,KAAKoa,OAAS,IAAIrO,IAIlB/L,KAAKwhB,KAAO,IAAIzV,IAChB/L,KAAKgoB,eAAqCC,YAAY,KACpD,MAAMlF,EAAM,KACiB,OAAzB/iB,KAAK4a,iBAA6BsN,MAAuBnF,EAA2C/iB,KAAKwhB,KAAK9c,IAAI1E,KAAKka,UAAWiO,aAEpInoB,KAAK0a,cAAc1a,KAAK4a,iBAK1B,MAAMlE,EAAS,GACf1W,KAAKwhB,KAAKrM,QAAQ,CAACqM,EAAM4G,KACnBA,IAAapoB,KAAKka,UAzDC,KAyD8B6I,EAAMvB,EAAK2G,aAAenoB,KAAKoa,OAAO7N,IAAI6b,IAC7F1R,EAAOiI,KAAKyJ,KAGZ1R,EAAO9V,OAAS,GAClBynB,GAAsBroB,KAAM0W,EAAQ,YAErC,GAAWwR,MACdvB,EAAIvK,GAAG,UAAW,KAChBpc,KAAKynB,YAEPznB,KAAK0a,cAAc,CAAC,EACtB,CAEA,OAAA+M,GACEznB,KAAKwnB,KAAK,UAAW,CAACxnB,OACtBA,KAAK0a,cAAc,MACnBqN,MAAMN,UACNa,cAActoB,KAAKgoB,eACrB,CAKA,aAAApN,GACE,OAAO5a,KAAKoa,OAAO1V,IAAI1E,KAAKka,WAAa,IAC3C,CAKA,aAAAQ,CAAeza,GACb,MAAMia,EAAWla,KAAKka,SAChBqO,EAAgBvoB,KAAKwhB,KAAK9c,IAAIwV,GAC9BsO,OAA0BxkB,IAAlBukB,EAA8B,EAAIA,EAAcC,MAAQ,EAChEC,EAAYzoB,KAAKoa,OAAO1V,IAAIwV,GACpB,OAAVja,EACFD,KAAKoa,OAAOzN,OAAOuN,GAEnBla,KAAKoa,OAAO1N,IAAIwN,EAAUja,GAE5BD,KAAKwhB,KAAK9U,IAAIwN,EAAU,CACtBsO,QACAL,YAAa,OAEf,MAAM9L,EAAQ,GACRE,EAAU,GACVmM,EAAkB,GAClBpM,EAAU,GACF,OAAVrc,EACFqc,EAAQqC,KAAKzE,GACS,MAAbuO,EACI,MAATxoB,GACFoc,EAAMsC,KAAKzE,IAGbqC,EAAQoC,KAAKzE,GACR,GAAeuO,EAAWxoB,IAC7ByoB,EAAgB/J,KAAKzE,KAGrBmC,EAAMzb,OAAS,GAAK8nB,EAAgB9nB,OAAS,GAAK0b,EAAQ1b,OAAS,IACrEZ,KAAKwnB,KAAK,SAAU,CAAC,CAAEnL,QAAOE,QAASmM,EAAiBpM,WAAW,UAErEtc,KAAKwnB,KAAK,SAAU,CAAC,CAAEnL,QAAOE,UAASD,WAAW,SACpD,CAMA,kBAAAzB,CAAoBF,EAAOtP,GACzB,MAAMpL,EAAQD,KAAK4a,gBACL,OAAV3a,GACFD,KAAK0a,cAAc,IACdza,EACH,CAAC0a,GAAQtP,GAGf,CAKA,SAAAgP,GACE,OAAOra,KAAKoa,MACd,EAWK,MAAMiO,GAAwB,CAAC7O,EAAWmP,EAAS/F,KACxD,MAAMtG,EAAU,GAChB,IAAK,IAAI3c,EAAI,EAAGA,EAAIgpB,EAAQ/nB,OAAQjB,IAAK,CACvC,MAAMua,EAAWyO,EAAQhpB,GACzB,GAAI6Z,EAAUY,OAAO7N,IAAI2N,GAAW,CAElC,GADAV,EAAUY,OAAOzN,OAAOuN,GACpBA,IAAaV,EAAUU,SAAU,CACnC,MAAM0O,EAA0CpP,EAAUgI,KAAK9c,IAAIwV,GACnEV,EAAUgI,KAAK9U,IAAIwN,EAAU,CAC3BsO,MAAOI,EAAQJ,MAAQ,EACvBL,YAAa,MAEjB,CACA7L,EAAQqC,KAAKzE,EACf,CACF,CACIoC,EAAQ1b,OAAS,IACnB4Y,EAAUgO,KAAK,SAAU,CAAC,CAAEnL,MAAO,GAAIE,QAAS,GAAID,WAAWsG,IAC/DpJ,EAAUgO,KAAK,SAAU,CAAC,CAAEnL,MAAO,GAAIE,QAAS,GAAID,WAAWsG,MAStDiG,GAAwB,CAACrP,EAAWmP,EAASvO,EAASZ,EAAUY,UAC3E,MAAMnb,EAAM0pB,EAAQ/nB,OACdqjB,Eb/I2B,IAAI,GagJrC,GAAsBA,EAAShlB,GAC/B,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAKU,IAAK,CAC5B,MAAMua,EAAWyO,EAAQhpB,GACnBM,EAAQma,EAAO1V,IAAIwV,IAAa,KAChCsO,EAAwChP,EAAUgI,KAAK9c,IAAIwV,GAAWsO,MAC5E,GAAsBvE,EAAS/J,GAC/B,GAAsB+J,EAASuE,GAC/B,GAAwBvE,EAASlc,KAAKO,UAAUrI,GAClD,CACA,Mb/G0BgkB,KAC1B,MAAME,EAAW,IAAI9jB,WAzBD4jB,KACpB,IAAIhlB,EAAMglB,EAAQJ,KAClB,IAAK,IAAIlkB,EAAI,EAAGA,EAAIskB,EAAQF,KAAKnjB,OAAQjB,IACvCV,GAAOglB,EAAQF,KAAKpkB,GAAGiB,OAEzB,OAAO3B,GAoByB,CAAOglB,IACvC,IAAIG,EAAS,EACb,IAAK,IAAIzkB,EAAI,EAAGA,EAAIskB,EAAQF,KAAKnjB,OAAQjB,IAAK,CAC5C,MAAMN,EAAI4kB,EAAQF,KAAKpkB,GACvBwkB,EAASzX,IAAIrN,EAAG+kB,GAChBA,GAAU/kB,EAAEuB,MACd,CAEA,OADAujB,EAASzX,IAAI,IAAIrM,WAAW4jB,EAAQH,KAAK1jB,OAAQ,EAAG6jB,EAAQJ,MAAOO,GAC5DD,GasGA,CAAsBF,IC1LxB,MAAM,GACX,WAAA1d,GAKEvG,KAAKmnB,WAAa,IACpB,CAOA,EAAA/K,CAAIzW,EAAMpG,GAER,OADA,GAAmBS,KAAKmnB,WAAkC,EAAQ,IAAYrR,IAAIvW,GAC3EA,CACT,CAOA,IAAA6nB,CAAMzhB,EAAMpG,GAIV,MAAM8nB,EAAK,IAAIxgB,KACb7G,KAAKsnB,IAAI3hB,EAAyB,GAClCpG,KAAKsH,IAEP7G,KAAKoc,GAAGzW,EAAyB,EACnC,CAOA,GAAA2hB,CAAK3hB,EAAMpG,GACT,MAAMgoB,EAAYvnB,KAAKmnB,WAAWziB,IAAIiB,QACpB3B,IAAdujB,IACFA,EAAU5a,OAAOpN,GACM,IAAnBgoB,EAAUhX,MACZvQ,KAAKmnB,WAAWxa,OAAOhH,GAG7B,CAYA,IAAA6hB,CAAM7hB,EAAMkB,GAEV,OAAO,IAAY7G,KAAKmnB,WAAWziB,IAAIiB,IAAS,MAAcwG,UAAUgJ,QAAQ5V,GAAKA,KAAKsH,GAC5F,CAEA,OAAA4gB,GACEznB,KAAKmnB,WAAa,IACpB,ECxEoB5iB,OAAO4D,OAKT5D,OAAOyF,KAOLzF,OAAO4H,OAuGP5H,OAAOqjB,OAxHtB,MCmBDkB,GAAkB,GAExBA,GAX2B,GAWI,CAC7B7E,EACAwB,EACAsD,EACAC,EACAC,KAEA,GAAsBhF,EAlBG,GAmBzB,MAAMiF,EZ2EuB,EAACzD,EAASxB,EAAS0C,EAAKK,KACrD,MAAMmC,EAAc,GAAqB1D,GACzC,OAAQ0D,GACN,KA/E+B,EAiCN,EAAC1D,EAASxB,EAAS0C,KAC9CE,GAAe5C,EAAS0C,EAAK,GAA2BlB,KA8CpD2D,CAAc3D,EAASxB,EAAS0C,GAChC,MACF,KAjF+B,EAkF7BI,GAActB,EAASkB,EAAKK,GAC5B,MACF,KAnF4B,EAoF1BC,GAAWxB,EAASkB,EAAKK,GACzB,MACF,QACE,MAAM,IAAIhmB,MAAM,wBAEpB,OAAOmoB,GY1FiB,CACtB1D,EACAxB,EACA8E,EAASpC,IACToC,GAGAC,GZP+B,IYOjBE,IACbH,EAASM,SAEVN,EAASM,QAAS,IAItBP,GAhCqC,GAgCI,CACvC7E,EACAqF,EACAP,EACAQ,EACAN,KAEA,GAAsBhF,EAtCQ,GAuC9B,GACEA,EACA,GACE8E,EAASvP,UACTvR,MAAMtG,KAAKonB,EAASvP,UAAUa,YAAYrQ,WAKhD8e,GAhDgC,GAgDI,CAClCU,EACA/D,EACAsD,EACAQ,EACAN,KHsKkC,EAACzP,EAAW3Y,EAAQ+hB,KACtD,MAAM6C,EV/KmC,IAAI,GU+KN5kB,GACjC4oB,EAAY,KACZpN,EAAQ,GACRE,EAAU,GACVmM,EAAkB,GAClBpM,EAAU,GACVrd,EAAM,GAAqBwmB,GACjC,IAAK,IAAI9lB,EAAI,EAAGA,EAAIV,EAAKU,IAAK,CAC5B,MAAMua,EAAW,GAAqBuL,GACtC,IAAI+C,EAAQ,GAAqB/C,GACjC,MAAMxlB,EAAQ8H,KAAKC,MAAM,GAAuByd,IAC1CiE,EAAalQ,EAAUgI,KAAK9c,IAAIwV,GAChCuO,EAAYjP,EAAUY,OAAO1V,IAAIwV,GACjCyP,OAA2B3lB,IAAf0lB,EAA2B,EAAIA,EAAWlB,OACxDmB,EAAYnB,GAAUmB,IAAcnB,GAAmB,OAAVvoB,GAAkBuZ,EAAUY,OAAO7N,IAAI2N,MACxE,OAAVja,EAEEia,IAAaV,EAAUU,UAAyC,MAA7BV,EAAUoB,gBAG/C4N,IAEAhP,EAAUY,OAAOzN,OAAOuN,GAG1BV,EAAUY,OAAO1N,IAAIwN,EAAUja,GAEjCuZ,EAAUgI,KAAK9U,IAAIwN,EAAU,CAC3BsO,QACAL,YAAasB,SAEIzlB,IAAf0lB,GAAsC,OAAVzpB,EAC9Boc,EAAMsC,KAAKzE,QACalW,IAAf0lB,GAAsC,OAAVzpB,EACrCqc,EAAQqC,KAAKzE,GACM,OAAVja,IACJ,GAAeA,EAAOwoB,IACzBC,EAAgB/J,KAAKzE,GAEvBqC,EAAQoC,KAAKzE,IAGnB,EACImC,EAAMzb,OAAS,GAAK8nB,EAAgB9nB,OAAS,GAAK0b,EAAQ1b,OAAS,IACrE4Y,EAAUgO,KAAK,SAAU,CAAC,CACxBnL,QAAOE,QAASmM,EAAiBpM,WAChCsG,KAEDvG,EAAMzb,OAAS,GAAK2b,EAAQ3b,OAAS,GAAK0b,EAAQ1b,OAAS,IAC7D4Y,EAAUgO,KAAK,SAAU,CAAC,CACxBnL,QAAOE,UAASD,WACfsG,KGxNL,CACEmG,EAASvP,UACT,GAA2BiM,GAC3BsD,IAIJD,GA7D2B,GA6DI,CAC7BU,EACA/D,EACAsD,EACAQ,EACAN,KC5D6B,EAACxD,EAAS7S,EAAGgX,KAvBL,IAwB7B,GAAqBnE,IACGmE,EAAwBhX,EAAG,GAAuB6S,KD4DlF,CACEA,EACAsD,EAASpC,IACT,CAACkD,EAAOC,IAAWF,GAAwBb,EAAUe,KAKzD,MAMMF,GAA0B,CAACb,EAAUe,IACzC/iB,QAAQI,KAAK,+BAA+B4hB,EAASgB,SAASD,KAQ1DE,GAAc,CAACjB,EAAUlJ,EAAKmJ,KAClC,MAAMvD,EpBhDmC,IAAIH,GoBgDNzF,GACjCoE,EAAU,KACVkF,EAAc,GAAqB1D,GACnCwE,EAAiBlB,EAASD,gBAAgBK,GAMhD,OALuB,EACrBc,EAAehG,EAASwB,EAASsD,EAAUC,EAAYG,GAEvDpiB,QAAQK,MAAM,6BAET6c,GAWHiG,GAA2B,CAACnB,EAAUoB,EAAIC,KAC1CD,IAAOpB,EAASoB,KAClBpB,EAASvB,KAAK,mBAAoB,CAAC4C,EAAOrB,IAC1CA,EAASoB,GAAK,KACdA,EAAG7H,QACHyG,EAASsB,cAAe,EACpBtB,EAASuB,aACXvB,EAASuB,aAAc,EACvBvB,EAASM,QAAS,EAElB,GACEN,EAASvP,UACTvR,MAAMtG,KAAKonB,EAASvP,UAAUa,YAAYrQ,QAAQyL,OAAQ8U,GACxDA,IAAWxB,EAASpC,IAAIzM,UAE1B6O,GAEFA,EAASvB,KAAK,SAAU,CAAC,CACvBgD,OAAQ,mBAGVzB,EAAS0B,2BAIXnb,WACEob,GACA,GACmD,IAAjD,GAAS,EAAG3B,EAAS0B,0BACrB1B,EAAS4B,gBAEX5B,KAQA2B,GAAW3B,IACf,GAAIA,EAAS6B,eAAiC,OAAhB7B,EAASoB,GAAa,CAClD,MAAMU,EAAY,IAAI9B,EAAS+B,IAAI/B,EAASgB,IAAKhB,EAASgC,WAC1DF,EAAUG,WAAa,cACvBjC,EAASoB,GAAKU,EACd9B,EAASsB,cAAe,EACxBtB,EAASuB,aAAc,EACvBvB,EAASM,QAAS,EAElBwB,EAAU1I,UAAaiI,IACrBrB,EAASkC,sBAAwB,KACjC,MAAMhH,EAAU+F,GAAYjB,EAAU,IAAI1oB,WAAW+pB,EAAMtpB,OAAO,GAC9D,GAAgBmjB,GAAW,GAC7B4G,EAAUK,KAAK,GAAsBjH,KAGzC4G,EAAUM,QAAWf,IACnBrB,EAASvB,KAAK,mBAAoB,CAAC4C,EAAOrB,KAE5C8B,EAAUO,QAAWhB,IACnBF,GAAyBnB,EAAU8B,EAAWT,IAEhDS,EAAUQ,OAAS,KACjBtC,EAASkC,sBAAwB,KACjClC,EAASsB,cAAe,EACxBtB,EAASuB,aAAc,EACvBvB,EAAS0B,yBAA2B,EACpC1B,EAASvB,KAAK,SAAU,CAAC,CACvBgD,OAAQ,eAGV,MAAMvG,EAAU,KAKhB,GAJA,GAAsBA,EA1LD,GA2LrB,GAA4BA,EAAS8E,EAASpC,KAC9CkE,EAAUK,KAAK,GAAsBjH,IAEM,OAAvC8E,EAASvP,UAAUoB,gBAA0B,CAC/C,MAAM0Q,EAAwB,KAC9B,GAAsBA,EA9LE,GA+LxB,GACEA,EACA,GAAwCvC,EAASvP,UAAW,CAC1DuP,EAASpC,IAAIzM,YAGjB2Q,EAAUK,KAAK,GAAsBI,GACvC,GAEFvC,EAASvB,KAAK,SAAU,CAAC,CACvBgD,OAAQ,eAEZ,GAOIe,GAAmB,CAACxC,EAAUlJ,KAClC,MAAMsK,EAAKpB,EAASoB,GAChBpB,EAASuB,aAAeH,GAAMA,EAAGqB,aAAerB,EAAGsB,MACrDtB,EAAGe,KAAKrL,GAENkJ,EAAS2C,aACX,GAAW3C,EAAS4C,UAAW9L,EAAKkJ,IAiBjC,MAAM6C,WAA0B,GAerC,WAAArlB,CAAaslB,EAAWC,EAAUnF,GAAK,QACrCoF,GAAU,EAAI,UACdvS,EAAY,IAAI,GAA4BmN,GAAI,OAChDtI,EAAS,CAAC,EAAC,UACX0M,EAAY,GAAE,kBACdiB,EAAoBC,UAAS,eAC7BC,GAAiB,EAAE,eACnBvB,EAAiB,KAAI,UACrBwB,GAAY,GACV,CAAC,GAGH,IAFApE,QAE2C,MAApC8D,EAAUA,EAAUjrB,OAAS,IAClCirB,EAAYA,EAAUle,MAAM,EAAGke,EAAUjrB,OAAS,GAEpDZ,KAAK6rB,UAAYA,EACjB7rB,KAAK2rB,UAAYE,EAAY,IAAMC,EACnC9rB,KAAK2qB,eAAiBA,EAMtB3qB,KAAKqe,OAASA,EACdre,KAAK+qB,UAAYA,EACjB/qB,KAAK8rB,SAAWA,EAChB9rB,KAAK2mB,IAAMA,EACX3mB,KAAK8qB,IAAMkB,EACXhsB,KAAKwZ,UAAYA,EACjBxZ,KAAKsqB,aAAc,EACnBtqB,KAAKqqB,cAAe,EACpBrqB,KAAK0rB,aAAc,EACnB1rB,KAAKmsB,UAAYA,EACjBnsB,KAAKyqB,yBAA2B,EAChCzqB,KAAK8oB,gBAAkBA,GAAgBnb,QAIvC3N,KAAKosB,SAAU,EAIfpsB,KAAKmqB,GAAK,KACVnqB,KAAKirB,sBAAwB,EAK7BjrB,KAAK4qB,cAAgBmB,EAKrB/rB,KAAKqsB,gBAAkB,EACnBH,EAAiB,IACnBlsB,KAAKqsB,gBAAsCpE,YAAY,KACrD,GAAIjoB,KAAKmqB,IAAMnqB,KAAKmqB,GAAGqB,aAAeS,UAAUR,KAAM,CAEpD,MAAMxH,EAAU,KAChB,GAAsBA,EArTL,GAsTjB,GAA4BA,EAAS0C,GACrC3mB,KAAKmqB,GAAGe,KAAK,GAAsBjH,GACrC,GACCiI,IAOLlsB,KAAKssB,cAAgB,CAACxrB,EAAM8hB,KAC1B,GAAIA,IAAW5iB,KAAM,CACnB,MAAMikB,EAAU+F,GAAYhqB,KAAM,IAAIK,WAAWS,IAAO,GACpD,GAAgBmjB,GAAW,GAC7B,GAAWjkB,KAAK2rB,UAAW,GAAsB1H,GAAUjkB,KAE/D,GAOFA,KAAKusB,eAAiB,CAAC1rB,EAAQ+hB,KAC7B,GAAIA,IAAW5iB,KAAM,CACnB,MAAMikB,EAAU,KAChB,GAAsBA,EAhVH,GZ0EA,EAACA,EAASpjB,KACnC,GAAsBojB,EAvDQ,GAwD9B,GAA4BA,EAASpjB,IYqQ/B,CAAyBojB,EAASpjB,GAClC0qB,GAAiBvrB,KAAM,GAAsBikB,GAC/C,GAEFjkB,KAAK2mB,IAAIvK,GAAG,SAAUpc,KAAKusB,gBAK3BvsB,KAAKwsB,wBAA0B,EAAGnQ,QAAOE,UAASD,WAAWmQ,KAC3D,MAAMC,EAAiBrQ,EAAMsQ,OAAOpQ,GAASoQ,OAAOrQ,GAC9C2H,EAAU,KAChB,GAAsBA,EA3VI,GA4V1B,GACEA,EACA,GAAwCzK,EAAWkT,IAErDnB,GAAiBvrB,KAAM,GAAsBikB,KAE/CjkB,KAAK4sB,aAAe,KAClB,GACE5sB,KAAKwZ,UACL,CAACmN,EAAIzM,UACL,eAGA,IAAiC,oBAAZ+D,SACvBA,QAAQ7B,GAAG,OAAQpc,KAAK4sB,cAE1BpT,EAAU4C,GAAG,SAAUpc,KAAKwsB,yBAC5BxsB,KAAKgoB,eAAqCC,YAAY,KAElDjoB,KAAKsqB,aAlSmB,IAoStB,KAAqBtqB,KAAKirB,uBAI5Bf,GAAyBlqB,KAAgCA,KAAO,GAAG,OAEpE6sB,KACCd,GACF/rB,KAAK+rB,SAET,CAEA,OAAIhC,GACF,MAAM+C,EEhXuBzO,KHYd,EAAC1Z,EAAKpF,KACvB,MAAMwtB,EAAU,GAChB,IAAK,MAAMlrB,KAAO8C,EAChBooB,EAAQpO,KAAKpf,EAAEoF,EAAI9C,GAAMA,IAE3B,OAAOkrB,GGhBP,CF+W8C/sB,KAAKqe,OE/WhC,CAAC2O,EAAKnrB,IAAQ,GAAGqkB,mBAAmBrkB,MAAQqkB,mBAAmB8G,MAAQjf,KAAK,KF+WvE,GACtB,OAAO/N,KAAK6rB,UAAY,IAAM7rB,KAAK8rB,UACP,IAAzBgB,EAAclsB,OAAe,GAAK,IAAMksB,EAC7C,CAKA,UAAIzD,GACF,OAAOrpB,KAAKosB,OACd,CAEA,UAAI/C,CAAQppB,GACND,KAAKosB,UAAYnsB,IACnBD,KAAKosB,QAAUnsB,EAEfD,KAAKwnB,KAAK,SAAU,CAACvnB,IACrBD,KAAKwnB,KAAK,OAAQ,CAACvnB,IAEvB,CAEA,OAAAwnB,GAC+B,IAAzBznB,KAAKqsB,iBACP/D,cAActoB,KAAKqsB,iBAErB/D,cAActoB,KAAKgoB,gBACnBhoB,KAAKitB,aACD,IAAiC,oBAAZhP,SACvBA,QAAQqJ,IAAI,OAAQtnB,KAAK4sB,cAE3B5sB,KAAKwZ,UAAU8N,IAAI,SAAUtnB,KAAKwsB,yBAClCxsB,KAAK2mB,IAAIW,IAAI,SAAUtnB,KAAKusB,gBAC5BxE,MAAMN,SACR,CAEA,SAAAyF,GACE,GAAIltB,KAAKmsB,UACP,O3BzVmB,IAAClK,EAAM1iB,E2B2VvBS,KAAK0rB,c3B3VYzJ,E2B4VPjiB,KAAK2rB,U3B5VQpsB,E2B4VGS,KAAKssB,c3B3VtC/J,GAAWN,GAAMO,KAAK1M,IAAIvW,G2B4VtBS,KAAK0rB,aAAc,GAIrB,MAAMyB,EAAc,KACpB,GAAsBA,EA9aC,GA+avB,GAA4BA,EAAantB,KAAK2mB,KAC9C,GAAW3mB,KAAK2rB,UAAW,GAAsBwB,GAAcntB,MAE/D,MAAMotB,EAAe,KACrB,GAAsBA,EAnbC,GAobvB,GAA4BA,EAAcptB,KAAK2mB,KAC/C,GAAW3mB,KAAK2rB,UAAW,GAAsByB,GAAeptB,MAEhE,MAAMqtB,EAAwB,KAC9B,GAAsBA,EAvbW,GAwbjC,GACErtB,KAAK2rB,UACL,GAAsB0B,GACtBrtB,MAGF,MAAMsrB,EAAwB,KAC9B,GAAsBA,EA9bM,GA+b5B,GACEA,EACA,GAAwCtrB,KAAKwZ,UAAW,CACtDxZ,KAAK2mB,IAAIzM,YAGb,GACEla,KAAK2rB,UACL,GAAsBL,GACtBtrB,KAEJ,CAEA,YAAAstB,GAEE,MAAMrJ,EAAU,KAChB,GAAsBA,EA/cM,GAgd5B,GACEA,EACA,GAAwCjkB,KAAKwZ,UAAW,CACtDxZ,KAAK2mB,IAAIzM,UACR,IAAInO,MAETwf,GAAiBvrB,KAAM,GAAsBikB,IACzCjkB,KAAK0rB,c3BjYc,EAACzJ,EAAM1iB,KAChC,MAAMguB,EAAUhL,GAAWN,GACNsL,EAAQ/K,KAAK7V,OAAOpN,IACC,IAAtBguB,EAAQ/K,KAAKjS,OAC/Bgd,EAAQ9K,GAAGH,QACXR,GAASnV,OAAOsV,K2B6Xd,CAAejiB,KAAK2rB,UAAW3rB,KAAKssB,eACpCtsB,KAAK0rB,aAAc,EAEvB,CAEA,UAAAuB,GACEjtB,KAAK4qB,eAAgB,EACrB5qB,KAAKstB,eACW,OAAZttB,KAAKmqB,IACPD,GAAyBlqB,KAAMA,KAAKmqB,GAAI,KAE5C,CAEA,OAAA4B,GACE/rB,KAAK4qB,eAAgB,EAChB5qB,KAAKsqB,aAA2B,OAAZtqB,KAAKmqB,KAC5BO,GAAQ1qB,MACRA,KAAKktB,YAET,EG9fI,SAAUM,GAAiBpmB,EAAgBqmB,GAChD,OAAKrmB,aAAiBpG,MACdoG,EAAMsZ,QAKbtZ,GACiB,iBAAVA,GACP,SAAUA,GACVA,EAAMtG,MACgB,iBAAfsG,EAAMtG,MACb,UAAWsG,EAAMtG,KAEV0sB,GAAiBpmB,EAAMtG,KAAKsG,MAAOqmB,GAK1CrmB,GACiB,iBAAVA,GACP,YAAaA,GACY,iBAAlBA,EAAMsZ,QAENtZ,EAAMsZ,QAGP+M,QAAAA,GAAkBjd,EAAAA,EAAAA,IAAI,gBAAiB,8BAC/C,C,kTCEA,MAAMkd,GChCA,WACL,MAAMC,EAAQ,IAAI5hB,IAElB,MAAS,IAAKlF,KACb,MAAMhF,EAAMkG,KAAKO,UAAWzB,GAC5B,GAAK8mB,EAAMphB,IAAK1K,GACf,OAAO8rB,EAAMjpB,IAAK7C,GAGnB,MAAM+rB,EDuB2B,K3CqB7B,WACL,GAAK9oB,OAAOic,gBACX,OAAOjc,OAAOoc,OAAO2M,aAgBtB,MAAM,IAAI7sB,MAAO,6EAClB,C2CxCiD8sB,GCvBhCC,IAAOlnB,GAEtB,OADA8mB,EAAMjhB,IAAK7K,EAAK+rB,GACTA,EAET,CDmBwBI,GAElBxmB,GAAS,IAAIlB,EAAQ,oBAgD3B,SAAS2nB,GACRlF,EACAmF,EACAC,GAEA,IAAIC,EAAoB,EAExB,OAAO,W,yCACN,GAAKA,EAAoB,EAAI,CAC5B,MAAMC,EAAmBxV,KAAKM,IAC7B,IAAON,KAAAyK,IAAA,EAAK8K,G5EpFoC,M4EuF3CE,EAAkBzV,KAAKQ,MAAOgV,EAAmB,KAEvD7mB,GAAOL,KAAM,2CAA4CmnB,eAEnD,IAAIlW,QAASC,GAAW/I,WAAY+I,EAA4B,IAAnBgW,GACpD,CAEAD,GAAqB,EAErB,IACC,MAAMG,QAlET,SAA+BL,EAAwBC,G,yCACtD,MAAMrtB,QAAa0tB,KAA+B,CACjDC,KAAM,6BACNC,OAAQ,OACR5tB,KAAM,CACLotB,iBACAC,eACAQ,aAAcjB,QAIhB,IAAO5sB,EAAK8tB,MACX,MAAM,IAAI5tB,OAAOwP,EAAAA,EAAAA,IAAI,yBAA0B,gCAGhD,OAAO1P,EAAK8tB,KACb,E,CAkD2BC,CAAgBX,EAAgBC,GAExDpF,EAAS1K,OAAS,CACjByQ,KAAMP,GAEPxF,EAASgD,UAKThD,EAAS6B,eAAgB,EAvD5B,SAAwBsD,EAAwBC,EAAsBI,GACrE,MAAMQ,EAAW,GAAIb,KAAoBC,IACnCa,EAAmB,CACxBC,cAAc,EACdhN,KAAM,GAAI8M,UAAmBR,IAC7BxF,SAAU,cACVgB,IAAK9jB,GAIAipB,EAAa,sCAAuChJ,mBACzDne,KAAKO,UAAW0mB,MAGjBxnB,GAAOlF,KAAM,qBAAsBysB,MAAeG,IACnD,CA0CGC,CAAejB,EAAgBC,EAAcI,EAC9C,CAAE,MAAQnnB,GACTI,GAAOJ,MACN,IAAIoJ,EAAAA,EAAAA,IACH,sDACA,mCACOgd,GAAiBpmB,KAE3B,CACD,E,CACD,C,kTE9GM,MAAOgoB,WAAkCtqB,OAAOib,GAAGC,KAAKqP,aAG7D9oB,WAAAA,CAAoB+oB,GAEnBvH,MACC,KF6HG,SAAqCuH,GAC1C,OAAO,W,0CAAiBC,EAAmB,UAAWC,EAAoB7I,GACzE,IACC,MAAMoI,EAAW,GAAIS,KAAgBD,IAC/BxG,EAAW,IAAI6C,GAAmB0D,EAAOzD,UAAWkD,EAAUpI,EAAK2I,EAAOG,SAC1E1D,EAAUkC,GAAelF,EAAUyG,EAAYD,GAyBrD,OAvBAxG,EAAS3M,GAAI,mBAAoB2P,GACjChD,EAAS3M,GAAI,mBAAoB,K,MAGX,QAArB5M,EAAA8f,EAAOI,sBAAc,IAAAlgB,GAAAA,EAAAtL,KAAAorB,EAAI,CAAE9E,OAAQ,oBAAsBzB,KAE1DA,EAAS3M,GAAI,SAAUgO,IAAQ,IAAA5a,EAAC,OAAqB,QAArBA,EAAA8f,EAAOI,sBAAc,IAAAlgB,OAAA,EAAAA,EAAAtL,KAAAorB,EAAIlF,EAAOrB,WAe1DgD,IAEC,CACNvS,UAAWuP,EAASvP,UACpBiO,QAASA,IAAMsB,EAAStB,UAE1B,CAAE,MAAAjY,GAAO,CAET,MAAO,CACNiY,QAASA,OAEX,E,CACD,CEpKGkI,CAAyBprB,OAAA4D,OAAA5D,OAAA4D,OAAC,CAAD,EACrBmnB,GAAM,CACTI,eAAgBA,IAAK7oB,IAAU7G,KAAK4vB,0BAA2B/oB,OAR1D,KAAAW,OAAiB,IAAIlB,EAAQ,WAWrC,CAEaupB,SAAAA,CACZC,EACAC,EACAC,G,uHAEMC,EAAMJ,UAAS3rB,KAAC,KAAC4rB,EAAYC,EAAQC,GAE3C,MAAMT,EAAWO,EAAWI,YAAaH,GAAS/W,WAC5CwW,EAAaM,EAAWN,WAAWxW,WACnCe,EAAW/Z,KAAKmwB,YAAaX,EAAYD,GAE/CvvB,KAAKwH,OAAOR,MAAO,uBAAwB,CAAEwoB,aAAYD,aAEzD,MAAMa,EAA8C,QAAhC5gB,EAAAxP,KAAKowB,YAAY1rB,IAAKqV,UAAU,IAAAvK,EAAAA,EAAI,GAExD,IAAM,MAAM6gB,KAAcD,EACpBC,EAAW7W,WAAasW,EAAWQ,0BAEjC/W,EAAiBO,WAAYuW,EAAW7W,UAAWO,GAG5D,E,CAEawW,gBAAAA,CACZT,EACAC,EACAS,G,+CAEA,MAAMjB,EAAWO,EAAWI,YAAaH,GAAS/W,WAC5CwW,EAAaM,EAAWN,WAAWxW,WAGzC,IAAOwW,EAAWiB,WAAY,aAC7B,MAAO,CAAC,EAGT,MAAMC,EAAkD,QAA3ClhB,EAAAxP,KAAK2wB,eAAgBnB,EAAYD,UAAU,IAAA/f,OAAA,EAAAA,EAAEkhB,KACpDE,EvD7CF,SAAyCb,GAE9C,MAAMc,EAAU,YAAad,EAASA,EAAOc,QAAU,KAEvD,MAAK,iBAAoBA,EACjBA,EAGDA,GACN,iBAAoBA,GACpB,QAASA,GACT,iBAAoBA,EAAQC,IAC1BD,EAAQC,IACR,IACJ,CuD+BqBC,CAA+BP,GAElD,IAAOE,IAAUE,GAAc,eAAiBb,EAAOvF,OACtD,MAAO,CAAC,EAGT,MAAMwG,Q5CwBF,SACL3P,EACAuP,G,yCAEA,MAAMK,QAnBP,SACC5P,EACAuP,G,yCAEA,MAAO,CACNM,kBAAmB3Q,GAAcqQ,EAAY,WAC7CvP,QAASD,GAAkBC,GAC3BE,QAASD,GAAmBD,GAE9B,E,CAUyB8P,CAAwB9P,EAASuP,GAEzD,MAAO,CACN,CAAE7qB,GAAiCgC,KAAKO,UAAW2oB,GAErD,E,C4CjC2BG,CAAkCV,EAAME,GAQjE,OANA5wB,KAAKwH,OAAOR,MAAO,oDAAqD,CACvEwoB,aACAD,WACAyB,eAGMA,CACR,E,CAEUK,mBAAAA,CACTvB,EACAC,EACAuB,GAEA,MAAM/B,EAAWO,EAAWI,YAAaH,GAAS/W,WAC5CwW,EAAaM,EAAWN,WAAWxW,WAGzC,IAAOwW,EAAWiB,WAAY,aAC7B,OAAOrY,QAAQC,QAAS,MAGzB,MAAM2Y,EvDxDF,SAAmCjB,GACxC,MAAO,SAAUA,GAAUA,EAAOvO,MAAQ,iBAAoBuO,EAAOvO,KAChEuO,EAAOvO,KACT,CAAC,CACL,CuDoDqB+P,CAAyBxB,GAGtCyB,E5CsBF,SACLR,EACAM,G,MAEA,IAEC,MAAMG,EAAmE,QAA3CjiB,EAAAwhB,EAAYjrB,UAA+B,IAAAyJ,EAAAA,EAAI,KAE7E,GAAK,iBAAoBiiB,EACxB,OAAO,KAGR,MAAMR,EAAqBlpB,KAAKC,MAAOypB,GAEvC,OAvFF,SACCR,EACAK,GAEA,MAAK,iBAAoBL,GAAa,OAASA,GAItC,gBAAiBA,GAAa,YAAaA,GAAa,YAAaA,KAIzE,iBAAoBA,EAAUC,cAAiBD,EAAUC,gBAIzD,iBAAoBD,EAAU5P,UAAa4P,EAAU5P,UAOrD,iBAAoB4P,EAAU1P,SAAW0P,EAAU1P,UAAY+P,CAKrE,CA2DSI,CAA8BT,EAAWK,GAtGlD,SAA6BK,EAA2BpQ,EAAU,GACjE,MAAMqQ,EAAU,IAAI7lB,IAAwB,CAAE,CAAE,UAAWwV,KACrDmP,EAAO,IAAIzQ,GAAO,CAAEuB,KAAMoQ,IAC1BC,EAAUzxB,GAAmBuxB,GAKnC,OAJA1R,GAAiByQ,EAAMmB,GAEvBnB,EAAKxW,SAAWrB,KAAKQ,MAAuB,IAAhBR,KAAKS,UAE1BoX,CACR,CAiGSoB,CAAoBb,EAAU5P,QAAS4P,EAAU1P,SAHhD,IAIT,CAAE,MAAAzN,GACD,OAAO,IACR,CACD,C4C5CuBie,CAAmCf,EAAYM,GAE9DU,EAAaR,EAChB,0CACA,8CAQH,OAPAxxB,KAAKwH,OAAOR,MAAOgrB,EAAY,CAC9BxC,aACAD,WACAiC,eACAjQ,QAASiQ,EAAelQ,GAAmBkQ,GAAiB,OAGtDpZ,QAAQC,QAASmZ,EACzB,CAEQ5B,sBAAAA,CACPxF,EACArB,GAEA,OAASqB,EAAMI,QACd,IAAK,aACJ,MAGD,IAAK,mBAUL,IAAK,eACJjR,EAAiBU,oBAAqB8O,EAASvP,UAAUU,UAAU,GACnE,MAPD,IAAK,YACJX,EAAiBU,oBAAqB8O,EAASvP,UAAUU,UAAU,GAStE,GClID+X,EAAAA,EAAAA,WAAW,uBAAwB,UAAalJ,IAC/C,GAAKA,EAEJ,OAAOA,EAGR,MAAMmJ,EHkHC,CACNrG,UAAW5lB,EACXwpB,QAAS,CAKR1D,SAAS,IGrHX,OAAOmG,EAA0BrG,UAO1B,IAAIuD,GAA2B8C,KANrC,IAAI5rB,GAASgB,SACZ,oHAEM,SAMT6qB,EAAAA,EAAAA,gBAAgB,8BAA+B,CAC9CC,OCXK,WACL,MAAM,iBAAExd,EAAgB,oBAAEI,EAAmB,iBAAEqd,EAAgB,uBAAEzpB,IAChEqE,EAAAA,EAAAA,WAQGC,IACK,CACN0H,iBAAkB1H,EAAQO,GAAmBhF,4BAC7CuM,oBAAqB9H,EAAQO,GAAmB/E,+BAChD2pB,iBAAkBnlB,EAAQO,GAAmB9E,4BAC7CC,uBAAwBsE,EAAQO,GAAmB7E,6BAIhD,2BACLU,EAA0B,8BAC1BE,EAA6B,2BAC7BC,EAA0B,wBAC1BC,IACG4oB,EAAAA,EAAAA,aAAqC7kB,ICnCpC,WACL,MAAM8kB,ECKD,SACLC,GAEA,MAAQC,EAASC,IAAezjB,EAAAA,EAAAA,UAAsB,MA8EtD,OA5EAG,EAAAA,EAAAA,WAAW,KACV,IAAIujB,EAAsC,KACtCC,EAA0C,KAE9C,MAAMC,EAAkBA,KACvB,MAAMC,EAAoBjc,SAAS5F,cAAeuhB,GAGlD,OAFAE,EAAYI,GAAqB,MAE1BA,GAGFC,EAAeA,KACfJ,GACJrK,cAAeqK,GAGhBA,EAAe1K,YAAa,KAC3B,MAAM+K,EAAeH,IAEhBG,IACJC,IACAC,EAAgBF,KApCC,MAyCdC,EAAcA,KACdN,IACJrK,cAAeqK,GACfA,EAAe,OAIXO,EAAmBC,IACxB,MAAMC,EAAuBliB,EAA0B,KAC/B2hB,MAGtBQ,IACAN,OAKGI,EAAcG,gBAClBV,EAAiB,IAAIW,iBAAkBH,GACvCR,EAAeY,QAASL,EAAcG,cAAe,CACpDG,WAAW,EACXC,SAAS,MAKNL,EAAgBA,KAChBT,IACJA,EAAe3F,aACf2F,EAAiB,OAIbe,EAAiBd,IAUvB,OARKc,EAEJT,EAAgBS,GAGhBZ,IAGM,KACNE,IACAI,MAEC,CAAEb,IAEEC,CACR,CDvFuBmB,CAAyC,gCACzDC,GAAuB1kB,EAAAA,EAAAA,QAAkD,MACzEsC,EAAiB8gB,aAAa,EAAbA,EAAeuB,iBAEtC1kB,EAAAA,EAAAA,WAAW,K,MAEV,GAAKqC,EAAiB,CAEiD,QAAtEjC,EAAAiC,EAAeR,cAAe,+CAAwC,IAAAzB,GAAAA,EAAEkH,SAGxE,MAAMqd,EAAatiB,EAAeqF,cAAe,OACjDid,EAAWvuB,UAAY,sCACvBiM,EAAeuiB,KAAK7c,YAAa4c,GAGjC,MAAME,GAAOC,EAAAA,EAAAA,YAAYH,GACzBF,EAAqBxkB,QAAU4kB,EAG/BA,EAAK7B,QAAQtb,EAAAA,EAAAA,eAAerC,EAAY,CAAEC,eAAgBjD,IAC3D,CAGA,MAAO,KACDoiB,EAAqBxkB,UACzBwkB,EAAqBxkB,QAAQ8kB,UAC7BN,EAAqBxkB,QAAU,QAG/B,CAAEoC,GACN,CDMC2iB,GAEA,MAAMpnB,EAAcD,IAkBpB,OACCiB,EAAAA,EAAAA,MAACqmB,EAAAA,2BAA0B,CAC1B1uB,KAAK,8BACLG,MAAM,0BACNN,UAAU,uCAAsCC,SAAA,EAEhDuI,EAAAA,EAAAA,MAAA,OAAAvI,SAAA,EACCF,EAAAA,EAAAA,KAAC+uB,EAAAA,cAAa,CACbrd,MAAM,iBACNsd,QAAU3f,EACV4f,SAAajrB,IA1BaA,KAC7BD,EAA4BC,IA0BxBkrB,CAAqBlrB,OAIvBhE,EAAAA,EAAAA,KAAC+uB,EAAAA,cAAa,CACbrd,MAAM,oBACNsd,QAAUvf,EACVwf,SAAajrB,IA9BgBA,KAChCC,EAA+BD,IA8B3BmrB,CAAwBnrB,OAI1BhE,EAAAA,EAAAA,KAAC+uB,EAAAA,cAAa,CACbrd,MAAM,iBACNsd,QAAUlC,EACVmC,SAAajrB,IAlCaA,KAC7BE,EAA4BF,IAkCxBorB,CAAqBprB,OAIvBhE,EAAAA,EAAAA,KAAC+uB,EAAAA,cAAa,CACbrd,MAAM,oBACNsd,QAAU3rB,EACV4rB,SAAajrB,IAtCmBA,KACnCG,EAAyBH,IAsCrBqrB,CAA2BrrB,UAK9BhE,EAAAA,EAAAA,KAACsvB,EAAAA,sBAAO,CAACjuB,MAAQ,EAAI1B,MAAQ,CAAE4vB,UAAW,QAAQrvB,UAC/C+K,EAAAA,EAAAA,IAAI,gBAAiB,kCAGxBjL,EAAAA,EAAAA,KAACwvB,EAAAA,KAAI,CAACC,UAAU,SAASxvB,UAAU,4CAA4CyvB,IAAM,EAACxvB,SACnFuH,EAAYc,IAAK9I,IAClBO,EAAAA,EAAAA,KAAC2vB,EAAAA,SAAQ,CAAAzvB,UACRuI,EAAAA,EAAAA,MAAC+mB,EAAAA,KAAI,CACJC,UAAU,MACV5kB,QAAQ,aACR5K,UAAU,+CAA8CC,SAAA,EAExDF,EAAAA,EAAAA,KAACR,EAAM,CAENE,qBAAsB,EACtBD,UAAYA,GAFNA,EAAUmF,WAIjB5E,EAAAA,EAAAA,KAAC4vB,EAAAA,mBAAI,CAAA1vB,SAAGT,EAAUW,WAXJX,EAAUmF,eAkB/B,G","sources":["webpack://vip-real-time-collaboration/./node_modules/fast-sha256/sha256.js","webpack://vip-real-time-collaboration/webpack/bootstrap","webpack://vip-real-time-collaboration/webpack/runtime/compat get default export","webpack://vip-real-time-collaboration/webpack/runtime/define property getters","webpack://vip-real-time-collaboration/webpack/runtime/hasOwnProperty shorthand","webpack://vip-real-time-collaboration/external window [\"wp\",\"hooks\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"plugins\"]","webpack://vip-real-time-collaboration/external window \"ReactJSXRuntime\"","webpack://vip-real-time-collaboration/external window [\"wp\",\"components\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"data\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"editor\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"i18n\"]","webpack://vip-real-time-collaboration/./src/components/avatar.tsx","webpack://vip-real-time-collaboration/./src/utilities/config.ts","webpack://vip-real-time-collaboration/./src/utilities/logger.ts","webpack://vip-real-time-collaboration/./src/utilities/local-storage.ts","webpack://vip-real-time-collaboration/./src/store/settings-store.ts","webpack://vip-real-time-collaboration/external window [\"wp\",\"element\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"coreData\"]","webpack://vip-real-time-collaboration/./src/utilities/selection.ts","webpack://vip-real-time-collaboration/./src/utilities/user.ts","webpack://vip-real-time-collaboration/./src/store/awareness-store.ts","webpack://vip-real-time-collaboration/./src/hooks/use-sorted-awareness-users.tsx","webpack://vip-real-time-collaboration/./src/components/avatars.tsx","webpack://vip-real-time-collaboration/external window [\"wp\",\"primitives\"]","webpack://vip-real-time-collaboration/./node_modules/@wordpress/icons/build-module/library/error.js","webpack://vip-real-time-collaboration/external window [\"wp\",\"compose\"]","webpack://vip-real-time-collaboration/./src/components/post-locked-modal.tsx","webpack://vip-real-time-collaboration/./src/hooks/use-copy-post-content-to-clipboard.ts","webpack://vip-real-time-collaboration/./src/hooks/use-is-disconnected.ts","webpack://vip-real-time-collaboration/./src/hooks/use-block-highlighting.ts","webpack://vip-real-time-collaboration/./src/utilities/throttle.ts","webpack://vip-real-time-collaboration/./src/hooks/use-render-cursors.ts","webpack://vip-real-time-collaboration/./src/components/rtc-overlay.tsx","webpack://vip-real-time-collaboration/external window [\"wp\",\"blockEditor\"]","webpack://vip-real-time-collaboration/./src/utilities/browser.ts","webpack://vip-real-time-collaboration/./src/utilities/entity.ts","webpack://vip-real-time-collaboration/./src/utilities/user-color.ts","webpack://vip-real-time-collaboration/./src/awareness-manager.ts","webpack://vip-real-time-collaboration/./node_modules/lib0/string.js","webpack://vip-real-time-collaboration/./node_modules/lib0/map.js","webpack://vip-real-time-collaboration/./node_modules/lib0/storage.js","webpack://vip-real-time-collaboration/./node_modules/lib0/environment.js","webpack://vip-real-time-collaboration/./node_modules/lib0/conditions.js","webpack://vip-real-time-collaboration/./node_modules/lib0/buffer.js","webpack://vip-real-time-collaboration/./src/yjs-shim.ts","webpack://vip-real-time-collaboration/./src/utilities/crypto.ts","webpack://vip-real-time-collaboration/./src/utilities/crdt.ts","webpack://vip-real-time-collaboration/external window [\"wp\",\"apiFetch\"]","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/map.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/set.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/string.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/storage.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/array.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/environment.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/conditions.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/function.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/buffer.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/broadcastchannel.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/time.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/math.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/binary.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/encoding.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/number.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/error.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/decoding.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/math.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/binary.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/string.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/encoding.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/number.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/error.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/decoding.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/sync.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/time.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/map.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/set.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/array.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/observable.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/object.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/traits.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/function.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/awareness.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/observable.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/object.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/src/y-websocket.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/auth.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/url.js","webpack://vip-real-time-collaboration/./src/utilities/error.ts","webpack://vip-real-time-collaboration/./src/websocket-client.ts","webpack://vip-real-time-collaboration/./src/utilities/function.ts","webpack://vip-real-time-collaboration/./src/provider.ts","webpack://vip-real-time-collaboration/./src/index.ts","webpack://vip-real-time-collaboration/./src/components/rtc-settings-panel.tsx","webpack://vip-real-time-collaboration/./src/hooks/use-frame-overlay.ts","webpack://vip-real-time-collaboration/./src/hooks/use-wait-for-selector.ts"],"sourcesContent":["(function (root, factory) {\n    // Hack to make all exports of this module sha256 function object properties.\n    var exports = {};\n    factory(exports);\n    var sha256 = exports[\"default\"];\n    for (var k in exports) {\n        sha256[k] = exports[k];\n    }\n        \n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = sha256;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() { return sha256; }); \n    } else {\n        root.sha256 = sha256;\n    }\n})(this, function(exports) {\n\"use strict\";\nexports.__esModule = true;\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nexports.digestLength = 32;\nexports.blockSize = 64;\n// SHA-256 constants\nvar K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    var a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n    while (len >= 64) {\n        a = v[0];\n        b = v[1];\n        c = v[2];\n        d = v[3];\n        e = v[4];\n        f = v[5];\n        g = v[6];\n        h = v[7];\n        for (i = 0; i < 16; i++) {\n            j = pos + i * 4;\n            w[i] = (((p[j] & 0xff) << 24) | ((p[j + 1] & 0xff) << 16) |\n                ((p[j + 2] & 0xff) << 8) | (p[j + 3] & 0xff));\n        }\n        for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (i = 0; i < 64; i++) {\n            t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n// Hash implements SHA256 hash algorithm.\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        this.digestLength = exports.digestLength;\n        this.blockSize = exports.blockSize;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this.state = new Int32Array(8); // hash state\n        this.temp = new Int32Array(64); // temporary state\n        this.buffer = new Uint8Array(128); // buffer for data to hash\n        this.bufferLength = 0; // number of bytes in buffer\n        this.bytesHashed = 0; // number of total bytes hashed\n        this.finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n    Hash.prototype.reset = function () {\n        this.state[0] = 0x6a09e667;\n        this.state[1] = 0xbb67ae85;\n        this.state[2] = 0x3c6ef372;\n        this.state[3] = 0xa54ff53a;\n        this.state[4] = 0x510e527f;\n        this.state[5] = 0x9b05688c;\n        this.state[6] = 0x1f83d9ab;\n        this.state[7] = 0x5be0cd19;\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n        return this;\n    };\n    // Cleans internal buffers and re-initializes hash state.\n    Hash.prototype.clean = function () {\n        for (var i = 0; i < this.buffer.length; i++) {\n            this.buffer[i] = 0;\n        }\n        for (var i = 0; i < this.temp.length; i++) {\n            this.temp[i] = 0;\n        }\n        this.reset();\n    };\n    // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n    Hash.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this.finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this.bytesHashed += dataLength;\n        if (this.bufferLength > 0) {\n            while (this.bufferLength < 64 && dataLength > 0) {\n                this.buffer[this.bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this.bufferLength === 64) {\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n                this.bufferLength = 0;\n            }\n        }\n        if (dataLength >= 64) {\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n            dataLength %= 64;\n        }\n        while (dataLength > 0) {\n            this.buffer[this.bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n    Hash.prototype.finish = function (out) {\n        if (!this.finished) {\n            var bytesHashed = this.bytesHashed;\n            var left = this.bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this.buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this.buffer[i] = 0;\n            }\n            this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff;\n            this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n            this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n            this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n            this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n            this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n            this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n            this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n            this.finished = true;\n        }\n        for (var i = 0; i < 8; i++) {\n            out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return this;\n    };\n    // Returns the final hash digest.\n    Hash.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._saveState = function (out) {\n        for (var i = 0; i < this.state.length; i++) {\n            out[i] = this.state[i];\n        }\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._restoreState = function (from, bytesHashed) {\n        for (var i = 0; i < this.state.length; i++) {\n            this.state[i] = from[i];\n        }\n        this.bytesHashed = bytesHashed;\n        this.finished = false;\n        this.bufferLength = 0;\n    };\n    return Hash;\n}());\nexports.Hash = Hash;\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nvar HMAC = /** @class */ (function () {\n    function HMAC(key) {\n        this.inner = new Hash();\n        this.outer = new Hash();\n        this.blockSize = this.inner.blockSize;\n        this.digestLength = this.inner.digestLength;\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            (new Hash()).update(key).finish(pad).clean();\n        }\n        else {\n            for (var i = 0; i < key.length; i++) {\n                pad[i] = key[i];\n            }\n        }\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        this.inner.update(pad);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        this.outer.update(pad);\n        this.istate = new Uint32Array(8);\n        this.ostate = new Uint32Array(8);\n        this.inner._saveState(this.istate);\n        this.outer._saveState(this.ostate);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] = 0;\n        }\n    }\n    // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n    HMAC.prototype.reset = function () {\n        this.inner._restoreState(this.istate, this.inner.blockSize);\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\n        return this;\n    };\n    // Cleans HMAC state.\n    HMAC.prototype.clean = function () {\n        for (var i = 0; i < this.istate.length; i++) {\n            this.ostate[i] = this.istate[i] = 0;\n        }\n        this.inner.clean();\n        this.outer.clean();\n    };\n    // Updates state with provided data.\n    HMAC.prototype.update = function (data) {\n        this.inner.update(data);\n        return this;\n    };\n    // Finalizes HMAC and puts the result in out.\n    HMAC.prototype.finish = function (out) {\n        if (this.outer.finished) {\n            this.outer.finish(out);\n        }\n        else {\n            this.inner.finish(out);\n            this.outer.update(out, this.digestLength).finish(out);\n        }\n        return this;\n    };\n    // Returns message authentication code.\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n// Returns SHA256 hash of data.\nfunction hash(data) {\n    var h = (new Hash()).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n// Function hash is both available as module.hash and as default export.\nexports[\"default\"] = hash;\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n    var h = (new HMAC(key)).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n    // Counter is a byte value: check if it overflowed.\n    var num = counter[0];\n    if (num === 0) {\n        throw new Error(\"hkdf: cannot expand more\");\n    }\n    // Prepare HMAC instance for new data with old key.\n    hmac.reset();\n    // Hash in previous output if it was generated\n    // (i.e. counter is greater than 1).\n    if (num > 1) {\n        hmac.update(buffer);\n    }\n    // Hash in info if it exists.\n    if (info) {\n        hmac.update(info);\n    }\n    // Hash in the counter.\n    hmac.update(counter);\n    // Output result to buffer and clean HMAC instance.\n    hmac.finish(buffer);\n    // Increment counter inside typed array, this works properly.\n    counter[0]++;\n}\nvar hkdfSalt = new Uint8Array(exports.digestLength); // Filled with zeroes.\nfunction hkdf(key, salt, info, length) {\n    if (salt === void 0) { salt = hkdfSalt; }\n    if (length === void 0) { length = 32; }\n    var counter = new Uint8Array([1]);\n    // HKDF-Extract uses salt as HMAC key, and key as data.\n    var okm = hmac(salt, key);\n    // Initialize HMAC for expanding with extracted key.\n    // Ensure no collisions with `hmac` function.\n    var hmac_ = new HMAC(okm);\n    // Allocate buffer.\n    var buffer = new Uint8Array(hmac_.digestLength);\n    var bufpos = buffer.length;\n    var out = new Uint8Array(length);\n    for (var i = 0; i < length; i++) {\n        if (bufpos === buffer.length) {\n            fillBuffer(buffer, hmac_, info, counter);\n            bufpos = 0;\n        }\n        out[i] = buffer[bufpos++];\n    }\n    hmac_.clean();\n    buffer.fill(0);\n    counter.fill(0);\n    return out;\n}\nexports.hkdf = hkdf;\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n    var prf = new HMAC(password);\n    var len = prf.digestLength;\n    var ctr = new Uint8Array(4);\n    var t = new Uint8Array(len);\n    var u = new Uint8Array(len);\n    var dk = new Uint8Array(dkLen);\n    for (var i = 0; i * len < dkLen; i++) {\n        var c = i + 1;\n        ctr[0] = (c >>> 24) & 0xff;\n        ctr[1] = (c >>> 16) & 0xff;\n        ctr[2] = (c >>> 8) & 0xff;\n        ctr[3] = (c >>> 0) & 0xff;\n        prf.reset();\n        prf.update(salt);\n        prf.update(ctr);\n        prf.finish(u);\n        for (var j = 0; j < len; j++) {\n            t[j] = u[j];\n        }\n        for (var j = 2; j <= iterations; j++) {\n            prf.reset();\n            prf.update(u).finish(u);\n            for (var k = 0; k < len; k++) {\n                t[k] ^= u[k];\n            }\n        }\n        for (var j = 0; j < len && i * len + j < dkLen; j++) {\n            dk[i * len + j] = t[j];\n        }\n    }\n    for (var i = 0; i < len; i++) {\n        t[i] = u[i] = 0;\n    }\n    for (var i = 0; i < 4; i++) {\n        ctr[i] = 0;\n    }\n    prf.clean();\n    return dk;\n}\nexports.pbkdf2 = pbkdf2;\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","import { UserState } from '@/store/awareness-store';\n\n/**\n * Renders a circular avatar bubble for a user with an optional border.\n */\nexport function Avatar( {\n\tuserState,\n\tshowUserColorBorder,\n}: {\n\tuserState: UserState;\n\tshowUserColorBorder?: boolean;\n} ) {\n\tconst style = {\n\t\tborder: showUserColorBorder === true ? `2px solid ${ userState.color }` : undefined,\n\t\topacity: userState.isConnected ? 1 : 0.5,\n\t};\n\n\treturn (\n\t\t<div className=\"vip-real-time-collaboration-avatar\">\n\t\t\t<img\n\t\t\t\talt={ userState.name }\n\t\t\t\tsrc={ userState.avatarUrl }\n\t\t\t\tstyle={ style }\n\t\t\t\ttitle={ userState.name }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","export const PERSISTED_STATE_POST_META_KEY = getVipConfigFromWindow( 'rtcPostMetaKey' );\n\nexport const AWARENESS_CURSOR_UPDATE_DEBOUNCE_IN_MS = 150;\nexport const LOCAL_CURSOR_UPDATE_DEBOUNCE_IN_MS = 20;\n\nexport const DISCONNECTED_THRESHOLD_IN_MS = 5000;\nexport const REMOVAL_DELAY_IN_MS = 5000;\n\nexport const WEBSOCKET_PROVIDER_MAX_BACKOFF_IN_MS = 15000;\nexport const WEBSOCKET_URL = getVipConfigFromWindow( 'wsUrl' );\n\n// Exporting this as a function allows for easier testing/mocking.\nexport function isDevelopment(): boolean {\n\treturn 'development' === process.env.NODE_ENV;\n}\n\nfunction getVipConfigFromWindow< Key extends keyof VIPRTCConfig >( key: Key ): VIPRTCConfig[ Key ] {\n\tif ( 'undefined' === typeof window || 'undefined' === typeof window.VIP_RTC ) {\n\t\treturn '';\n\t}\n\n\treturn window.VIP_RTC[ key ];\n}\n","import { isDevelopment } from '@/utilities/config';\n\nexport enum LogLevel {\n\tCRITICAL = 5,\n\tERROR = 4,\n\tWARNING = 3,\n\tINFO = 2,\n\tDEBUG = 1,\n}\n\nconst DEFAULT_LOG_THRESHOLD = isDevelopment() ? LogLevel.DEBUG : LogLevel.WARNING;\n\nexport class Logger {\n\tprivate namespace: string;\n\n\tpublic constructor(\n\t\tlocalNamespace: string = '',\n\t\tprivate threshold: LogLevel = DEFAULT_LOG_THRESHOLD\n\t) {\n\t\tthis.namespace = `vip-rtc${ localNamespace ? `:${ localNamespace }` : '' }`;\n\t}\n\n\tprotected log( level: LogLevel, ...args: unknown[] ): void {\n\t\tif ( level < this.threshold ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// eslint-disable-next-line security/detect-object-injection\n\t\tconst levelStr = LogLevel[ level ];\n\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log( `[${ this.namespace }][${ levelStr }]`, ...args );\n\t}\n\n\tpublic debug( ...args: unknown[] ): void {\n\t\tthis.log( LogLevel.DEBUG, ...args );\n\t}\n\n\tpublic info( ...args: unknown[] ): void {\n\t\tthis.log( LogLevel.INFO, ...args );\n\t}\n\n\tpublic warn( ...args: unknown[] ): void {\n\t\tthis.log( LogLevel.WARNING, ...args );\n\t}\n\n\tpublic error( ...args: unknown[] ): void {\n\t\tthis.log( LogLevel.ERROR, ...args );\n\t}\n\n\tpublic critical( ...args: unknown[] ): void {\n\t\tthis.log( LogLevel.CRITICAL, ...args );\n\t}\n}\n","import { Logger } from '@/utilities/logger';\n\nconst logger = new Logger( 'local-storage' );\n\n/**\n * Load data from localStorage with error handling\n * @param key - The localStorage key to read from\n * @param defaultValue - The default value to return if loading fails or key doesn't exist\n * @returns The parsed data from localStorage or the default value\n */\nexport const loadFromLocalStorage = < T >( key: string, defaultValue: T ): T => {\n\ttry {\n\t\tconst saved = localStorage.getItem( key );\n\t\tif ( saved ) {\n\t\t\tconst parsed = JSON.parse( saved ) as T;\n\t\t\t// If the parsed value is an object (and not null or array), merge with defaultValue\n\t\t\tif ( typeof parsed === 'object' && parsed !== null && ! Array.isArray( parsed ) ) {\n\t\t\t\treturn { ...defaultValue, ...( parsed as Partial< T > ) };\n\t\t\t}\n\t\t\t// For primitive values (string, number, boolean, null), return directly\n\t\t\treturn parsed;\n\t\t}\n\t} catch ( error ) {\n\t\tlogger.warn( `Failed to load data from localStorage (key: ${ key }):`, error );\n\t}\n\treturn defaultValue;\n};\n\n/**\n * Save data to localStorage with error handling\n * @param key - The localStorage key to write to\n * @param data - The data to save\n */\nexport const saveToLocalStorage = < T >( key: string, data: T ): void => {\n\ttry {\n\t\tlocalStorage.setItem( key, JSON.stringify( data ) );\n\t} catch ( error ) {\n\t\tlogger.warn( `Failed to save data to localStorage (key: ${ key }):`, error );\n\t}\n};\n","import { register, createReduxStore, StoreDescriptor } from '@wordpress/data';\n\nimport { loadFromLocalStorage, saveToLocalStorage } from '../utilities/local-storage';\n\nconst STORE_NAME = 'vip-real-time-collaboration/settings';\nconst LOCAL_STORAGE_KEY = 'vip-rtc-settings';\n\ninterface SettingsState {\n\tisAwarenessAvatarsEnabled: boolean;\n\tisAwarenessHighlightsEnabled: boolean;\n\tisAwarenessCursorsEnabled: boolean;\n\tisSelfAwarenessEnabled: boolean;\n}\n\nconst DEFAULT_STATE: SettingsState = {\n\tisAwarenessAvatarsEnabled: true,\n\tisAwarenessHighlightsEnabled: true,\n\tisAwarenessCursorsEnabled: true,\n\tisSelfAwarenessEnabled: false,\n};\n\nconst actions = {\n\tsetAwarenessAvatarsEnabled: ( enabled: boolean ): SettingsAction => ( {\n\t\ttype: 'SET_AWARENESS_AVATARS_ENABLED',\n\t\tpayload: enabled,\n\t} ),\n\tsetAwarenessHighlightsEnabled: ( enabled: boolean ): SettingsAction => ( {\n\t\ttype: 'SET_AWARENESS_HIGHLIGHTS_ENABLED',\n\t\tpayload: enabled,\n\t} ),\n\tsetAwarenessCursorsEnabled: ( enabled: boolean ): SettingsAction => ( {\n\t\ttype: 'SET_AWARENESS_CURSORS_ENABLED',\n\t\tpayload: enabled,\n\t} ),\n\tsetSelfAwarenessEnabled: ( enabled: boolean ): SettingsAction => ( {\n\t\ttype: 'SET_SELF_AWARENESS_ENABLED',\n\t\tpayload: enabled,\n\t} ),\n};\n\nconst reducer = (\n\tstate = loadFromLocalStorage( LOCAL_STORAGE_KEY, DEFAULT_STATE ),\n\taction: SettingsAction\n): SettingsState => {\n\tswitch ( action.type ) {\n\t\tcase 'SET_AWARENESS_AVATARS_ENABLED': {\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\tisAwarenessAvatarsEnabled: action.payload,\n\t\t\t};\n\n\t\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, newState );\n\t\t\treturn newState;\n\t\t}\n\t\tcase 'SET_AWARENESS_HIGHLIGHTS_ENABLED': {\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\tisAwarenessHighlightsEnabled: action.payload,\n\t\t\t};\n\n\t\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, newState );\n\t\t\treturn newState;\n\t\t}\n\t\tcase 'SET_AWARENESS_CURSORS_ENABLED': {\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\tisAwarenessCursorsEnabled: action.payload,\n\t\t\t};\n\n\t\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, newState );\n\t\t\treturn newState;\n\t\t}\n\t\tcase 'SET_SELF_AWARENESS_ENABLED': {\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\tisSelfAwarenessEnabled: action.payload,\n\t\t\t};\n\n\t\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, newState );\n\t\t\treturn newState;\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst selectors = {\n\tisAwarenessAvatarsEnabled( state: SettingsState ) {\n\t\tconst { isAwarenessAvatarsEnabled } = state;\n\t\treturn isAwarenessAvatarsEnabled;\n\t},\n\tisAwarenessHighlightsEnabled( state: SettingsState ) {\n\t\tconst { isAwarenessHighlightsEnabled } = state;\n\t\treturn isAwarenessHighlightsEnabled;\n\t},\n\tisAwarenessCursorsEnabled( state: SettingsState ) {\n\t\tconst { isAwarenessCursorsEnabled } = state;\n\t\treturn isAwarenessCursorsEnabled;\n\t},\n\tisSelfAwarenessEnabled( state: SettingsState ) {\n\t\tconst { isSelfAwarenessEnabled } = state;\n\t\treturn isSelfAwarenessEnabled;\n\t},\n};\n\ntype SettingsAction = {\n\ttype:\n\t\t| 'SET_AWARENESS_AVATARS_ENABLED'\n\t\t| 'SET_AWARENESS_HIGHLIGHTS_ENABLED'\n\t\t| 'SET_AWARENESS_CURSORS_ENABLED'\n\t\t| 'SET_SELF_AWARENESS_ENABLED';\n\tpayload: boolean;\n};\n\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\n( register as ( store: StoreDescriptor ) => void )( store );\n\nexport type { SettingsState };\n\nexport type SettingsStoreActions = {\n\tsetAwarenessAvatarsEnabled: ( enabled: boolean ) => void;\n\tsetAwarenessHighlightsEnabled: ( enabled: boolean ) => void;\n\tsetAwarenessCursorsEnabled: ( enabled: boolean ) => void;\n\tsetSelfAwarenessEnabled: ( enabled: boolean ) => void;\n};\n\nexport type SettingsStoreSelectors = {\n\tisAwarenessAvatarsEnabled: () => boolean;\n\tisAwarenessHighlightsEnabled: () => boolean;\n\tisAwarenessCursorsEnabled: () => boolean;\n\tisSelfAwarenessEnabled: () => boolean;\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","import { store as coreStore } from '@wordpress/core-data';\nimport { dispatch, select } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { type WPBlockSelection } from '@wordpress/editor/build-types/store/selectors';\n\nexport enum SelectionType {\n\tNone = 'none',\n\tCursor = 'cursor',\n\tSelectionInOneBlock = 'selection-in-one-block',\n\tSelectionInMultipleBlocks = 'selection-in-multiple-blocks',\n\tWholeBlock = 'whole-block',\n}\n\nexport type SelectionNone = {\n\t// The user has not made a selection.\n\ttype: SelectionType.None;\n};\n\nexport type SelectionCursor = {\n\t// The user has a cursor position in a block with no text highlighted.\n\ttype: SelectionType.Cursor;\n\tblockId: string;\n\tcursorPosition: number;\n};\n\nexport type SelectionInOneBlock = {\n\t// The user has highlighted text in a single block.\n\ttype: SelectionType.SelectionInOneBlock;\n\tblockId: string;\n\tcursorStartPosition: number;\n\tcursorEndPosition: number;\n};\n\nexport type SelectionInMultipleBlocks = {\n\t// The user has highlighted text over multiple blocks.\n\ttype: SelectionType.SelectionInMultipleBlocks;\n\tblockStartId: string;\n\tblockEndId: string;\n\tcursorStartPosition: number;\n\tcursorEndPosition: number;\n};\n\nexport type SelectionWholeBlock = {\n\t// The user has a non-text block selected, like an image block.\n\ttype: SelectionType.WholeBlock;\n\tblockId: string;\n};\n\nexport type SelectionState =\n\t| SelectionNone\n\t| SelectionCursor\n\t| SelectionInOneBlock\n\t| SelectionInMultipleBlocks\n\t| SelectionWholeBlock;\n\nexport function areSelectionsEqual(\n\tselection1: SelectionState,\n\tselection2: SelectionState\n): boolean {\n\tif ( selection1.type !== selection2.type ) {\n\t\treturn false;\n\t}\n\n\tswitch ( selection1.type ) {\n\t\tcase SelectionType.None:\n\t\t\treturn true;\n\n\t\tcase SelectionType.Cursor:\n\t\t\treturn (\n\t\t\t\tselection1.blockId === ( selection2 as SelectionCursor ).blockId &&\n\t\t\t\tselection1.cursorPosition === ( selection2 as SelectionCursor ).cursorPosition\n\t\t\t);\n\n\t\tcase SelectionType.SelectionInOneBlock:\n\t\t\treturn (\n\t\t\t\tselection1.blockId === ( selection2 as SelectionInOneBlock ).blockId &&\n\t\t\t\tselection1.cursorStartPosition ===\n\t\t\t\t\t( selection2 as SelectionInOneBlock ).cursorStartPosition &&\n\t\t\t\tselection1.cursorEndPosition === ( selection2 as SelectionInOneBlock ).cursorEndPosition\n\t\t\t);\n\n\t\tcase SelectionType.SelectionInMultipleBlocks:\n\t\t\treturn (\n\t\t\t\tselection1.blockStartId === ( selection2 as SelectionInMultipleBlocks ).blockStartId &&\n\t\t\t\tselection1.blockEndId === ( selection2 as SelectionInMultipleBlocks ).blockEndId &&\n\t\t\t\tselection1.cursorStartPosition ===\n\t\t\t\t\t( selection2 as SelectionInMultipleBlocks ).cursorStartPosition &&\n\t\t\t\tselection1.cursorEndPosition ===\n\t\t\t\t\t( selection2 as SelectionInMultipleBlocks ).cursorEndPosition\n\t\t\t);\n\n\t\tcase SelectionType.WholeBlock:\n\t\t\treturn selection1.blockId === ( selection2 as SelectionWholeBlock ).blockId;\n\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\n/**\n * Converts WordPress block editor selection to a SelectionState.\n *\n * @param selectionStart - The start position of the selection\n * @param selectionEnd - The end position of the selection\n * @returns The SelectionState\n */\nexport function getSelectionState(\n\tselectionStart: WPBlockSelection,\n\tselectionEnd: WPBlockSelection\n): SelectionState {\n\tconst isSelectionEmpty = Object.keys( selectionStart ).length === 0;\n\tif ( isSelectionEmpty ) {\n\t\t// Case 1: No selection\n\t\treturn {\n\t\t\ttype: SelectionType.None,\n\t\t};\n\t}\n\n\t// When the page initially loads, selectionStart can contain an empty object `{}`.\n\tconst isSelectionInOneBlock = selectionStart.clientId === selectionEnd.clientId;\n\tconst isCursorOnly = isSelectionInOneBlock && selectionStart.offset === selectionEnd.offset;\n\tconst isSelectionAWholeBlock =\n\t\tisSelectionInOneBlock &&\n\t\tselectionStart.offset === undefined &&\n\t\tselectionEnd.offset === undefined;\n\n\tif ( isSelectionAWholeBlock ) {\n\t\t// Case 2: A whole block is selected.\n\t\treturn {\n\t\t\ttype: SelectionType.WholeBlock,\n\t\t\tblockId: selectionStart.clientId,\n\t\t};\n\t} else if ( isCursorOnly ) {\n\t\t// Case 3: Cursor only, no text selected\n\t\treturn {\n\t\t\ttype: SelectionType.Cursor,\n\t\t\tblockId: selectionStart.clientId,\n\t\t\tcursorPosition: selectionStart.offset,\n\t\t};\n\t} else if ( isSelectionInOneBlock ) {\n\t\t// Case 4: Selection in a single block\n\t\treturn {\n\t\t\ttype: SelectionType.SelectionInOneBlock,\n\t\t\tblockId: selectionStart.clientId,\n\t\t\tcursorStartPosition: selectionStart.offset,\n\t\t\tcursorEndPosition: selectionEnd.offset,\n\t\t};\n\t}\n\n\t// Caes 5: Selection in multiple blocks\n\treturn {\n\t\ttype: SelectionType.SelectionInMultipleBlocks,\n\t\tblockStartId: selectionStart.clientId,\n\t\tblockEndId: selectionEnd.clientId,\n\t\tcursorStartPosition: selectionStart.offset,\n\t\tcursorEndPosition: selectionEnd.offset,\n\t};\n}\n\n/**\n * Update the entity record with the current user's selection.\n *\n * @param start - The start position of the selection\n * @param end - The end position of the selection\n */\nexport async function updateSelectionInEntityRecord(\n\tselectionStart: WPBlockSelection,\n\tselectionEnd: WPBlockSelection,\n\tinitialPosition: number | null\n): Promise< void > {\n\tconst { editEntityRecord } = dispatch( coreStore );\n\tconst { getCurrentPostId, getCurrentPostType } = select( editorStore );\n\n\tconst postId = getCurrentPostId();\n\tconst postType = getCurrentPostType();\n\n\tif ( ! postId || ! postType || ! selectionStart.clientId ) {\n\t\treturn;\n\t}\n\n\t// Send an entityRecord `selection` update if we have a selection.\n\t//\n\t// Normally WordPress updates the `selection` property of the post when changes are made to blocks.\n\t// In a multi-user setup, block changes can occur from other users. When an entity is updated from another\n\t// user's changes, useBlockSync() in Gutenberg will reset the user's selection to the last saved selection.\n\t//\n\t// Manually adding an edit for each movement ensures that other user's changes to the document will\n\t// not cause the local user's selection to reset to the last local change location.\n\tconst edits = {\n\t\tselection: { selectionStart, selectionEnd, initialPosition },\n\t};\n\n\tawait editEntityRecord( 'postType', postType, postId, edits, {\n\t\tundoIgnore: true,\n\t} );\n}\n","import { type EditorState, type UserState } from '@/store/awareness-store';\nimport { areSelectionsEqual } from '@/utilities/selection';\n\nfunction areEditorStatesEqual( state1?: EditorState, state2?: EditorState ): boolean {\n\treturn Boolean( state1 && state2 && areSelectionsEqual( state1.selection, state2.selection ) );\n}\n\nexport function areUserStatesEqual( userState1: UserState, userState2: UserState ): boolean {\n\tif ( Object.keys( userState1 ).length !== Object.keys( userState2 ).length ) {\n\t\treturn false;\n\t}\n\n\treturn Object.entries( userState1 ).every( ( [ key, value ] ) => {\n\t\t// Update this switch with any non-primitive fields added to UserState.\n\t\tswitch ( key ) {\n\t\t\tcase 'editorState':\n\t\t\t\treturn areEditorStatesEqual( userState1.editorState, userState2.editorState );\n\n\t\t\tdefault:\n\t\t\t\treturn value === userState2[ key as keyof UserState ];\n\t\t}\n\t} );\n}\n","import { User } from '@wordpress/core-data';\nimport { register, createReduxStore, StoreDescriptor } from '@wordpress/data';\n\nimport { type SelectionState } from '@/utilities/selection';\nimport { areUserStatesEqual } from '@/utilities/user';\n\nconst STORE_NAME = 'vip-real-time-collaboration/awareness';\n\nexport type WordPressUserInfo = Pick< User, 'id' | 'name' > & { avatarUrl?: string };\n\nexport interface UserState extends WordPressUserInfo {\n\tbrowserType: string;\n\tclientId: number;\n\tcolor: string;\n\teditorState: EditorState;\n\tisConnected: boolean;\n\tisMe: boolean;\n}\n\nexport interface EditorState {\n\tselection: SelectionState;\n}\n\nexport interface AwarenessStore {\n\tuserMap: Map< number, UserState >;\n}\n\ninterface PatchUserAction {\n\ttype: 'PATCH_USER';\n\tpayload: { clientId: number; userState: Partial< UserState > };\n}\n\ninterface RemoveUserAction {\n\ttype: 'REMOVE_USER';\n\tpayload: { clientId: number };\n}\n\ninterface SetCurrentUserSelectionAction {\n\ttype: 'SET_CURRENT_USER_SELECTION';\n\tpayload: { selection: SelectionState };\n}\n\ninterface UpsertUserAction {\n\ttype: 'UPSERT_USER';\n\tpayload: { clientId: number; userState: UserState };\n}\n\ntype AwarenessAction =\n\t| PatchUserAction\n\t| RemoveUserAction\n\t| SetCurrentUserSelectionAction\n\t| UpsertUserAction;\n\nconst DEFAULT_STATE: AwarenessStore = {\n\tuserMap: new Map< number, UserState >(),\n};\n\nconst actions = {\n\tpatchUser: ( clientId: number, userState: Partial< UserState > ): AwarenessAction => ( {\n\t\ttype: 'PATCH_USER',\n\t\tpayload: { clientId, userState },\n\t} ),\n\n\t// Call when a user leaves the editor (after a delay)\n\tremoveUser: ( clientId: number ): AwarenessAction => ( {\n\t\ttype: 'REMOVE_USER',\n\t\tpayload: { clientId },\n\t} ),\n\n\tupsertUser: ( clientId: number, userState: UserState ): AwarenessAction => ( {\n\t\ttype: 'UPSERT_USER',\n\t\tpayload: { clientId, userState },\n\t} ),\n};\n\nconst reducer = ( state = DEFAULT_STATE, action: AwarenessAction ): AwarenessStore => {\n\tswitch ( action.type ) {\n\t\tcase 'PATCH_USER': {\n\t\t\tif ( state.userMap.has( action.payload.clientId ) ) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tconst existingState = state.userMap.get( action.payload.clientId )!;\n\t\t\t\tconst updatedState = {\n\t\t\t\t\t...existingState,\n\t\t\t\t\t...action.payload.userState,\n\t\t\t\t};\n\n\t\t\t\tif ( ! areUserStatesEqual( existingState, updatedState ) ) {\n\t\t\t\t\tstate.userMap.set( action.payload.clientId, updatedState );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tuserMap: new Map( state.userMap ),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// No changes, don't update the state.\n\t\t\treturn state;\n\t\t}\n\n\t\tcase 'REMOVE_USER': {\n\t\t\tstate.userMap.delete( action.payload.clientId );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserMap: new Map( state.userMap ),\n\t\t\t};\n\t\t}\n\n\t\tcase 'UPSERT_USER': {\n\t\t\tif ( state.userMap.has( action.payload.clientId ) ) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tconst existingState = state.userMap.get( action.payload.clientId )!;\n\n\t\t\t\tif ( areUserStatesEqual( existingState, action.payload.userState ) ) {\n\t\t\t\t\t// No changes, don't update the state.\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.userMap.set( action.payload.clientId, action.payload.userState );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserMap: new Map( state.userMap ),\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst selectors = {\n\tgetActiveClientIds( state: AwarenessStore ): number[] {\n\t\treturn Array.from( state.userMap.keys() );\n\t},\n\tgetActiveUsers( state: AwarenessStore ): Map< number, UserState > {\n\t\treturn state.userMap;\n\t},\n\tisDisconnected( state: AwarenessStore ): boolean {\n\t\treturn (\n\t\t\tArray.from( selectors.getActiveUsers( state ).values() ).findIndex(\n\t\t\t\tuser => user.isMe && false === user.isConnected\n\t\t\t) !== -1\n\t\t);\n\t},\n};\n\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\n( register as ( storeDescriptor: StoreDescriptor ) => void )( store );\n\nexport interface AwarenessStoreSelectors {\n\tgetActiveClientIds: () => number[];\n\tgetActiveUsers: () => Map< number, UserState >;\n\tisDisconnected: () => boolean;\n}\n","import { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\nimport {\n\tAwarenessStoreSelectors,\n\tUserState,\n\tstore as awarenessStore,\n} from '@/store/awareness-store';\n\n/**\n * Selects active users in the awareness store with the current user sorted to the front of the list.\n */\nexport function useSortedAwarenessUsers(): UserState[] {\n\tconst activeUsers = useSelect< AwarenessStoreSelectors, Map< number, UserState > >( select => {\n\t\treturn select( awarenessStore ).getActiveUsers();\n\t} );\n\n\treturn useMemo( () => {\n\t\treturn Array.from( activeUsers.values() ).sort( ( user1: UserState, user2: UserState ) => {\n\t\t\tif ( user1.isMe && ! user2.isMe ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( ! user1.isMe && user2.isMe ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} );\n\t}, [ activeUsers ] );\n}\n","import { useSelect } from '@wordpress/data';\n\nimport { Avatar } from '@/components/avatar';\nimport { useSortedAwarenessUsers } from '@/hooks/use-sorted-awareness-users';\nimport { store as rtcSettingsStore, type SettingsStoreSelectors } from '@/store/settings-store';\n\n/**\n * Renders a list of avatars for the active users, with a maximum of 3 visible avatars.\n */\nexport function Avatars() {\n\tconst activeUsers = useSortedAwarenessUsers();\n\tconst isSelfAwarenessEnabled = useSelect< SettingsStoreSelectors, boolean >( select => {\n\t\treturn select( rtcSettingsStore ).isSelfAwarenessEnabled();\n\t} );\n\n\tif ( activeUsers.length <= 1 && ! isSelfAwarenessEnabled ) {\n\t\t// Hide avatars when there's only one user.\n\t\t// This also avoids showing a single user when navigating away from the editor\n\t\t// after the connection is closed but before the page reloads.\n\t\treturn null;\n\t}\n\n\tconst visibleUsers = activeUsers.slice( 0, 3 );\n\tconst remainingUsers = activeUsers.slice( 3 );\n\tconst remainingUsersText = remainingUsers.map( userState => userState.name ).join( ', ' );\n\n\treturn (\n\t\t<div className=\"vip-real-time-collaboration-avatars\">\n\t\t\t{ visibleUsers.map( userState => (\n\t\t\t\t<Avatar key={ userState.clientId } userState={ userState } showUserColorBorder={ true } />\n\t\t\t) ) }\n\n\t\t\t{ remainingUsers.length > 0 && (\n\t\t\t\t<div className=\"vip-real-time-collaboration-avatar-remaining\" title={ remainingUsersText }>\n\t\t\t\t\t+{ remainingUsers.length }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst error = /*#__PURE__*/_jsx(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsx(Path, {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12.218 5.377a.25.25 0 0 0-.436 0l-7.29 12.96a.25.25 0 0 0 .218.373h14.58a.25.25 0 0 0 .218-.372l-7.29-12.96Zm-1.743-.735c.669-1.19 2.381-1.19 3.05 0l7.29 12.96a1.75 1.75 0 0 1-1.525 2.608H4.71a1.75 1.75 0 0 1-1.525-2.608l7.29-12.96ZM12.75 17.46h-1.5v-1.5h1.5v1.5Zm-1.5-3h1.5v-5h-1.5v5Z\"\n  })\n});\nexport default error;\n//# sourceMappingURL=error.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","import {\n\tModal,\n\tButton,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tIcon,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { error } from '@wordpress/icons';\n\nimport { useCopyPostContentToClipboard } from '@/hooks/use-copy-post-content-to-clipboard';\nimport { useIsDisconnected } from '@/hooks/use-is-disconnected';\nimport '@/components/post-locked-modal.scss';\n\nexport function PostLockedModal() {\n\tconst buttonRef = useCopyPostContentToClipboard();\n\tconst isDisconnected = useIsDisconnected();\n\n\tif ( ! isDisconnected ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\t__experimentalHideHeader={ true }\n\t\t\ticon={ error }\n\t\t\tisDismissible={ false }\n\t\t\tisFullScreen={ false }\n\t\t\tonRequestClose={ () => {} }\n\t\t\tshouldCloseOnClickOutside={ false }\n\t\t\tshouldCloseOnEsc={ false }\n\t\t>\n\t\t\t<div className=\"vip-rtc-post-locked-modal__container\">\n\t\t\t\t<VStack alignment=\"center\" justify=\"center\" spacing={ 2 }>\n\t\t\t\t\t<Icon fill=\"#ccc\" icon={ error } size={ 64 } />\n\t\t\t\t\t<h1>{ __( 'Disconnected', 'vip-real-time-collaboration' ) }</h1>\n\t\t\t\t\t<p className=\"vip-rtc-post-locked-modal__p\">\n\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t'You are currently disconnected from the collaborative editing server.',\n\t\t\t\t\t\t\t'vip-real-time-collaboration'\n\t\t\t\t\t\t) }{ ' ' }\n\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t'Editing is temporarily disabled to prevent conflicts with other users.',\n\t\t\t\t\t\t\t'vip-real-time-collaboration'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</p>\n\t\t\t\t\t<HStack spacing={ 2 } justify=\"center\">\n\t\t\t\t\t\t<Button ref={ buttonRef } variant=\"primary\">\n\t\t\t\t\t\t\t{ __( 'Copy post content', 'vip-real-time-collaboration' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button href=\"edit.php\" isDestructive={ true } variant=\"secondary\">\n\t\t\t\t\t\t\t{ __( 'Edit another post', 'vip-real-time-collaboration' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n}\n","import { useCopyToClipboard } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\nimport { type EditorStoreSelectors, store as editorStore } from '@wordpress/editor';\n\nexport function useCopyPostContentToClipboard( onSuccess: () => void = () => {} ) {\n\tconst postContent = useSelect< EditorStoreSelectors, string | null >( select => {\n\t\tconst { getEditedPostContent } = select( editorStore );\n\t\treturn getEditedPostContent();\n\t} );\n\n\treturn useCopyToClipboard( postContent ?? '', onSuccess );\n}\n","import { useSelect } from '@wordpress/data';\nimport { useEffect, useRef, useState } from '@wordpress/element';\n\nimport { AwarenessStoreSelectors, store as awarenessStore } from '@/store/awareness-store';\nimport { DISCONNECTED_THRESHOLD_IN_MS } from '@/utilities/config';\n\nexport function useIsDisconnected(): boolean {\n\tconst [ disconnectedPastThreshold, setDisconnectedPastThreshold ] = useState< boolean >( false );\n\tconst timeoutRef = useRef< NodeJS.Timeout | null >( null );\n\n\tconst isDisconnected = useSelect< AwarenessStoreSelectors, boolean >( select => {\n\t\treturn select( awarenessStore ).isDisconnected();\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( isDisconnected ) {\n\t\t\ttimeoutRef.current = setTimeout( () => {\n\t\t\t\tsetDisconnectedPastThreshold( true );\n\t\t\t}, DISCONNECTED_THRESHOLD_IN_MS );\n\t\t} else {\n\t\t\tsetDisconnectedPastThreshold( false );\n\t\t\tclearTimeout( timeoutRef.current ?? undefined );\n\t\t}\n\n\t\treturn () => clearTimeout( timeoutRef.current ?? undefined );\n\t}, [ isDisconnected ] );\n\n\treturn disconnectedPastThreshold;\n}\n","import { useSelect } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\nimport { store as rtcSettingsStore, SettingsStoreSelectors } from '../store/settings-store';\nimport {\n\tAwarenessStoreSelectors,\n\tUserState,\n\tstore as awarenessStore,\n} from '@/store/awareness-store';\nimport { SelectionType, type SelectionWholeBlock } from '@/utilities/selection';\n\n/**\n * Custom hook for highlighting selected blocks in the editor\n * @param blockEditorDocument - Ref to the block editor document, used to directly style block elements.\n */\nexport function useBlockHighlighting( blockEditorDocument: Document | null ) {\n\tconst highlightedBlockIds = useRef< Set< string > >( new Set() );\n\tconst userStates = useSelect< AwarenessStoreSelectors, UserState[] >( select => {\n\t\treturn Array.from( select( awarenessStore ).getActiveUsers().values() );\n\t} );\n\n\tconst { isHighlightsEnabled, isSelfAwarenessEnabled } = useSelect<\n\t\tSettingsStoreSelectors,\n\t\t{ isHighlightsEnabled: boolean; isSelfAwarenessEnabled: boolean }\n\t>( select => {\n\t\treturn {\n\t\t\tisHighlightsEnabled: select( rtcSettingsStore ).isAwarenessHighlightsEnabled(),\n\t\t\tisSelfAwarenessEnabled: select( rtcSettingsStore ).isSelfAwarenessEnabled(),\n\t\t};\n\t} );\n\n\t// Draw block highlights\n\tuseEffect( () => {\n\t\t// Don't do anything if editor is not rendered yet.\n\t\tif ( blockEditorDocument === null ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst unhighlightBlocks = ( blockIds: string[] ) => {\n\t\t\tblockIds.forEach( blockId => {\n\t\t\t\tconst blockElement = getBlockElementById( blockEditorDocument, blockId );\n\n\t\t\t\tif ( blockElement ) {\n\t\t\t\t\tblockElement.style.boxShadow = '';\n\t\t\t\t\tblockElement.style.borderRadius = '';\n\t\t\t\t}\n\n\t\t\t\thighlightedBlockIds.current.delete( blockId );\n\t\t\t} );\n\t\t};\n\n\t\tconst blocksToHighlight = userStates\n\t\t\t.map( userState => {\n\t\t\t\tconst isWholeBlockSelected =\n\t\t\t\t\tuserState.editorState?.selection?.type === SelectionType.WholeBlock;\n\t\t\t\tconst shouldDrawUser = userState.isMe ? isSelfAwarenessEnabled : true;\n\n\t\t\t\tif ( isWholeBlockSelected && shouldDrawUser ) {\n\t\t\t\t\tconst selection = userState.editorState.selection as SelectionWholeBlock;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblockId: selection.blockId,\n\t\t\t\t\t\tcolor: userState.color,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t} )\n\t\t\t.filter( block => block !== null );\n\n\t\tif ( ! isHighlightsEnabled ) {\n\t\t\t// If the overlay is disabled, remove all highlights.\n\t\t\tunhighlightBlocks( Array.from( highlightedBlockIds.current ) );\n\t\t\treturn;\n\t\t}\n\n\t\t// Unhighlight blocks that are no longer highlighted.\n\t\tconst selectedBlockIds = blocksToHighlight.map( block => block.blockId );\n\t\tconst blocksIdsToUnhighlight = Array.from( highlightedBlockIds.current ).filter(\n\t\t\tblockId => ! selectedBlockIds.includes( blockId )\n\t\t);\n\n\t\tunhighlightBlocks( blocksIdsToUnhighlight );\n\n\t\t// Highlight blocks that are currently highlighted.\n\t\tblocksToHighlight.forEach( blockColorPair => {\n\t\t\tconst { color, blockId } = blockColorPair;\n\t\t\tconst blockElement = getBlockElementById( blockEditorDocument, blockId );\n\n\t\t\tif ( ! blockElement ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( blockElement ) {\n\t\t\t\tblockElement.style.boxShadow = `${ color } 0 0 0 2px`;\n\t\t\t\tblockElement.style.borderRadius = '4px';\n\t\t\t\thighlightedBlockIds.current.add( blockId );\n\t\t\t}\n\t\t} );\n\t}, [ userStates, isHighlightsEnabled, isSelfAwarenessEnabled, blockEditorDocument ] );\n}\n\nconst getBlockElementById = (\n\tblockEditorDocument: Document,\n\tblockId: string\n): HTMLElement | null => {\n\treturn blockEditorDocument.querySelector( `[data-block=\"${ blockId }\"]` );\n};\n","/**\n * Creates a throttled version of a callback using requestAnimationFrame.\n *\n * @param callback - The function to throttle.\n * @returns A throttled version of the callback.\n */\nexport function throttleByAnimationFrame( callback: () => void ) {\n\tlet animationFrameId: number | null = null;\n\n\treturn () => {\n\t\tif ( animationFrameId !== null ) {\n\t\t\tcancelAnimationFrame( animationFrameId );\n\t\t}\n\t\tanimationFrameId = requestAnimationFrame( () => {\n\t\t\tcallback();\n\t\t} );\n\t};\n}\n","import { useSelect } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\nimport { useSortedAwarenessUsers } from '@/hooks/use-sorted-awareness-users';\nimport { store as rtcSettingsStore, SettingsStoreSelectors } from '@/store/settings-store';\nimport { Logger } from '@/utilities/logger';\nimport { type SelectionCursor, type SelectionState, SelectionType } from '@/utilities/selection';\nimport { throttleByAnimationFrame } from '@/utilities/throttle';\n\nimport type { MutableRefObject } from 'react';\n\nenum DrawType {\n\tNone,\n\tOtherUsers,\n\tAll,\n}\n\nconst logger = new Logger( 'use-render-cursors' );\n\n/**\n * Custom hook for rendering cursors for each user in the editor.\n * @param overlayRef - The ref to the overlay element\n * @param blockEditorDocument - The block editor document\n * @param awareness - The awareness instance\n */\nexport function useRenderCursors(\n\toverlayRef: MutableRefObject< HTMLElement | null >,\n\tblockEditorDocument: Document | null\n) {\n\tconst drawType = useSelect< SettingsStoreSelectors, DrawType >( select => {\n\t\tconst { isAwarenessCursorsEnabled, isSelfAwarenessEnabled } = select( rtcSettingsStore );\n\t\tif ( isAwarenessCursorsEnabled() ) {\n\t\t\tif ( isSelfAwarenessEnabled() ) {\n\t\t\t\treturn DrawType.All;\n\t\t\t}\n\n\t\t\treturn DrawType.OtherUsers;\n\t\t}\n\n\t\treturn DrawType.None;\n\t} );\n\n\tconst sortedUsers = useSortedAwarenessUsers();\n\n\t// Use a ref to store the current render function to avoid stale closures\n\tconst renderCursorsRef = useRef< () => void >();\n\n\t// Draw user cursors in the overlay.\n\tuseEffect( () => {\n\t\trenderCursorsRef.current = () => {\n\t\t\tconst userSelections = sortedUsers.map( user => ( {\n\t\t\t\tuserName: user.name,\n\t\t\t\t// Replace local user's selection with the current selection from the editor state.\n\t\t\t\tselection: user.editorState.selection ?? { type: SelectionType.None },\n\t\t\t\tcolor: user.color,\n\t\t\t\tisMe: user.isMe,\n\t\t\t} ) );\n\n\t\t\tdrawUserSelections( overlayRef.current, blockEditorDocument, userSelections, drawType );\n\t\t};\n\n\t\t// Render cursors immediately when data changes\n\t\trenderCursorsRef.current();\n\t}, [ drawType, sortedUsers, overlayRef.current, blockEditorDocument ] );\n\n\t// Also re-render cursors on resize\n\tuseEffect( () => {\n\t\tconst handleResize = () => {\n\t\t\tif ( renderCursorsRef.current ) {\n\t\t\t\trenderCursorsRef.current();\n\t\t\t}\n\t\t};\n\n\t\tconst throttledHandleResize = throttleByAnimationFrame( handleResize );\n\n\t\twindow.addEventListener( 'resize', throttledHandleResize );\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'resize', throttledHandleResize );\n\t\t};\n\t}, [] );\n}\n\n/**\n * Draws user selections on the overlay.\n *\n * @param overlay - The overlay element\n * @param editorDocument - The editor document\n * @param userSelections - The user selections\n */\nconst drawUserSelections = (\n\toverlay: HTMLElement | null,\n\teditorDocument: Document | null,\n\tuserSelections: { userName: string; selection: SelectionState; color: string; isMe: boolean }[],\n\tdrawType: DrawType\n) => {\n\tif ( ! overlay || ! editorDocument ) {\n\t\treturn;\n\t}\n\n\t// Clear up previous state\n\tconst userContainers = overlay.querySelectorAll( '.vip-real-time-collaboration-user' );\n\tuserContainers.forEach( container => {\n\t\tcontainer.remove();\n\t} );\n\n\tif ( drawType === DrawType.None ) {\n\t\treturn;\n\t}\n\n\t// Draw cursors\n\tuserSelections.forEach( ( { userName, selection, color, isMe } ) => {\n\t\tif ( isMe && drawType === DrawType.OtherUsers ) {\n\t\t\t// Skip drawing the local user's cursor.\n\t\t\treturn;\n\t\t}\n\n\t\tlet coords: { x: number; y: number; height: number } | null = null;\n\n\t\tif ( selection.type === SelectionType.None ) {\n\t\t\t// Nothing selected.\n\t\t} else if ( selection.type === SelectionType.WholeBlock ) {\n\t\t\t// Don't try to draw a cursor for a whole block selection.\n\t\t} else if ( selection.type === SelectionType.Cursor ) {\n\t\t\tcoords = getCursorPosition( selection, editorDocument, overlay );\n\t\t} else if ( selection.type === SelectionType.SelectionInOneBlock ) {\n\t\t\t// Until selection logic is implemented, render a selection as a cursor at the beginning of the selection.\n\t\t\tconst selectionAsCursor: SelectionCursor = {\n\t\t\t\ttype: SelectionType.Cursor,\n\t\t\t\tblockId: selection.blockId,\n\t\t\t\tcursorPosition: selection.cursorStartPosition,\n\t\t\t};\n\n\t\t\tcoords = getCursorPosition( selectionAsCursor, editorDocument, overlay );\n\t\t} else if ( selection.type === SelectionType.SelectionInMultipleBlocks ) {\n\t\t\t// Until selection logic is implemented, render a selection as a cursor at the beginning of the selection.\n\t\t\tconst selectionAsCursor: SelectionCursor = {\n\t\t\t\ttype: SelectionType.Cursor,\n\t\t\t\tblockId: selection.blockStartId,\n\t\t\t\tcursorPosition: selection.cursorStartPosition,\n\t\t\t};\n\n\t\t\tcoords = getCursorPosition( selectionAsCursor, editorDocument, overlay );\n\t\t}\n\n\t\tif ( coords ) {\n\t\t\t// Create parent container\n\t\t\t// Use `document` instead of `editorDocument` because the overlay is in the parent document.\n\t\t\tconst userContainer = document.createElement( 'div' );\n\t\t\tuserContainer.className = 'vip-real-time-collaboration-user';\n\t\t\tuserContainer.style.left = `${ coords.x }px`;\n\t\t\tuserContainer.style.top = `${ coords.y }px`;\n\n\t\t\t// Create cursor element\n\t\t\tconst cursor = document.createElement( 'div' );\n\t\t\tcursor.className = 'vip-real-time-collaboration-user-cursor';\n\t\t\tcursor.style.backgroundColor = color;\n\t\t\tcursor.style.height = `${ coords.height }px`;\n\n\t\t\t// Create label\n\t\t\tconst label = document.createElement( 'div' );\n\t\t\tlabel.className = 'vip-real-time-collaboration-user-label';\n\t\t\tlabel.textContent = userName;\n\t\t\tlabel.style.backgroundColor = color;\n\n\t\t\t// Append cursor and label to the container\n\t\t\tuserContainer.appendChild( cursor );\n\t\t\tuserContainer.appendChild( label );\n\n\t\t\toverlay.appendChild( userContainer );\n\t\t}\n\t} );\n};\n\n/**\n * Given a selection, returns the coordinates of the cursor in the block.\n *\n * @param selection - The selection\n * @param editorDocument - The editor document\n * @param overlay - The overlay element\n * @returns The position of the cursor\n */\nconst getCursorPosition = (\n\tselection: SelectionCursor,\n\teditorDocument: Document,\n\toverlay: HTMLElement\n) => {\n\tconst blockElement = editorDocument.querySelector(\n\t\t`[data-block=\"${ selection.blockId }\"]`\n\t) as HTMLElement;\n\n\tif ( ! blockElement ) {\n\t\treturn null;\n\t}\n\n\tconst coords = getOffsetPositionInBlock(\n\t\tblockElement,\n\t\tselection.cursorPosition,\n\t\teditorDocument,\n\t\toverlay\n\t);\n\n\treturn coords ?? null;\n};\n\n/**\n * Given a block element and a character offset, returns the coordinates for drawing a visual cursor in the block.\n *\n * @param blockElement - The block element\n * @param charOffset - The character offset\n * @param editorDocument - The editor document\n * @param overlay - The overlay element\n * @returns The position of the cursor\n */\nconst getOffsetPositionInBlock = (\n\tblockElement: HTMLElement,\n\tcharOffset: number,\n\teditorDocument: Document,\n\toverlay: HTMLElement\n) => {\n\tconst { node, offset } = findInnerBlockOffset( blockElement, charOffset, editorDocument );\n\n\tconst cursorRange = editorDocument.createRange();\n\n\ttry {\n\t\tcursorRange.setStart( node, offset );\n\t} catch ( error ) {\n\t\tlogger.error( 'Failed to create a range for cursor:', { error, node, offset } );\n\t\treturn null;\n\t}\n\n\t// Ensure the range only represents single point in the DOM.\n\tcursorRange.collapse( true );\n\n\tconst cursorRect = cursorRange.getBoundingClientRect();\n\tconst overlayRect = overlay.getBoundingClientRect();\n\tconst blockRect = blockElement.getBoundingClientRect();\n\n\tlet cursorX = 0;\n\tlet cursorY = 0;\n\n\tif (\n\t\tcursorRect.x === 0 &&\n\t\tcursorRect.y === 0 &&\n\t\tcursorRect.width === 0 &&\n\t\tcursorRect.height === 0\n\t) {\n\t\t// This can happen for empty blocks.\n\t\tcursorX = blockRect.left - overlayRect.left;\n\t\tcursorY = blockRect.top - overlayRect.top;\n\t} else {\n\t\tcursorX = cursorRect.left - overlayRect.left;\n\t\tcursorY = cursorRect.top - overlayRect.top;\n\t}\n\n\tlet cursorHeight = cursorRect.height;\n\tif ( cursorHeight === 0 ) {\n\t\tcursorHeight =\n\t\t\tparseInt( window.getComputedStyle( blockElement ).lineHeight, 10 ) || blockRect.height;\n\t}\n\n\treturn {\n\t\tx: cursorX,\n\t\ty: cursorY,\n\t\theight: cursorHeight,\n\t};\n};\n\nconst MAX_NODE_OFFSET_COUNT = 1000;\n\n/**\n * Given a block element and a character offset, returns an exact inner node and offset for use in a range.\n *\n * @param blockElement - The block element\n * @param offset - The character offset\n * @param editorDocument - The editor document\n * @returns The node and offset of the character at the offset\n */\nconst findInnerBlockOffset = (\n\tblockElement: HTMLElement,\n\toffset: number,\n\teditorDocument: Document\n) => {\n\tconst treeWalker = editorDocument.createTreeWalker(\n\t\tblockElement,\n\t\tNodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT // eslint-disable-line no-bitwise\n\t);\n\n\tlet currentOffset = 0;\n\tlet lastTextNode: Node | null = null;\n\n\tlet node: Node | null = null;\n\tlet nodeCount = 1;\n\n\twhile ( ( node = treeWalker.nextNode() ) ) {\n\t\tnodeCount++;\n\n\t\tif ( nodeCount > MAX_NODE_OFFSET_COUNT ) {\n\t\t\t// If we've walked too many nodes, return the last text node or the beginning of the block.\n\t\t\tif ( lastTextNode ) {\n\t\t\t\treturn { node: lastTextNode, offset: 0 };\n\t\t\t}\n\t\t\treturn { node: blockElement, offset: 0 };\n\t\t}\n\n\t\tconst nodeLength = node.nodeValue?.length ?? 0;\n\n\t\tif ( node.nodeType === Node.ELEMENT_NODE ) {\n\t\t\tif ( node.nodeName === 'BR' ) {\n\t\t\t\t// Treat <br> as a single \"\\n\" character.\n\n\t\t\t\tif ( currentOffset + 1 >= offset ) {\n\t\t\t\t\t// If the <br> occurs right on the target offset, return the next text node.\n\t\t\t\t\tconst nodeAfterBr = treeWalker.nextNode();\n\n\t\t\t\t\tif ( nodeAfterBr?.nodeType === Node.TEXT_NODE ) {\n\t\t\t\t\t\treturn { node: nodeAfterBr, offset: 0 };\n\t\t\t\t\t} else if ( lastTextNode ) {\n\t\t\t\t\t\t// If there's no text node after the <br>, return the end offset of the last text node.\n\t\t\t\t\t\treturn { node: lastTextNode, offset: lastTextNode.nodeValue?.length ?? 0 };\n\t\t\t\t\t}\n\t\t\t\t\t// Just in case, if there's no last text node, return the beginning of the block.\n\t\t\t\t\treturn { node: blockElement, offset: 0 };\n\t\t\t\t}\n\n\t\t\t\t// The <br> is before the target offset. Count it as a single character.\n\t\t\t\tcurrentOffset += 1;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t// Skip other element types.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif ( nodeLength === 0 ) {\n\t\t\t// Skip empty nodes.\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( currentOffset + nodeLength >= offset ) {\n\t\t\t// This node exceeds the target offset. Return the node and the position of the offset within it.\n\t\t\treturn { node, offset: offset - currentOffset };\n\t\t}\n\n\t\tcurrentOffset += nodeLength;\n\n\t\tif ( node.nodeType === Node.TEXT_NODE ) {\n\t\t\tlastTextNode = node;\n\t\t}\n\t}\n\n\tif ( lastTextNode && lastTextNode.nodeValue?.length ) {\n\t\t// We didn't reach the target offset. Return the last text node's last character.\n\t\treturn { node: lastTextNode, offset: lastTextNode.nodeValue.length };\n\t}\n\n\t// We didn't find any text nodes. Return the beginning of the block.\n\treturn { node: blockElement, offset: 0 };\n};\n","import { useSelect } from '@wordpress/data';\nimport { useRef } from '@wordpress/element';\n\nimport { Avatars } from '@/components/avatars';\nimport { PostLockedModal } from '@/components/post-locked-modal';\nimport { useBlockHighlighting } from '@/hooks/use-block-highlighting';\nimport { useRenderCursors } from '@/hooks/use-render-cursors';\nimport { store as rtcSettingsStore, SettingsStoreSelectors } from '@/store/settings-store';\nimport '@/components/rtc-overlay.scss';\n\ninterface RTCOverlayProps {\n\tiframeDocument: Document;\n}\n\n/**\n * This component is responsible for rendering awareness components within the editor iframe.\n */\nexport function RTCOverlay( { iframeDocument }: RTCOverlayProps ) {\n\tconst overlayRef = useRef< HTMLDivElement | null >( null );\n\n\tconst isAvatarsEnabled = useSelect< SettingsStoreSelectors, boolean >( select => {\n\t\treturn select( rtcSettingsStore ).isAwarenessAvatarsEnabled();\n\t} );\n\n\tuseBlockHighlighting( iframeDocument );\n\tuseRenderCursors( overlayRef, iframeDocument );\n\n\treturn (\n\t\t<>\n\t\t\t{ /* This is a full overlay that covers the entire iframe document.\n\t\t\t\tGood for scrollable elements like cursor indicators */ }\n\t\t\t<div className=\"vip-real-time-collaboration-overlay-full\" ref={ overlayRef } />\n\n\t\t\t{ /* This is a fixed overlay that covers the iframe window.\n\t\t\t\tGood for floating elements like awareness avatars */ }\n\t\t\t<div className=\"vip-real-time-collaboration-overlay-fixed\">\n\t\t\t\t{ isAvatarsEnabled && <Avatars /> }\n\t\t\t</div>\n\n\t\t\t<PostLockedModal />\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","export function getBrowserName() {\n\tconst userAgent = window.navigator.userAgent;\n\tlet browserName = 'Unknown';\n\n\tif ( userAgent.includes( 'Firefox' ) ) {\n\t\tbrowserName = 'Firefox';\n\t} else if ( userAgent.includes( 'Edg' ) ) {\n\t\tbrowserName = 'Microsoft Edge';\n\t} else if ( userAgent.includes( 'Chrome' ) && ! userAgent.includes( 'Edg' ) ) {\n\t\tbrowserName = 'Chrome';\n\t} else if ( userAgent.includes( 'Safari' ) && ! userAgent.includes( 'Chrome' ) ) {\n\t\tbrowserName = 'Safari';\n\t} else if ( userAgent.includes( 'MSIE' ) || userAgent.includes( 'Trident' ) ) {\n\t\tbrowserName = 'Internet Explorer';\n\t} else if ( userAgent.includes( 'Opera' ) || userAgent.includes( 'OPR' ) ) {\n\t\tbrowserName = 'Opera';\n\t}\n\n\treturn browserName;\n}\n","import { store as coreStore } from '@wordpress/core-data';\nimport { select } from '@wordpress/data';\n\nimport type { WordPressUserInfo } from '@/store/awareness-store';\nimport type { ObjectData } from '@wordpress/sync';\n\nexport async function getCurrentUserInfo(): Promise< WordPressUserInfo > {\n\tconst { avatar_urls: avatarUrls, id, name } = select( coreStore ).getCurrentUser() ?? {};\n\n\tif ( ! id ) {\n\t\t// getCurrentUser() returns an empty user object for a short time after load.\n\t\t// In that case, wait and try again.\n\t\tawait new Promise( resolve => setTimeout( resolve, 100 ) );\n\t\treturn await getCurrentUserInfo();\n\t}\n\tconst avatarUrl = avatarUrls?.[ 24 ] || avatarUrls?.[ 48 ] || avatarUrls?.[ 96 ];\n\n\treturn { avatarUrl, id, name };\n}\n\n/**\n * Extract the raw content from an entity record.\n */\nexport function getRawContentFromEntityRecord( record: ObjectData ): string | null {\n\t// Content may be a string property or a nested object with a `raw` property.\n\tconst content = 'content' in record ? record.content : null;\n\n\tif ( 'string' === typeof content ) {\n\t\treturn content;\n\t}\n\n\treturn content &&\n\t\t'object' === typeof content &&\n\t\t'raw' in content &&\n\t\t'string' === typeof content.raw\n\t\t? content.raw\n\t\t: null;\n}\n\n/**\n * Extract the meta object from an entity record.\n */\nexport function getMetaFromEntityRecord( record: ObjectData ): Record< string, unknown > {\n\treturn 'meta' in record && record.meta && 'object' === typeof record.meta\n\t\t? ( record.meta as Record< string, unknown > )\n\t\t: {};\n}\n","import { loadFromLocalStorage, saveToLocalStorage } from './local-storage';\n\n// From Material UI's metro colors\n// https://materialui.co/metrocolors\nconst METRO_COLORS = [\n\t'#A4C400',\n\t'#60A917',\n\t'#008A00',\n\t'#00ABA9',\n\t'#1BA1E2',\n\t'#0050EF',\n\t'#6A00FF',\n\t'#AA00FF',\n\t'#F472D0',\n\t'#D80073',\n\t'#A20025',\n\t'#E51400',\n\t'#FA6800',\n\t'#F0A30A',\n\t'#E3C800',\n\t// '#825A2C', (Brown)\n\t// '#6D8764', (Olive)\n\t'#647687',\n\t// '#76608A', (Mauve)\n\t// '#A0522D', (Sienna)\n];\n\nconst USER_HIGHLIGHT_ALPHA = 0.7; // 0-1.0 to represent opacity\nconst LOCAL_STORAGE_KEY = 'vip-rtc-preferred-color';\n\n/**\n * Get a unique user color from the list of available metro colors, or generate a random color if none are available.\n * If the previously used color is available from localStorage, use it.\n *\n * @param existingColors - Colors that are already in use.\n * @returns The new user color, in #RGBA or HSL format.\n */\nconst getNewUserColor = ( existingColors: string[] ) => {\n\t// Remove the alpha value from the colors.\n\texistingColors = existingColors.map( color => color.slice( 0, -2 ) );\n\tconst availableColors = METRO_COLORS.filter( color => ! existingColors.includes( color ) );\n\n\tif ( availableColors.length === 0 ) {\n\t\t// If all colors are used, generate one at random\n\t\tconst hue = generateRandomInt( 0, 360 );\n\t\tconst saturation = generateRandomInt( 50, 100 );\n\t\tconst lightness = generateRandomInt( 45, 95 );\n\t\treturn `hsla(${ hue }, ${ saturation }%, ${ lightness }%, ${ USER_HIGHLIGHT_ALPHA })`;\n\t}\n\n\tlet hexColor = null;\n\n\tconst preferredColor = loadFromLocalStorage< string | null >( LOCAL_STORAGE_KEY, null );\n\n\tif ( preferredColor && availableColors.includes( preferredColor ) ) {\n\t\thexColor = preferredColor;\n\t} else {\n\t\tconst randomIndex = generateRandomInt( 0, availableColors.length - 1 );\n\t\thexColor = availableColors[ `${ randomIndex }` ];\n\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, hexColor );\n\t}\n\n\t// Convert alpha to hex value between 00 and FF, e.g. 0.7 -> 'B3'\n\tconst alphaHex = Math.round( USER_HIGHLIGHT_ALPHA * 0xff )\n\t\t.toString( 16 )\n\t\t.padStart( 2, '0' )\n\t\t.toUpperCase();\n\n\treturn `${ hexColor }${ alphaHex }`;\n};\n\n/**\n * Generate a random integer between min and max, inclusive.\n *\n * @param min - The minimum value.\n * @param max - The maximum value.\n * @returns A random integer between min and max.\n */\nconst generateRandomInt = ( min: number, max: number ) => {\n\treturn Math.floor( Math.random() * ( max - min + 1 ) ) + min;\n};\n\nexport { getNewUserColor };\n","/**\n * External dependencies\n */\nimport { type BlockEditorStoreSelectors, store as blockEditorStore } from '@wordpress/block-editor';\nimport { dispatch, select, subscribe } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\ttype UserState,\n\ttype WordPressUserInfo,\n\tstore as awarenessStore,\n} from '@/store/awareness-store';\nimport { getBrowserName } from '@/utilities/browser';\nimport {\n\tAWARENESS_CURSOR_UPDATE_DEBOUNCE_IN_MS,\n\tLOCAL_CURSOR_UPDATE_DEBOUNCE_IN_MS,\n\tREMOVAL_DELAY_IN_MS,\n} from '@/utilities/config';\nimport { getCurrentUserInfo } from '@/utilities/entity';\nimport { Logger } from '@/utilities/logger';\nimport {\n\tgetSelectionState,\n\tSelectionType,\n\tupdateSelectionInEntityRecord,\n} from '@/utilities/selection';\nimport { getNewUserColor } from '@/utilities/user-color';\n\nimport type { EntityID } from '@wordpress/sync';\nimport type { Awareness } from 'y-protocols/awareness';\n\ntype AwarenessClientID = number;\n\ninterface AwarenessStateChange {\n\tadded: AwarenessClientID[];\n\tupdated: AwarenessClientID[];\n\tremoved: AwarenessClientID[];\n}\n\nexport class AwarenessManager {\n\tprivate static __instance: AwarenessManager;\n\tprivate logger: Logger = new Logger( 'awareness-manager' );\n\n\tprivate constructor( private awareness: Awareness, private userInfo: WordPressUserInfo ) {\n\t\tthis.setCurrentUserState();\n\t\tthis.refreshAwareness();\n\t\tthis.subscribeToSelectionChanges();\n\t\tthis.subscribeToUserChanges();\n\t}\n\n\tpublic static async initialize( awareness: Awareness, entityId: EntityID ): Promise< void > {\n\t\tif ( AwarenessManager.__instance ) {\n\t\t\tAwarenessManager.__instance.logger.error(\n\t\t\t\t`AwarenessManager was created more than once for entity ${ entityId }.`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tAwarenessManager.__instance = new AwarenessManager( awareness, await getCurrentUserInfo() );\n\t}\n\n\tpublic static setConnectionStatus( clientId: number, isConnected: boolean ): void {\n\t\tif ( clientId !== AwarenessManager.__instance?.awareness.clientID ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { patchUser } = dispatch( awarenessStore );\n\t\tvoid patchUser( clientId, { isConnected } );\n\t}\n\n\tprivate setCurrentUserState(): void {\n\t\tconst states = this.getStates();\n\t\tconst otherUserColors = Array.from( states.values() )\n\t\t\t.filter( userState => ! userState.isMe )\n\t\t\t.map( userState => userState.color )\n\t\t\t.filter( Boolean );\n\n\t\tconst currentUserState: UserState = {\n\t\t\t...this.userInfo,\n\t\t\tbrowserType: getBrowserName(),\n\t\t\tclientId: this.awareness.clientID,\n\t\t\tcolor: getNewUserColor( otherUserColors ),\n\t\t\teditorState: this.getLocalStateField( 'editorState' ) ?? {\n\t\t\t\tselection: {\n\t\t\t\t\ttype: SelectionType.None,\n\t\t\t\t},\n\t\t\t},\n\t\t\tisConnected: true,\n\t\t\tisMe: true,\n\t\t};\n\n\t\tthis.awareness.setLocalState( currentUserState );\n\t}\n\n\t/*\n\t * Get the states from an awareness document.\n\t */\n\tprivate getStates(): Map< number, UserState > {\n\t\treturn this.awareness.getStates() as Map< number, UserState >;\n\t}\n\n\t/**\n\t * Set a local state field on an awareness document.\n\t */\n\tprivate getLocalStateField< FieldName extends keyof UserState >(\n\t\tfield: FieldName\n\t): UserState[ FieldName ] | undefined {\n\t\t// eslint-disable-next-line security/detect-object-injection\n\t\treturn ( this.awareness.getLocalState() as UserState )?.[ field ];\n\t}\n\n\t/**\n\t * Set a local state field on an awareness document.\n\t */\n\tprivate setLocalStateField< FieldName extends keyof UserState >(\n\t\tfield: FieldName,\n\t\tvalue: UserState[ FieldName ]\n\t): void {\n\t\tthis.awareness.setLocalStateField( field, value );\n\t}\n\n\tprivate refreshAwareness(): void {\n\t\tconst { removeUser, upsertUser } = dispatch( awarenessStore );\n\t\tconst { getActiveClientIds } = select( awarenessStore );\n\n\t\tconst clientIdsFromStore = new Set< number >( getActiveClientIds() );\n\t\tconst clientIdsFromAwareness = new Set< number >();\n\n\t\tthis.getStates().forEach( ( userState, clientId ) => {\n\t\t\t// The initial state may contain invalid state, so we validate it and\n\t\t\t// skip logging since the origin of the state is not from us.\n\t\t\tif ( ! this.validateUserState( userState ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tuserState.isMe = userState.clientId === this.awareness.clientID;\n\n\t\t\tvoid upsertUser( clientId, userState );\n\t\t\tclientIdsFromAwareness.add( clientId );\n\t\t} );\n\n\t\t// Remove users that are in the store but not in the awareness instance.\n\t\tclientIdsFromStore.forEach( clientId => {\n\t\t\tif ( ! clientIdsFromAwareness.has( clientId ) ) {\n\t\t\t\tvoid removeUser( clientId );\n\t\t\t}\n\t\t} );\n\t}\n\n\tprivate subscribeToSelectionChanges(): void {\n\t\tconst { getSelectedBlocksInitialCaretPosition, getSelectionStart, getSelectionEnd } = select(\n\t\t\tblockEditorStore\n\t\t) as BlockEditorStoreSelectors;\n\t\tconst { patchUser } = dispatch( awarenessStore );\n\n\t\t// Keep track of the current selection in the outer scope so we can compare\n\t\t// in the subscription.\n\t\tlet selectionStart = getSelectionStart();\n\t\tlet selectionEnd = getSelectionEnd();\n\n\t\t// Use timeouts to debounce state changes, local and remote.\n\t\tlet awarenessCursorTimeout: NodeJS.Timeout;\n\t\tlet localCursorTimeout: NodeJS.Timeout;\n\n\t\tsubscribe( () => {\n\t\t\tconst newSelectionStart = getSelectionStart();\n\t\t\tconst newSelectionEnd = getSelectionEnd();\n\n\t\t\tif ( newSelectionStart === selectionStart && newSelectionEnd === selectionEnd ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tselectionStart = newSelectionStart;\n\t\t\tselectionEnd = newSelectionEnd;\n\n\t\t\tconst editorState = {\n\t\t\t\tselection: getSelectionState( selectionStart, selectionEnd ),\n\t\t\t};\n\n\t\t\tclearTimeout( awarenessCursorTimeout );\n\t\t\tclearTimeout( localCursorTimeout );\n\n\t\t\tlocalCursorTimeout = setTimeout( () => {\n\t\t\t\tvoid updateSelectionInEntityRecord(\n\t\t\t\t\tselectionStart,\n\t\t\t\t\tselectionEnd,\n\t\t\t\t\tgetSelectedBlocksInitialCaretPosition()\n\t\t\t\t);\n\t\t\t\tvoid patchUser( this.awareness.clientID, { editorState } );\n\t\t\t}, LOCAL_CURSOR_UPDATE_DEBOUNCE_IN_MS );\n\n\t\t\tawarenessCursorTimeout = setTimeout( () => {\n\t\t\t\tthis.setLocalStateField( 'editorState', editorState );\n\t\t\t}, AWARENESS_CURSOR_UPDATE_DEBOUNCE_IN_MS );\n\t\t} );\n\t}\n\n\tprivate subscribeToUserChanges(): void {\n\t\tconst userRemovalTimeouts = new Map< number, NodeJS.Timeout >();\n\t\tconst { patchUser, removeUser, upsertUser } = dispatch( awarenessStore );\n\n\t\tthis.awareness.on( 'change', ( { added, removed, updated }: AwarenessStateChange ) => {\n\t\t\tconst updatedUserStates = this.getStates();\n\n\t\t\t[ ...added, ...updated ].forEach( id => {\n\t\t\t\tconst userState = updatedUserStates.get( id );\n\n\t\t\t\tif ( userRemovalTimeouts.has( id ) ) {\n\t\t\t\t\tclearTimeout( userRemovalTimeouts.get( id ) );\n\t\t\t\t\tuserRemovalTimeouts.delete( id );\n\t\t\t\t}\n\n\t\t\t\tif ( ! this.validateUserState( userState ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If this is the current user, ignore most state updates. We handle our own state locally.\n\t\t\t\tif ( userState.clientId === this.awareness.clientID ) {\n\t\t\t\t\t// Except reconnection updates, which we receive from awareness.\n\t\t\t\t\t// This is necessary when reconnecting after a short timeout, where we\n\t\t\t\t\t// receive back-to-back 'removed' and 'added' events for ourselves.\n\t\t\t\t\tif ( userState.isConnected === true ) {\n\t\t\t\t\t\tvoid patchUser( id, {\n\t\t\t\t\t\t\tisConnected: true,\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tuserState.isConnected = true;\n\t\t\t\tuserState.isMe = false;\n\n\t\t\t\tvoid upsertUser( id, userState );\n\t\t\t} );\n\n\t\t\tremoved.forEach( id => {\n\t\t\t\t// When a user is removed, we don't want to immediately remove their\n\t\t\t\t// state. Instead, we set a timeout to remove it after a short delay.\n\t\t\t\tif ( userRemovalTimeouts.has( id ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvoid patchUser( id, {\n\t\t\t\t\tisConnected: false,\n\t\t\t\t} );\n\n\t\t\t\tuserRemovalTimeouts.set(\n\t\t\t\t\tid,\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\tuserRemovalTimeouts.delete( id );\n\t\t\t\t\t\tvoid removeUser( id );\n\t\t\t\t\t}, REMOVAL_DELAY_IN_MS )\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t}\n\n\tprivate validateUserState( userState: UserState | undefined ): userState is UserState {\n\t\t// User state can be set to an empty object by the Yjs awareness protocol\n\t\t// when the user disconnects.\n\t\tif ( ! userState?.clientId || ! userState?.id || ! userState?.editorState ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/**\n * This file is a shim for loading Yjs from a browser global provided by the\n * `@wordpress/sync` package. This is done primarily to avoid packaging and\n * importing two different Yjs instances, which would result in this conflict:\n *\n * https://github.com/yjs/yjs/issues/438\n *\n * It also allows us to align on the same Yjs version automatically.\n *\n * Scripts in this repo should directly import 'yjs' which will resolve to this\n * file via Webpack.\n *\n * This (unused) import of `@wordpress/core-data` is important to ensure that\n * `wp.sync` is loaded and available. It results in `core-data` being added to\n * our script's dependencies (see `build/index.asset.php`), which influences the\n * load order. We cannot use `@wordpress/sync` for this purpose because it is\n * not yet a public package.\n */\nimport '@wordpress/core-data';\n\n// To avoid issues with default exports, you must individually export the\n// properties you need, including those used by dependencies.\nexport const applyUpdate = window.wp.sync.Y.applyUpdate;\nexport const applyUpdateV2 = window.wp.sync.Y.applyUpdateV2;\nexport const encodeStateVector = window.wp.sync.Y.encodeStateVector;\nexport const encodeStateAsUpdate = window.wp.sync.Y.encodeStateAsUpdate;\nexport const encodeStateAsUpdateV2 = window.wp.sync.Y.encodeStateAsUpdateV2;\nexport const Doc = window.wp.sync.Y.Doc;\n","import { isDevelopment } from '@/utilities/config';\nimport { Logger } from '@/utilities/logger';\n\nimport type * as SHA256 from 'fast-sha256';\n\nconst logger = new Logger( 'crypto' );\n\nfunction arrayBufferToHex( arrayBuffer: ArrayBuffer, hashBase = 16 ): string {\n\tconst hashArray = Array.from( new Uint8Array( arrayBuffer ) ); // convert buffer to byte array\n\tconst hash = hashArray.map( buf => buf.toString( hashBase ).padStart( 2, '0' ) ).join( '' ); // convert bytes to string\n\treturn hash;\n}\n\n/**\n * Creates a hash of the given message using the specified algorithm.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#examples\n */\nexport async function generateHash(\n\tmessage: string,\n\talgorithm: AlgorithmIdentifier,\n\thashBase = 16\n): Promise< string > {\n\tconst msgUint8 = new TextEncoder().encode( message ); // encode as (utf-8) Uint8Array\n\n\tif ( window.isSecureContext ) {\n\t\tconst hashBuffer = await window.crypto.subtle.digest( algorithm, msgUint8 );\n\t\treturn arrayBufferToHex( hashBuffer, hashBase );\n\t}\n\n\t// Fallback for when crypto.subtle is not available.\n\tif ( isDevelopment() ) {\n\t\tlogger.warn( 'Using fallback hash function in non-secure context.' );\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-var-requires\n\t\tconst sha256 = require( 'fast-sha256' ) as typeof SHA256;\n\n\t\tconst hasher = new sha256.Hash();\n\t\thasher.update( msgUint8 );\n\t\treturn arrayBufferToHex( hasher.digest(), hashBase );\n\t}\n\n\tthrow new Error( 'Unable to generate hash outside of secure context in non-development mode!' );\n}\n\n/**\n * Generate a UUID.\n *\n * Uses window.crypto.randomUUID if available, otherwise falls back to a\n * custom implementation.\n *\n * @returns A UUID.\n */\nexport function generateUUID(): string {\n\tif ( window.isSecureContext ) {\n\t\treturn window.crypto.randomUUID();\n\t}\n\n\t// Fallback for when crypto.randomUUID is not available.\n\tif ( isDevelopment() ) {\n\t\tlogger.warn( 'Using fallback UUID function in non-secure context.' );\n\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace( /[xy]/g, function ( char ) {\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\tconst randomValue = ( Math.random() * 16 ) | 0;\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\tconst value = char === 'x' ? randomValue : ( randomValue & 0x3 ) | 0x8;\n\t\t\treturn value.toString( 16 );\n\t\t} );\n\t}\n\n\tthrow new Error( 'Unable to generate UUID outside of secure context in non-development mode!' );\n}\n","/**\n * External dependencies\n */\nimport { type CRDTDoc } from '@wordpress/sync';\nimport * as buffer from 'lib0/buffer';\nimport * as Y from 'yjs';\n\n/**\n * Internal dependencies\n */\nimport { isDevelopment, PERSISTED_STATE_POST_META_KEY } from '@/utilities/config';\nimport { generateHash } from '@/utilities/crypto';\n\nexport interface EntityMetaRecord {\n\t[ PERSISTED_STATE_POST_META_KEY ]?: string; // serialized PersistedCrdtDocMetaValue\n}\n\ninterface PersistedCrdtDocMetaValue {\n\t/**\n\t * IMPORTANT: The content hash is *not* used to invalidate the CRDT document, because:\n\t *\n\t * 1. We can always merge the latest content into the CRDT document without conflicts.\n\t *\n\t * 2. Client-side code changes (e.g., to applyChangesToDoc) may change mean that we\n\t *    don't \"trust\" the CRDT document even if the underlying content hasn't changed.\n\t */\n\tcontentHash: string;\n\tcrdtDoc: string;\n\tversion: number;\n}\n\nfunction serializeCrdtDoc( crdtDoc: CRDTDoc ): string {\n\treturn buffer.toBase64( Y.encodeStateAsUpdateV2( crdtDoc ) );\n}\n\nfunction deserializeCrdtDoc( serializedCrdtDoc: string, version = 0 ): CRDTDoc {\n\tconst docMeta = new Map< string, unknown >( [ [ 'version', version ] ] );\n\tconst ydoc = new Y.Doc( { meta: docMeta } );\n\tconst yupdate = buffer.fromBase64( serializedCrdtDoc );\n\tY.applyUpdateV2( ydoc, yupdate );\n\n\tydoc.clientID = Math.floor( Math.random() * 1000000000 );\n\n\treturn ydoc;\n}\n\n/**\n * Type predicate to check the deserialized entity meta value shape. This does\n * not validate the CRDT document itself.\n */\nfunction isValidCrdtDocMetaValueShape(\n\tmetaValue: unknown,\n\texpectedVersion: number\n): metaValue is PersistedCrdtDocMetaValue {\n\tif ( 'object' !== typeof metaValue || null === metaValue ) {\n\t\treturn false;\n\t}\n\n\tif ( ! ( 'contentHash' in metaValue && 'crdtDoc' in metaValue && 'version' in metaValue ) ) {\n\t\treturn false;\n\t}\n\n\tif ( 'string' !== typeof metaValue.contentHash || ! metaValue.contentHash ) {\n\t\treturn false;\n\t}\n\n\tif ( 'string' !== typeof metaValue.crdtDoc || ! metaValue.crdtDoc ) {\n\t\treturn false;\n\t}\n\n\t// Version is an incrementing integer. If the client is ahead of the persisted\n\t// version, it should be ignored. @TODO: If the client is behind, we may want\n\t// to notify the user to refresh.\n\tif ( 'number' !== typeof metaValue.version || metaValue.version !== expectedVersion ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n * Create the unserialized entity meta value object.\n */\nasync function createCrdtDocMetaValue(\n\tcrdtDoc: CRDTDoc,\n\trawContent: string\n): Promise< PersistedCrdtDocMetaValue > {\n\treturn {\n\t\tcontentHash: await generateHash( rawContent, 'SHA-256' ),\n\t\tcrdtDoc: serializeCrdtDoc( crdtDoc ),\n\t\tversion: getCrdtDocVersion( crdtDoc ),\n\t};\n}\n\n/**\n * Create a serialized entity meta record that is ready to pass to the `meta`\n * field of the WP REST API.\n */\nexport async function createPersistedCrdtDocMetaRecord(\n\tcrdtDoc: CRDTDoc,\n\trawContent: string\n): Promise< EntityMetaRecord > {\n\tconst metaValue = await createCrdtDocMetaValue( crdtDoc, rawContent );\n\n\treturn {\n\t\t[ PERSISTED_STATE_POST_META_KEY ]: JSON.stringify( metaValue ),\n\t};\n}\n\n/**\n * Get a CRDT document's version from document meta.\n */\nexport function getCrdtDocVersion( crdtDoc: CRDTDoc ): number {\n\t// Y.Doc.meta is untyped\n\tconst version: unknown = ( crdtDoc.meta as Map< string, unknown > | null )?.get( 'version' );\n\tconst fallbackVersion = 0;\n\n\treturn 'number' === typeof version ? version : fallbackVersion;\n}\n\n/**\n * Extract and validate a persisted CRDT document from entity meta.\n */\nexport function getPersistedCrdtDocFromEntityMeta(\n\tentityMeta: Record< string, unknown >,\n\texpectedVersion: number\n): CRDTDoc | null {\n\ttry {\n\t\t// eslint-disable-next-line security/detect-object-injection\n\t\tconst rawMetaValue: unknown = entityMeta[ PERSISTED_STATE_POST_META_KEY ] ?? null;\n\n\t\tif ( 'string' !== typeof rawMetaValue ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst metaValue: unknown = JSON.parse( rawMetaValue );\n\n\t\tif ( ! isValidCrdtDocMetaValueShape( metaValue, expectedVersion ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn deserializeCrdtDoc( metaValue.crdtDoc, metaValue.version );\n\t} catch {\n\t\treturn null;\n\t}\n}\n\n// Provide some debugging utilities in development mode.\nif ( isDevelopment() ) {\n\twindow.VIP_RTC.debug.deserializeCrdtAsJson = ( serializedCrdtDoc: string ): object | null => {\n\t\treturn deserializeCrdtDoc( serializedCrdtDoc ).getMap( 'document' ).toJSON();\n\t};\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T|undefined}\n */\nexport const first = set => set.values().next().value\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n\n/**\n * Escape HTML characters &,<,>,',\" to their respective HTML entities &amp;,&lt;,&gt;,&#39;,&quot;\n *\n * @param {string} str\n */\nexport const escapeHTML = str =>\n  str.replace(/[&<>'\"]/g, r => /** @type {string} */ ({\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    \"'\": '&#39;',\n    '\"': '&quot;'\n  }[r]))\n\n/**\n * Reverse of `escapeHTML`\n *\n * @param {string} str\n */\nexport const unescapeHTML = str =>\n  str.replace(/&amp;|&lt;|&gt;|&#39;|&quot;/g, r => /** @type {string} */ ({\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&#39;': \"'\",\n    '&quot;': '\"'\n  }[r]))\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : any} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : never} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n\n/**\n * This function bubble-sorts a single item to the correct position. The sort happens in-place and\n * might be useful to ensure that a single item is at the correct position in an otherwise sorted\n * array.\n *\n * @example\n *  const arr = [3, 2, 5]\n *  arr.sort((a, b) => a - b)\n *  arr // => [2, 3, 5]\n *  arr.splice(1, 0, 7)\n *  array.bubbleSortItem(arr, 1, (a, b) => a - b)\n *  arr // => [2, 3, 5, 7]\n *\n * @template T\n * @param {Array<T>} arr\n * @param {number} i\n * @param {(a:T,b:T) => number} compareFn\n */\nexport const bubblesortItem = (arr, i, compareFn) => {\n  const n = arr[i]\n  let j = i\n  // try to sort to the right\n  while (j + 1 < arr.length && compareFn(n, arr[j + 1]) > 0) {\n    arr[j] = arr[j + 1]\n    arr[++j] = n\n  }\n  if (i === j && j > 0) { // no change yet\n    // sort to the left\n    while (j > 0 && compareFn(arr[j - 1], n) > 0) {\n      arr[j] = arr[j - 1]\n      arr[--j] = n\n    }\n  }\n  return j\n}\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module environment\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase().replaceAll('-', '_')])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {string}\n */\n/* c8 ignore next 5 */\nexport const ensureConf = (name) => {\n  const c = getConf(name)\n  if (c == null) throw new Error(`Expected configuration \"${name.toUpperCase().replaceAll('-', '_')}\"`)\n  return c\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\n/**\n * Color is enabled by default if the terminal supports it.\n *\n * Explicitly enable color using `--color` parameter\n * Disable color using `--no-color` parameter or using `NO_COLOR=1` environment variable.\n * `FORCE_COLOR=1` enables color and takes precedence over all.\n */\nexport const supportsColor = forceColor || (\n  !hasParam('--no-colors') && // @todo deprecate --no-colors\n  !hasConf('no-color') &&\n  (!isNode || process.stdout.isTTY) && (\n    !isNode ||\n    hasParam('--color') ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n  )\n)\n/* c8 ignore stop */\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\nimport * as traits from './traits.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a === b) {\n    return true\n  }\n  if (a == null || b == null || a.constructor !== b.constructor) {\n    return false\n  }\n  if (a[traits.EqualityTraitSymbol] != null) {\n    return a[traits.EqualityTraitSymbol](b)\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as array from './array.js'\nimport * as math from './math.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */\nexport const toBase64UrlEncoded = buf => toBase64(buf).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n\n/**\n * @param {string} base64\n */\nexport const fromBase64UrlEncoded = base64 => fromBase64(base64.replaceAll('-', '+').replaceAll('_', '/'))\n\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */\nexport const toHexString = buf => array.map(buf, b => b.toString(16).padStart(2, '0')).join('')\n\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */\nexport const fromHexString = hex => {\n  const hlen = hex.length\n  const buf = new Uint8Array(math.ceil(hlen / 2))\n  for (let i = 0; i < hlen; i += 2) {\n    buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16)\n  }\n  return buf\n}\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data =>\n  encoding.encode(encoder => encoding.writeAny(encoder, data))\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */\nexport const shiftNBitsLeft = (bs, N) => {\n  if (N === 0) return bs\n  bs = new Uint8Array(bs)\n  bs[0] <<= N\n  for (let i = 1; i < bs.length; i++) {\n    bs[i - 1] |= bs[i] >>> (8 - N)\n    bs[i] <<= N\n  }\n  return bs\n}\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n\n/**\n * Escape HTML characters &,<,>,',\" to their respective HTML entities &amp;,&lt;,&gt;,&#39;,&quot;\n *\n * @param {string} str\n */\nexport const escapeHTML = str =>\n  str.replace(/[&<>'\"]/g, r => /** @type {string} */ ({\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    \"'\": '&#39;',\n    '\"': '&quot;'\n  }[r]))\n\n/**\n * Reverse of `escapeHTML`\n *\n * @param {string} str\n */\nexport const unescapeHTML = str =>\n  str.replace(/&amp;|&lt;|&gt;|&#39;|&quot;/g, r => /** @type {string} */ ({\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&#39;': \"'\",\n    '&quot;': '\"'\n  }[r]))\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server should only reply to requests, and not initiate them.\n * Therefore it is necessary that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Does not need to be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T|undefined}\n */\nexport const first = set => set.values().next().value\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : any} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : never} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n\n/**\n * This function bubble-sorts a single item to the correct position. The sort happens in-place and\n * might be useful to ensure that a single item is at the correct position in an otherwise sorted\n * array.\n *\n * @example\n *  const arr = [3, 2, 5]\n *  arr.sort((a, b) => a - b)\n *  arr // => [2, 3, 5]\n *  arr.splice(1, 0, 7)\n *  array.bubbleSortItem(arr, 1, (a, b) => a - b)\n *  arr // => [2, 3, 5, 7]\n *\n * @template T\n * @param {Array<T>} arr\n * @param {number} i\n * @param {(a:T,b:T) => number} compareFn\n */\nexport const bubblesortItem = (arr, i, compareFn) => {\n  const n = arr[i]\n  let j = i\n  // try to sort to the right\n  while (j + 1 < arr.length && compareFn(n, arr[j + 1]) > 0) {\n    arr[j] = arr[j + 1]\n    arr[++j] = n\n  }\n  if (i === j && j > 0) { // no change yet\n    // sort to the left\n    while (j > 0 && compareFn(arr[j - 1], n) > 0) {\n      arr[j] = arr[j - 1]\n      arr[--j] = n\n    }\n  }\n  return j\n}\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[key:string]: V}} obj\n * @return {Array<V>}\n */\nexport const values = Object.values\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @deprecated use object.size instead\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const size = obj => keys(obj).length\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|null|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line no-unreachable-loop\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|number|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (size(a) === size(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n\n/**\n * Make an object immutable. This hurts performance and is usually not needed if you perform good\n * coding practices.\n */\nexport const freeze = Object.freeze\n\n/**\n * Make an object and all its children immutable.\n * This *really* hurts performance and is usually not needed if you perform good coding practices.\n *\n * @template {any} T\n * @param {T} o\n * @return {Readonly<T>}\n */\nexport const deepFreeze = (o) => {\n  for (const key in o) {\n    const c = o[key]\n    if (typeof c === 'object' || typeof c === 'function') {\n      deepFreeze(o[key])\n    }\n  }\n  return freeze(o)\n}\n\n/**\n * Get object property. Create T if property is undefined and set T on object.\n *\n * @function\n * @template {object} KV\n * @template {keyof KV} [K=keyof KV]\n * @param {KV} o\n * @param {K} key\n * @param {() => KV[K]} createT\n * @return {KV[K]}\n */\nexport const setIfUndefined = (o, key, createT) => hasProperty(o, key) ? o[key] : (o[key] = createT())\n","export const EqualityTraitSymbol = Symbol('Equality')\n\n/**\n * @typedef {{ [EqualityTraitSymbol]:(other:EqualityTrait)=>boolean }} EqualityTrait\n */\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\nimport * as traits from './traits.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a === b) {\n    return true\n  }\n  if (a == null || b == null || a.constructor !== b.constructor) {\n    return false\n  }\n  if (a[traits.EqualityTraitSymbol] != null) {\n    return a[traits.EqualityTraitSymbol](b)\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[key:string]: V}} obj\n * @return {Array<V>}\n */\nexport const values = Object.values\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @deprecated use object.size instead\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const size = obj => keys(obj).length\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|null|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line no-unreachable-loop\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|number|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (size(a) === size(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n\n/**\n * Make an object immutable. This hurts performance and is usually not needed if you perform good\n * coding practices.\n */\nexport const freeze = Object.freeze\n\n/**\n * Make an object and all its children immutable.\n * This *really* hurts performance and is usually not needed if you perform good coding practices.\n *\n * @template {any} T\n * @param {T} o\n * @return {Readonly<T>}\n */\nexport const deepFreeze = (o) => {\n  for (const key in o) {\n    const c = o[key]\n    if (typeof c === 'object' || typeof c === 'function') {\n      deepFreeze(o[key])\n    }\n  }\n  return freeze(o)\n}\n\n/**\n * Get object property. Create T if property is undefined and set T on object.\n *\n * @function\n * @template {object} KV\n * @template {keyof KV} [K=keyof KV]\n * @param {KV} o\n * @param {K} key\n * @param {() => KV[K]} createT\n * @return {KV[K]}\n */\nexport const setIfUndefined = (o, key, createT) => hasProperty(o, key) ? o[key] : (o[key] = createT())\n","/**\n * @module provider/websocket\n */\n\n/* eslint-env browser */\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as bc from 'lib0/broadcastchannel'\nimport * as time from 'lib0/time'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport * as authProtocol from 'y-protocols/auth'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport { ObservableV2 } from 'lib0/observable'\nimport * as math from 'lib0/math'\nimport * as url from 'lib0/url'\nimport * as env from 'lib0/environment'\n\nexport const messageSync = 0\nexport const messageQueryAwareness = 3\nexport const messageAwareness = 1\nexport const messageAuth = 2\n\n/**\n *                       encoder,          decoder,          provider,          emitSynced, messageType\n * @type {Array<function(encoding.Encoder, decoding.Decoder, WebsocketProvider, boolean,    number):void>}\n */\nconst messageHandlers = []\n\nmessageHandlers[messageSync] = (\n  encoder,\n  decoder,\n  provider,\n  emitSynced,\n  _messageType\n) => {\n  encoding.writeVarUint(encoder, messageSync)\n  const syncMessageType = syncProtocol.readSyncMessage(\n    decoder,\n    encoder,\n    provider.doc,\n    provider\n  )\n  if (\n    emitSynced && syncMessageType === syncProtocol.messageYjsSyncStep2 &&\n    !provider.synced\n  ) {\n    provider.synced = true\n  }\n}\n\nmessageHandlers[messageQueryAwareness] = (\n  encoder,\n  _decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  encoding.writeVarUint(encoder, messageAwareness)\n  encoding.writeVarUint8Array(\n    encoder,\n    awarenessProtocol.encodeAwarenessUpdate(\n      provider.awareness,\n      Array.from(provider.awareness.getStates().keys())\n    )\n  )\n}\n\nmessageHandlers[messageAwareness] = (\n  _encoder,\n  decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  awarenessProtocol.applyAwarenessUpdate(\n    provider.awareness,\n    decoding.readVarUint8Array(decoder),\n    provider\n  )\n}\n\nmessageHandlers[messageAuth] = (\n  _encoder,\n  decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  authProtocol.readAuthMessage(\n    decoder,\n    provider.doc,\n    (_ydoc, reason) => permissionDeniedHandler(provider, reason)\n  )\n}\n\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000\n\n/**\n * @param {WebsocketProvider} provider\n * @param {string} reason\n */\nconst permissionDeniedHandler = (provider, reason) =>\n  console.warn(`Permission denied to access ${provider.url}.\\n${reason}`)\n\n/**\n * @param {WebsocketProvider} provider\n * @param {Uint8Array} buf\n * @param {boolean} emitSynced\n * @return {encoding.Encoder}\n */\nconst readMessage = (provider, buf, emitSynced) => {\n  const decoder = decoding.createDecoder(buf)\n  const encoder = encoding.createEncoder()\n  const messageType = decoding.readVarUint(decoder)\n  const messageHandler = provider.messageHandlers[messageType]\n  if (/** @type {any} */ (messageHandler)) {\n    messageHandler(encoder, decoder, provider, emitSynced, messageType)\n  } else {\n    console.error('Unable to compute message')\n  }\n  return encoder\n}\n\n/**\n * Outsource this function so that a new websocket connection is created immediately.\n * I suspect that the `ws.onclose` event is not always fired if there are network issues.\n *\n * @param {WebsocketProvider} provider\n * @param {WebSocket} ws\n * @param {CloseEvent | null} event\n */\nconst closeWebsocketConnection = (provider, ws, event) => {\n  if (ws === provider.ws) {\n    provider.emit('connection-close', [event, provider])\n    provider.ws = null\n    ws.close()\n    provider.wsconnecting = false\n    if (provider.wsconnected) {\n      provider.wsconnected = false\n      provider.synced = false\n      // update awareness (all users except local left)\n      awarenessProtocol.removeAwarenessStates(\n        provider.awareness,\n        Array.from(provider.awareness.getStates().keys()).filter((client) =>\n          client !== provider.doc.clientID\n        ),\n        provider\n      )\n      provider.emit('status', [{\n        status: 'disconnected'\n      }])\n    } else {\n      provider.wsUnsuccessfulReconnects++\n    }\n    // Start with no reconnect timeout and increase timeout by\n    // using exponential backoff starting with 100ms\n    setTimeout(\n      setupWS,\n      math.min(\n        math.pow(2, provider.wsUnsuccessfulReconnects) * 100,\n        provider.maxBackoffTime\n      ),\n      provider\n    )\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n */\nconst setupWS = (provider) => {\n  if (provider.shouldConnect && provider.ws === null) {\n    const websocket = new provider._WS(provider.url, provider.protocols)\n    websocket.binaryType = 'arraybuffer'\n    provider.ws = websocket\n    provider.wsconnecting = true\n    provider.wsconnected = false\n    provider.synced = false\n\n    websocket.onmessage = (event) => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      const encoder = readMessage(provider, new Uint8Array(event.data), true)\n      if (encoding.length(encoder) > 1) {\n        websocket.send(encoding.toUint8Array(encoder))\n      }\n    }\n    websocket.onerror = (event) => {\n      provider.emit('connection-error', [event, provider])\n    }\n    websocket.onclose = (event) => {\n      closeWebsocketConnection(provider, websocket, event)\n    }\n    websocket.onopen = () => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      provider.wsconnecting = false\n      provider.wsconnected = true\n      provider.wsUnsuccessfulReconnects = 0\n      provider.emit('status', [{\n        status: 'connected'\n      }])\n      // always send sync step 1 when connected\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeSyncStep1(encoder, provider.doc)\n      websocket.send(encoding.toUint8Array(encoder))\n      // broadcast local awareness state\n      if (provider.awareness.getLocalState() !== null) {\n        const encoderAwarenessState = encoding.createEncoder()\n        encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n        encoding.writeVarUint8Array(\n          encoderAwarenessState,\n          awarenessProtocol.encodeAwarenessUpdate(provider.awareness, [\n            provider.doc.clientID\n          ])\n        )\n        websocket.send(encoding.toUint8Array(encoderAwarenessState))\n      }\n    }\n    provider.emit('status', [{\n      status: 'connecting'\n    }])\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n * @param {ArrayBuffer} buf\n */\nconst broadcastMessage = (provider, buf) => {\n  const ws = provider.ws\n  if (provider.wsconnected && ws && ws.readyState === ws.OPEN) {\n    ws.send(buf)\n  }\n  if (provider.bcconnected) {\n    bc.publish(provider.bcChannel, buf, provider)\n  }\n}\n\n/**\n * Websocket Provider for Yjs. Creates a websocket connection to sync the shared document.\n * The document name is attached to the provided url. I.e. the following example\n * creates a websocket connection to http://localhost:1234/my-document-name\n *\n * @example\n *   import * as Y from 'yjs'\n *   import { WebsocketProvider } from 'y-websocket'\n *   const doc = new Y.Doc()\n *   const provider = new WebsocketProvider('http://localhost:1234', 'my-document-name', doc)\n *\n * @extends {ObservableV2<{ 'connection-close': (event: CloseEvent | null,  provider: WebsocketProvider) => any, 'status': (event: { status: 'connected' | 'disconnected' | 'connecting' }) => any, 'connection-error': (event: Event, provider: WebsocketProvider) => any, 'sync': (state: boolean) => any }>}\n */\nexport class WebsocketProvider extends ObservableV2 {\n  /**\n   * @param {string} serverUrl\n   * @param {string} roomname\n   * @param {Y.Doc} doc\n   * @param {object} opts\n   * @param {boolean} [opts.connect]\n   * @param {awarenessProtocol.Awareness} [opts.awareness]\n   * @param {Object<string,string>} [opts.params] specify url parameters\n   * @param {Array<string>} [opts.protocols] specify websocket protocols\n   * @param {typeof WebSocket} [opts.WebSocketPolyfill] Optionall provide a WebSocket polyfill\n   * @param {number} [opts.resyncInterval] Request server state every `resyncInterval` milliseconds\n   * @param {number} [opts.maxBackoffTime] Maximum amount of time to wait before trying to reconnect (we try to reconnect using exponential backoff)\n   * @param {boolean} [opts.disableBc] Disable cross-tab BroadcastChannel communication\n   */\n  constructor (serverUrl, roomname, doc, {\n    connect = true,\n    awareness = new awarenessProtocol.Awareness(doc),\n    params = {},\n    protocols = [],\n    WebSocketPolyfill = WebSocket,\n    resyncInterval = -1,\n    maxBackoffTime = 2500,\n    disableBc = false\n  } = {}) {\n    super()\n    // ensure that serverUrl does not end with /\n    while (serverUrl[serverUrl.length - 1] === '/') {\n      serverUrl = serverUrl.slice(0, serverUrl.length - 1)\n    }\n    this.serverUrl = serverUrl\n    this.bcChannel = serverUrl + '/' + roomname\n    this.maxBackoffTime = maxBackoffTime\n    /**\n     * The specified url parameters. This can be safely updated. The changed parameters will be used\n     * when a new connection is established.\n     * @type {Object<string,string>}\n     */\n    this.params = params\n    this.protocols = protocols\n    this.roomname = roomname\n    this.doc = doc\n    this._WS = WebSocketPolyfill\n    this.awareness = awareness\n    this.wsconnected = false\n    this.wsconnecting = false\n    this.bcconnected = false\n    this.disableBc = disableBc\n    this.wsUnsuccessfulReconnects = 0\n    this.messageHandlers = messageHandlers.slice()\n    /**\n     * @type {boolean}\n     */\n    this._synced = false\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null\n    this.wsLastMessageReceived = 0\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = connect\n\n    /**\n     * @type {number}\n     */\n    this._resyncInterval = 0\n    if (resyncInterval > 0) {\n      this._resyncInterval = /** @type {any} */ (setInterval(() => {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n          // resend sync step 1\n          const encoder = encoding.createEncoder()\n          encoding.writeVarUint(encoder, messageSync)\n          syncProtocol.writeSyncStep1(encoder, doc)\n          this.ws.send(encoding.toUint8Array(encoder))\n        }\n      }, resyncInterval))\n    }\n\n    /**\n     * @param {ArrayBuffer} data\n     * @param {any} origin\n     */\n    this._bcSubscriber = (data, origin) => {\n      if (origin !== this) {\n        const encoder = readMessage(this, new Uint8Array(data), false)\n        if (encoding.length(encoder) > 1) {\n          bc.publish(this.bcChannel, encoding.toUint8Array(encoder), this)\n        }\n      }\n    }\n    /**\n     * Listens to Yjs updates and sends them to remote peers (ws and broadcastchannel)\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._updateHandler = (update, origin) => {\n      if (origin !== this) {\n        const encoder = encoding.createEncoder()\n        encoding.writeVarUint(encoder, messageSync)\n        syncProtocol.writeUpdate(encoder, update)\n        broadcastMessage(this, encoding.toUint8Array(encoder))\n      }\n    }\n    this.doc.on('update', this._updateHandler)\n    /**\n     * @param {any} changed\n     * @param {any} _origin\n     */\n    this._awarenessUpdateHandler = ({ added, updated, removed }, _origin) => {\n      const changedClients = added.concat(updated).concat(removed)\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageAwareness)\n      encoding.writeVarUint8Array(\n        encoder,\n        awarenessProtocol.encodeAwarenessUpdate(awareness, changedClients)\n      )\n      broadcastMessage(this, encoding.toUint8Array(encoder))\n    }\n    this._exitHandler = () => {\n      awarenessProtocol.removeAwarenessStates(\n        this.awareness,\n        [doc.clientID],\n        'app closed'\n      )\n    }\n    if (env.isNode && typeof process !== 'undefined') {\n      process.on('exit', this._exitHandler)\n    }\n    awareness.on('update', this._awarenessUpdateHandler)\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      if (\n        this.wsconnected &&\n        messageReconnectTimeout <\n          time.getUnixTime() - this.wsLastMessageReceived\n      ) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        closeWebsocketConnection(this, /** @type {WebSocket} */ (this.ws), null)\n      }\n    }, messageReconnectTimeout / 10))\n    if (connect) {\n      this.connect()\n    }\n  }\n\n  get url () {\n    const encodedParams = url.encodeQueryParams(this.params)\n    return this.serverUrl + '/' + this.roomname +\n      (encodedParams.length === 0 ? '' : '?' + encodedParams)\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get synced () {\n    return this._synced\n  }\n\n  set synced (state) {\n    if (this._synced !== state) {\n      this._synced = state\n      // @ts-ignore\n      this.emit('synced', [state])\n      this.emit('sync', [state])\n    }\n  }\n\n  destroy () {\n    if (this._resyncInterval !== 0) {\n      clearInterval(this._resyncInterval)\n    }\n    clearInterval(this._checkInterval)\n    this.disconnect()\n    if (env.isNode && typeof process !== 'undefined') {\n      process.off('exit', this._exitHandler)\n    }\n    this.awareness.off('update', this._awarenessUpdateHandler)\n    this.doc.off('update', this._updateHandler)\n    super.destroy()\n  }\n\n  connectBc () {\n    if (this.disableBc) {\n      return\n    }\n    if (!this.bcconnected) {\n      bc.subscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = true\n    }\n    // send sync step1 to bc\n    // write sync step 1\n    const encoderSync = encoding.createEncoder()\n    encoding.writeVarUint(encoderSync, messageSync)\n    syncProtocol.writeSyncStep1(encoderSync, this.doc)\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderSync), this)\n    // broadcast local state\n    const encoderState = encoding.createEncoder()\n    encoding.writeVarUint(encoderState, messageSync)\n    syncProtocol.writeSyncStep2(encoderState, this.doc)\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderState), this)\n    // write queryAwareness\n    const encoderAwarenessQuery = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness)\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessQuery),\n      this\n    )\n    // broadcast local awareness state\n    const encoderAwarenessState = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n    encoding.writeVarUint8Array(\n      encoderAwarenessState,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ])\n    )\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessState),\n      this\n    )\n  }\n\n  disconnectBc () {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, messageAwareness)\n    encoding.writeVarUint8Array(\n      encoder,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ], new Map())\n    )\n    broadcastMessage(this, encoding.toUint8Array(encoder))\n    if (this.bcconnected) {\n      bc.unsubscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = false\n    }\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    this.disconnectBc()\n    if (this.ws !== null) {\n      closeWebsocketConnection(this, this.ws, null)\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true\n    if (!this.wsconnected && this.ws === null) {\n      setupWS(this)\n      this.connectBc()\n    }\n  }\n}\n","\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport const messagePermissionDenied = 0\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\nexport const writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied)\n  encoding.writeVarString(encoder, reason)\n}\n\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n */\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder))\n  }\n}\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","import { __ } from '@wordpress/i18n';\n\nexport function getErrorMessage( error: unknown, defaultMessage?: string ): string {\n\tif ( error instanceof Error ) {\n\t\treturn error.message;\n\t}\n\n\t// First look for a .data.error string (as returned by the REST API).\n\tif (\n\t\terror &&\n\t\ttypeof error === 'object' &&\n\t\t'data' in error &&\n\t\terror.data &&\n\t\ttypeof error.data === 'object' &&\n\t\t'error' in error.data\n\t) {\n\t\treturn getErrorMessage( error.data.error, defaultMessage );\n\t}\n\n\t// Next look for an error-like object with a message string.\n\tif (\n\t\terror &&\n\t\ttypeof error === 'object' &&\n\t\t'message' in error &&\n\t\ttypeof error.message === 'string'\n\t) {\n\t\treturn error.message;\n\t}\n\n\treturn defaultMessage ?? __( 'Unknown error', 'vip-real-time-collaboration' );\n}\n","/**\n * External dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\nimport { WebsocketProvider, type WebsocketProviderOptions } from 'y-websocket';\n\nimport {\n\tisDevelopment,\n\tWEBSOCKET_PROVIDER_MAX_BACKOFF_IN_MS,\n\tWEBSOCKET_URL,\n} from '@/utilities/config';\nimport { generateUUID } from '@/utilities/crypto';\nimport { getErrorMessage } from '@/utilities/error';\nimport { memoizeFn } from '@/utilities/function';\nimport { Logger } from '@/utilities/logger';\n\nimport type { ConnectDoc } from '@wordpress/sync';\nimport type * as Y from 'yjs';\n\nexport interface WebSocketConnectionConfig {\n\tonStatusChange?: (\n\t\tevent: { status: 'connected' | 'connecting' | 'connection-error' | 'disconnected' },\n\t\tprovider: WebsocketProvider\n\t) => void;\n\toptions?: WebsocketProviderOptions;\n\tserverUrl: string;\n}\n\n/**\n * Creates a connection ID generator with in-memory storage\n */\nconst getConnectionId = memoizeFn( (): string => generateUUID() );\n\nconst logger = new Logger( 'websocket-client' );\n\n/**\n * Fetch a fresh authentication token from the REST API.\n */\nasync function fetchAuthToken( syncObjectType: string, syncObjectId: string ): Promise< string > {\n\tconst data = await apiFetch< { token: string } >( {\n\t\tpath: '/vip-rtc/v1/websocket/auth',\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\tsyncObjectType,\n\t\t\tsyncObjectId,\n\t\t\tconnectionId: getConnectionId(),\n\t\t},\n\t} );\n\n\tif ( ! data.token ) {\n\t\tthrow new Error( __( 'No auth token returned', 'vip-real-time-collaboration' ) );\n\t}\n\n\treturn data.token;\n}\n\n/**\n * Log a link to inspect the Yjs provider using Yjs inspector.\n */\nfunction logInspectUrl( syncObjectType: string, syncObjectId: string, authToken: string ): void {\n\tconst roomName = `${ syncObjectType }-${ syncObjectId }`;\n\tconst connectionConfig = {\n\t\tcreateNewDoc: false,\n\t\troom: `${ roomName }?auth=${ authToken }`,\n\t\tprovider: 'y-websocket',\n\t\turl: WEBSOCKET_URL,\n\t};\n\n\t// The inspect URL always targets a local Yjs inspector.\n\tconst inspectUrl = `http://localhost:5173/#/connection=${ encodeURIComponent(\n\t\tJSON.stringify( connectionConfig )\n\t) }`;\n\n\tlogger.info( `Yjs inspector for ${ roomName }: ${ inspectUrl }` );\n}\n\n/**\n * Configure the websocket provider to use auth token for websocket connection.\n * Implement exponential backoff for reconnect attempts since we are opting out\n * of the built-in reconnect logic by disabling `provider.shouldConnect`.\n */\nfunction createConnect(\n\tprovider: WebsocketProvider,\n\tsyncObjectType: string,\n\tsyncObjectId: string\n): () => Promise< void > {\n\tlet reconnectAttempts = 0;\n\n\treturn async function (): Promise< void > {\n\t\tif ( reconnectAttempts > 0 ) {\n\t\t\tconst backoffDelayInMs = Math.min(\n\t\t\t\t1000 * 2 ** reconnectAttempts,\n\t\t\t\tWEBSOCKET_PROVIDER_MAX_BACKOFF_IN_MS\n\t\t\t);\n\t\t\tconst backoffDelayInS = Math.floor( backoffDelayInMs / 1000 );\n\n\t\t\tlogger.warn( `Attempting to reconnect to WebSocket in ${ backoffDelayInS }s...` );\n\n\t\t\tawait new Promise( resolve => setTimeout( resolve, backoffDelayInMs * 1000 ) );\n\t\t}\n\n\t\treconnectAttempts += 1;\n\n\t\ttry {\n\t\t\tconst authToken = await fetchAuthToken( syncObjectType, syncObjectId );\n\n\t\t\tprovider.params = {\n\t\t\t\tauth: authToken,\n\t\t\t};\n\t\t\tprovider.connect();\n\n\t\t\t// Disable provider#shouldConnect to prevent websocket from attempting to\n\t\t\t// reconnect before the new auth token is fetched (they are short-lived).\n\t\t\t// When provider.connect() runs it updates provider#shouldConnect to true.\n\t\t\tprovider.shouldConnect = false;\n\n\t\t\tlogInspectUrl( syncObjectType, syncObjectId, authToken );\n\t\t} catch ( error: unknown ) {\n\t\t\tlogger.error(\n\t\t\t\t`${ __(\n\t\t\t\t\t'Failed to fetch auth token and connect to WebSocket',\n\t\t\t\t\t'vip-real-time-collaboration'\n\t\t\t\t) }: ${ getErrorMessage( error ) }`\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport function getWebSocketConnectionConfig(): WebSocketConnectionConfig {\n\treturn {\n\t\tserverUrl: WEBSOCKET_URL,\n\t\toptions: {\n\t\t\t/**\n\t\t\t * Disable automatic connection to prevent websocket from attempting to connect\n\t\t\t * before the auth token is fetched.\n\t\t\t */\n\t\t\tconnect: false,\n\t\t},\n\t};\n}\n\n/**\n * Function that creates a new WebSocket Connection.\n *\n * @param {WebsocketConnectionConfig} config The configuration for the WebSocket connection.\n * @return {ConnectDoc} A function that connects a Y.Doc to a WebSocket server.\n */\nexport function createWebSocketConnection( config: WebSocketConnectionConfig ): ConnectDoc {\n\treturn async function ( objectId: string = 'unknown', objectType: string, doc: Y.Doc ) {\n\t\ttry {\n\t\t\tconst roomName = `${ objectType }-${ objectId }`;\n\t\t\tconst provider = new WebsocketProvider( config.serverUrl, roomName, doc, config.options );\n\t\t\tconst connect = createConnect( provider, objectType, objectId );\n\n\t\t\tprovider.on( 'connection-close', connect );\n\t\t\tprovider.on( 'connection-error', () => {\n\t\t\t\t// The provider does not change status on connection error, so we\n\t\t\t\t// manually trigger a synthetic status change.\n\t\t\t\tconfig.onStatusChange?.( { status: 'connection-error' }, provider );\n\t\t\t} );\n\t\t\tprovider.on( 'status', event => config.onStatusChange?.( event, provider ) );\n\n\t\t\t// Provide some debugging functions in development mode.\n\t\t\tif ( isDevelopment() ) {\n\t\t\t\twindow.VIP_RTC.debug.disconnectWebSocket = () => {\n\t\t\t\t\tprovider.off( 'connection-close', connect );\n\t\t\t\t\tprovider.disconnect();\n\t\t\t\t};\n\n\t\t\t\twindow.VIP_RTC.debug.reconnectWebSocket = () => {\n\t\t\t\t\tprovider.on( 'connection-close', connect );\n\t\t\t\t\tvoid connect();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait connect();\n\n\t\t\treturn {\n\t\t\t\tawareness: provider.awareness,\n\t\t\t\tdestroy: () => provider.destroy(),\n\t\t\t};\n\t\t} catch {}\n\n\t\treturn {\n\t\t\tdestroy: () => {},\n\t\t};\n\t};\n}\n","export function memoizeFn< T extends ( ...args: unknown[] ) => unknown >( fn: T ): T {\n\tconst cache = new Map< string, ReturnType< T > >();\n\n\treturn ( ( ...args: Parameters< T > ) => {\n\t\tconst key = JSON.stringify( args );\n\t\tif ( cache.has( key ) ) {\n\t\t\treturn cache.get( key );\n\t\t}\n\n\t\tconst result = fn( ...args ) as ReturnType< T >;\n\t\tcache.set( key, result );\n\t\treturn result;\n\t} ) as T;\n}\n","/**\n * Internal dependencies\n */\nimport { AwarenessManager } from '@/awareness-manager';\nimport {\n\tcreatePersistedCrdtDocMetaRecord,\n\tgetCrdtDocVersion,\n\tgetPersistedCrdtDocFromEntityMeta,\n\ttype EntityMetaRecord,\n} from '@/utilities/crdt';\nimport { getMetaFromEntityRecord, getRawContentFromEntityRecord } from '@/utilities/entity';\nimport { Logger } from '@/utilities/logger';\nimport { createWebSocketConnection, type WebSocketConnectionConfig } from '@/websocket-client';\n\nimport type { CRDTDoc, ObjectData, SyncConfig } from '@wordpress/sync';\nimport type { WebsocketProvider } from 'y-websocket';\n\nexport class SyncProviderWithAwareness extends window.wp.sync.SyncProvider {\n\tprivate logger: Logger = new Logger( 'provider' );\n\n\tpublic constructor( config: WebSocketConnectionConfig ) {\n\t\t// There is no local persistence, so we pass `null` for the first argument.\n\t\tsuper(\n\t\t\tnull,\n\t\t\tcreateWebSocketConnection( {\n\t\t\t\t...config,\n\t\t\t\tonStatusChange: ( ...args ) => this.onProviderStatusChange( ...args ),\n\t\t\t} )\n\t\t);\n\t}\n\n\tpublic async bootstrap(\n\t\tsyncConfig: SyncConfig,\n\t\trecord: ObjectData,\n\t\thandleChanges: ( data: Partial< ObjectData > ) => void\n\t): Promise< void > {\n\t\tawait super.bootstrap( syncConfig, record, handleChanges );\n\n\t\tconst objectId = syncConfig.getObjectId( record ).toString();\n\t\tconst objectType = syncConfig.objectType.toString();\n\t\tconst entityId = this.getEntityId( objectType, objectId );\n\n\t\tthis.logger.debug( 'Bootstrapping entity', { objectType, objectId } );\n\n\t\tconst connections = this.connections.get( entityId ) ?? [];\n\n\t\tfor ( const connection of connections ) {\n\t\t\tif ( connection.awareness && syncConfig.supportsAwareness ) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait AwarenessManager.initialize( connection.awareness, entityId );\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async createEntityMeta(\n\t\tsyncConfig: SyncConfig,\n\t\trecord: ObjectData,\n\t\tchanges: Partial< ObjectData >\n\t): Promise< EntityMetaRecord > {\n\t\tconst objectId = syncConfig.getObjectId( record ).toString();\n\t\tconst objectType = syncConfig.objectType.toString();\n\n\t\t// CRDT persistence is currently only supported for post types.\n\t\tif ( ! objectType.startsWith( 'postType/' ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst ydoc = this.getEntityState( objectType, objectId )?.ydoc;\n\t\tconst rawContent = getRawContentFromEntityRecord( changes );\n\n\t\tif ( ! ydoc || ! rawContent || 'auto-draft' === record.status ) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst entityMeta = await createPersistedCrdtDocMetaRecord( ydoc, rawContent );\n\n\t\tthis.logger.debug( 'Providing updated entity meta to saveEntityRecord', {\n\t\t\tobjectType,\n\t\t\tobjectId,\n\t\t\tentityMeta,\n\t\t} );\n\n\t\treturn entityMeta;\n\t}\n\n\tprotected getPersistedCRDTDoc(\n\t\tsyncConfig: SyncConfig,\n\t\trecord: ObjectData,\n\t\texpectedVersion: number\n\t): Promise< CRDTDoc | null > {\n\t\tconst objectId = syncConfig.getObjectId( record ).toString();\n\t\tconst objectType = syncConfig.objectType.toString();\n\n\t\t// CRDT persistence is currently only supported for post types.\n\t\tif ( ! objectType.startsWith( 'postType/' ) ) {\n\t\t\treturn Promise.resolve( null );\n\t\t}\n\n\t\tconst entityMeta = getMetaFromEntityRecord( record );\n\n\t\t// Attempt to load the initial CRDT document from post meta.\n\t\tconst persistedDoc = getPersistedCrdtDocFromEntityMeta( entityMeta, expectedVersion );\n\n\t\tconst logMessage = persistedDoc\n\t\t\t? 'Found persisted CRDT doc in entity meta'\n\t\t\t: 'Persisted CRDT doc not found in entity meta';\n\t\tthis.logger.debug( logMessage, {\n\t\t\tobjectType,\n\t\t\tobjectId,\n\t\t\tpersistedDoc,\n\t\t\tversion: persistedDoc ? getCrdtDocVersion( persistedDoc ) : null,\n\t\t} );\n\n\t\treturn Promise.resolve( persistedDoc );\n\t}\n\n\tprivate onProviderStatusChange(\n\t\tevent: { status: 'connected' | 'connecting' | 'connection-error' | 'disconnected' },\n\t\tprovider: WebsocketProvider\n\t): void {\n\t\tswitch ( event.status ) {\n\t\t\tcase 'connecting': {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'connection-error': {\n\t\t\t\tAwarenessManager.setConnectionStatus( provider.awareness.clientID, false );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'connected': {\n\t\t\t\tAwarenessManager.setConnectionStatus( provider.awareness.clientID, true );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'disconnected': {\n\t\t\t\tAwarenessManager.setConnectionStatus( provider.awareness.clientID, false );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { addFilter } from '@wordpress/hooks';\nimport { registerPlugin } from '@wordpress/plugins';\n\nimport { RTCSettingsPanel } from '@/components/rtc-settings-panel';\nimport { SyncProviderWithAwareness } from '@/provider';\nimport { Logger } from '@/utilities/logger';\nimport { getWebSocketConnectionConfig } from '@/websocket-client';\n\nimport type { SyncProvider } from '@wordpress/sync';\n\naddFilter( 'core.getSyncProvider', 'vip-rtc', ( provider: SyncProvider | null ) => {\n\tif ( provider ) {\n\t\t// If a provider already exists, return it.\n\t\treturn provider;\n\t}\n\n\tconst webSocketConnectionConfig = getWebSocketConnectionConfig();\n\n\t// We already error check for the WebSocket URL in the main plugin file,\n\t// so this is here for safety.\n\tif ( ! webSocketConnectionConfig.serverUrl ) {\n\t\tnew Logger().critical(\n\t\t\t'VIP Real-Time Collaboration WebSocket URL has not been configured. The plugin will not be functional without it.'\n\t\t);\n\t\treturn null;\n\t}\n\n\treturn new SyncProviderWithAwareness( webSocketConnectionConfig );\n} );\n\nregisterPlugin( 'vip-real-time-collaboration', {\n\trender: RTCSettingsPanel,\n} );\n","import {\n\tFlex,\n\tFlexItem,\n\tToggleControl,\n\t__experimentalHeading as Heading,\n\t__experimentalText as Text,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { PluginDocumentSettingPanel } from '@wordpress/editor';\nimport { __ } from '@wordpress/i18n';\n\nimport { Avatar } from './avatar';\nimport {\n\tstore as rtcSettingsStore,\n\tSettingsStoreActions,\n\ttype SettingsStoreSelectors,\n} from '../store/settings-store';\nimport { useOverlayFrame } from '@/hooks/use-frame-overlay';\nimport { useSortedAwarenessUsers } from '@/hooks/use-sorted-awareness-users';\n\nexport function RTCSettingsPanel() {\n\tconst { isAvatarsEnabled, isHighlightsEnabled, isCursorsEnabled, isSelfAwarenessEnabled } =\n\t\tuseSelect<\n\t\t\tSettingsStoreSelectors,\n\t\t\t{\n\t\t\t\tisAvatarsEnabled: boolean;\n\t\t\t\tisHighlightsEnabled: boolean;\n\t\t\t\tisCursorsEnabled: boolean;\n\t\t\t\tisSelfAwarenessEnabled: boolean;\n\t\t\t}\n\t\t>( select => {\n\t\t\treturn {\n\t\t\t\tisAvatarsEnabled: select( rtcSettingsStore ).isAwarenessAvatarsEnabled(),\n\t\t\t\tisHighlightsEnabled: select( rtcSettingsStore ).isAwarenessHighlightsEnabled(),\n\t\t\t\tisCursorsEnabled: select( rtcSettingsStore ).isAwarenessCursorsEnabled(),\n\t\t\t\tisSelfAwarenessEnabled: select( rtcSettingsStore ).isSelfAwarenessEnabled(),\n\t\t\t};\n\t\t} );\n\n\tconst {\n\t\tsetAwarenessAvatarsEnabled,\n\t\tsetAwarenessHighlightsEnabled,\n\t\tsetAwarenessCursorsEnabled,\n\t\tsetSelfAwarenessEnabled,\n\t} = useDispatch< SettingsStoreActions >( rtcSettingsStore );\n\n\t// Load the overlay frame to render awareness components.\n\tuseOverlayFrame();\n\n\tconst activeUsers = useSortedAwarenessUsers();\n\n\tconst handleToggleAvatars = ( enabled: boolean ) => {\n\t\tsetAwarenessAvatarsEnabled( enabled );\n\t};\n\n\tconst handleToggleHighlights = ( enabled: boolean ) => {\n\t\tsetAwarenessHighlightsEnabled( enabled );\n\t};\n\n\tconst handleToggleCursors = ( enabled: boolean ) => {\n\t\tsetAwarenessCursorsEnabled( enabled );\n\t};\n\n\tconst handleToggleSelfAwareness = ( enabled: boolean ) => {\n\t\tsetSelfAwarenessEnabled( enabled );\n\t};\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname=\"vip-real-time-collaboration\"\n\t\t\ttitle=\"Real-time collaboration\"\n\t\t\tclassName=\"vip-real-time-collaboration-settings\"\n\t\t>\n\t\t\t<div>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel=\"Enable avatars\"\n\t\t\t\t\tchecked={ isAvatarsEnabled }\n\t\t\t\t\tonChange={ ( enabled: boolean ) => {\n\t\t\t\t\t\thandleToggleAvatars( enabled );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel=\"Enable highlights\"\n\t\t\t\t\tchecked={ isHighlightsEnabled }\n\t\t\t\t\tonChange={ ( enabled: boolean ) => {\n\t\t\t\t\t\thandleToggleHighlights( enabled );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel=\"Enable cursors\"\n\t\t\t\t\tchecked={ isCursorsEnabled }\n\t\t\t\t\tonChange={ ( enabled: boolean ) => {\n\t\t\t\t\t\thandleToggleCursors( enabled );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel=\"Show my awareness\"\n\t\t\t\t\tchecked={ isSelfAwarenessEnabled }\n\t\t\t\t\tonChange={ ( enabled: boolean ) => {\n\t\t\t\t\t\thandleToggleSelfAwareness( enabled );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<Heading level={ 3 } style={ { marginTop: '24px' } }>\n\t\t\t\t{ __( 'Collaborators', 'vip-real-time-collaboration' ) }\n\t\t\t</Heading>\n\n\t\t\t<Flex direction=\"column\" className=\"vip-real-time-collaboration-sidebar-users\" gap={ 0 }>\n\t\t\t\t{ activeUsers.map( userState => (\n\t\t\t\t\t<FlexItem key={ userState.clientId }>\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\tclassName=\"vip-real-time-collaboration-sidebar-user-row\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\tkey={ userState.clientId }\n\t\t\t\t\t\t\t\tshowUserColorBorder={ true }\n\t\t\t\t\t\t\t\tuserState={ userState }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Text>{ userState.name }</Text>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</FlexItem>\n\t\t\t\t) ) }\n\t\t\t</Flex>\n\t\t</PluginDocumentSettingPanel>\n\t);\n}\n","import { createElement, createRoot, useEffect, useRef } from '@wordpress/element';\n\nimport { RTCOverlay } from '@/components/rtc-overlay';\nimport { useWaitForSelector } from '@/hooks/use-wait-for-selector';\n\n/**\n * This component is responsible for creating the overlay in the editor iframe, and\n * cleaning up the overlay when the component is unmounted.\n */\nexport function useOverlayFrame() {\n\tconst iframeElement = useWaitForSelector< HTMLIFrameElement >( 'iframe[name=\"editor-canvas\"]' );\n\tconst iframeOverlayRootRef = useRef< ReturnType< typeof createRoot > | null >( null );\n\tconst editorDocument = iframeElement?.contentDocument;\n\n\tuseEffect( () => {\n\t\t// When the iframe is loaded, set blockEditorDocument for modifying block editor contents.\n\t\tif ( editorDocument ) {\n\t\t\t// Remove existing overlay, if present\n\t\t\teditorDocument.querySelector( '.vip-real-time-collaboration-overlay' )?.remove();\n\n\t\t\t// Add new overlay inside the iframe\n\t\t\tconst overlayDiv = editorDocument.createElement( 'div' );\n\t\t\toverlayDiv.className = 'vip-real-time-collaboration-overlay';\n\t\t\teditorDocument.body.appendChild( overlayDiv );\n\n\t\t\t// Create React root for the iframe overlay and render components inside it\n\t\t\tconst root = createRoot( overlayDiv );\n\t\t\tiframeOverlayRootRef.current = root;\n\n\t\t\t// This is not a .tsx file, so we'll use non-JSX syntax here.\n\t\t\troot.render( createElement( RTCOverlay, { iframeDocument: editorDocument } ) );\n\t\t}\n\n\t\t// Cleanup function\n\t\treturn () => {\n\t\t\tif ( iframeOverlayRootRef.current ) {\n\t\t\t\tiframeOverlayRootRef.current.unmount();\n\t\t\t\tiframeOverlayRootRef.current = null;\n\t\t\t}\n\t\t};\n\t}, [ editorDocument ] );\n}\n","import { useEffect, useState } from '@wordpress/element';\n\nimport { throttleByAnimationFrame } from '../utilities/throttle';\n\n// How often to poll for the selector when it's not present in the DOM.\nconst POLL_INTERVAL = 200;\n\n/**\n * This hook is used to wait for a selector to be present in the DOM.\n * If it's found, use a MutationObserver to watch for a removal of the item.\n * If it's not found, poll for the selector until available.\n *\n * @param targetSelector The selector to wait for.\n * @returns The target element, or null if it doesn't exist\n */\nexport function useWaitForSelector< T extends HTMLElement = HTMLElement >(\n\ttargetSelector: string\n): T | null {\n\tconst [ element, setElement ] = useState< T | null >( null );\n\n\tuseEffect( () => {\n\t\tlet pollInterval: NodeJS.Timeout | null = null;\n\t\tlet parentObserver: MutationObserver | null = null;\n\n\t\tconst checkForElement = () => {\n\t\t\tconst testTargetElement = document.querySelector( targetSelector ) as T;\n\t\t\tsetElement( testTargetElement || null );\n\n\t\t\treturn testTargetElement;\n\t\t};\n\n\t\tconst startPolling = () => {\n\t\t\tif ( pollInterval ) {\n\t\t\t\tclearInterval( pollInterval );\n\t\t\t}\n\n\t\t\tpollInterval = setInterval( () => {\n\t\t\t\tconst foundElement = checkForElement();\n\n\t\t\t\tif ( foundElement ) {\n\t\t\t\t\tstopPolling();\n\t\t\t\t\tstartObserving( foundElement );\n\t\t\t\t}\n\t\t\t}, POLL_INTERVAL );\n\t\t};\n\n\t\tconst stopPolling = () => {\n\t\t\tif ( pollInterval ) {\n\t\t\t\tclearInterval( pollInterval );\n\t\t\t\tpollInterval = null;\n\t\t\t}\n\t\t};\n\n\t\tconst startObserving = ( targetElement: HTMLElement ) => {\n\t\t\tconst throttledParentCheck = throttleByAnimationFrame( () => {\n\t\t\t\tconst currentElement = checkForElement();\n\t\t\t\tif ( ! currentElement ) {\n\t\t\t\t\t// Element was removed, fall back to polling\n\t\t\t\t\tstopObserving();\n\t\t\t\t\tstartPolling();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Observe the parent element to watch for removal of the target element.\n\t\t\tif ( targetElement.parentElement ) {\n\t\t\t\tparentObserver = new MutationObserver( throttledParentCheck );\n\t\t\t\tparentObserver.observe( targetElement.parentElement, {\n\t\t\t\t\tchildList: true,\n\t\t\t\t\tsubtree: false, // Only watch direct children\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\n\t\tconst stopObserving = () => {\n\t\t\tif ( parentObserver ) {\n\t\t\t\tparentObserver.disconnect();\n\t\t\t\tparentObserver = null;\n\t\t\t}\n\t\t};\n\n\t\tconst initialElement = checkForElement();\n\n\t\tif ( initialElement ) {\n\t\t\t// If the element exists, watch for mutations to see if it's removed.\n\t\t\tstartObserving( initialElement );\n\t\t} else {\n\t\t\t// If the element doesn't exist, poll for the selector.\n\t\t\tstartPolling();\n\t\t}\n\n\t\treturn () => {\n\t\t\tstopPolling();\n\t\t\tstopObserving();\n\t\t};\n\t}, [ targetSelector ] );\n\n\treturn element;\n}\n"],"names":["exports","__esModule","digestLength","blockSize","K","Uint32Array","hashBlocks","w","v","p","pos","len","a","b","c","d","e","f","g","h","u","i","j","t1","t2","Hash","this","state","Int32Array","temp","buffer","Uint8Array","bufferLength","bytesHashed","finished","reset","prototype","clean","length","update","data","dataLength","Error","dataPos","finish","out","left","bitLenHi","bitLenLo","padLength","digest","_saveState","_restoreState","from","HMAC","key","inner","outer","pad","istate","ostate","hash","hmac","fillBuffer","info","counter","num","hkdfSalt","hkdf","salt","okm","hmac_","bufpos","fill","pbkdf2","password","iterations","dkLen","prf","ctr","t","dk","k","factory","sha256","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","n","getter","definition","o","Object","defineProperty","enumerable","get","obj","prop","hasOwnProperty","window","Avatar","userState","showUserColorBorder","style","border","color","opacity","isConnected","_jsx","className","children","alt","name","src","avatarUrl","title","PERSISTED_STATE_POST_META_KEY","getVipConfigFromWindow","WEBSOCKET_URL","VIP_RTC","LogLevel","DEFAULT_LOG_THRESHOLD","WARNING","Logger","constructor","localNamespace","threshold","namespace","log","level","args","levelStr","console","debug","DEBUG","INFO","warn","error","ERROR","critical","CRITICAL","logger","loadFromLocalStorage","defaultValue","saved","localStorage","getItem","parsed","JSON","parse","Array","isArray","assign","saveToLocalStorage","setItem","stringify","LOCAL_STORAGE_KEY","DEFAULT_STATE","isAwarenessAvatarsEnabled","isAwarenessHighlightsEnabled","isAwarenessCursorsEnabled","isSelfAwarenessEnabled","selectors","store","createReduxStore","reducer","action","type","newState","payload","actions","setAwarenessAvatarsEnabled","enabled","setAwarenessHighlightsEnabled","setAwarenessCursorsEnabled","setSelfAwarenessEnabled","register","SelectionType","getSelectionState","selectionStart","selectionEnd","keys","None","isSelectionInOneBlock","clientId","isCursorOnly","offset","WholeBlock","blockId","Cursor","cursorPosition","SelectionInOneBlock","cursorStartPosition","cursorEndPosition","SelectionInMultipleBlocks","blockStartId","blockEndId","areUserStatesEqual","userState1","userState2","entries","every","value","state1","editorState","state2","Boolean","selection1","selection2","areSelectionsEqual","selection","userMap","Map","getActiveClientIds","getActiveUsers","isDisconnected","values","findIndex","user","isMe","has","existingState","updatedState","set","delete","patchUser","removeUser","upsertUser","useSortedAwarenessUsers","activeUsers","useSelect","select","awarenessStore","useMemo","sort","user1","user2","Avatars","rtcSettingsStore","visibleUsers","slice","remainingUsers","remainingUsersText","map","join","_jsxs","SVG","viewBox","xmlns","Path","fillRule","clipRule","PostLockedModal","buttonRef","onSuccess","postContent","getEditedPostContent","editorStore","useCopyToClipboard","useCopyPostContentToClipboard","disconnectedPastThreshold","setDisconnectedPastThreshold","useState","timeoutRef","useRef","useEffect","current","setTimeout","clearTimeout","_a","useIsDisconnected","Modal","__experimentalHideHeader","icon","isDismissible","isFullScreen","onRequestClose","shouldCloseOnClickOutside","shouldCloseOnEsc","VStack","alignment","justify","spacing","Icon","size","__","HStack","Button","ref","variant","href","isDestructive","getBlockElementById","blockEditorDocument","querySelector","throttleByAnimationFrame","callback","animationFrameId","cancelAnimationFrame","requestAnimationFrame","DrawType","getCursorPosition","editorDocument","overlay","blockElement","coords","getOffsetPositionInBlock","charOffset","node","findInnerBlockOffset","cursorRange","createRange","setStart","collapse","cursorRect","getBoundingClientRect","overlayRect","blockRect","cursorX","cursorY","x","y","width","height","top","cursorHeight","parseInt","getComputedStyle","lineHeight","treeWalker","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","currentOffset","lastTextNode","nodeCount","nextNode","nodeLength","_b","nodeValue","nodeType","Node","ELEMENT_NODE","TEXT_NODE","nodeName","nodeAfterBr","_d","_c","_e","RTCOverlay","iframeDocument","overlayRef","isAvatarsEnabled","highlightedBlockIds","Set","userStates","isHighlightsEnabled","unhighlightBlocks","blockIds","forEach","boxShadow","borderRadius","blocksToHighlight","isWholeBlockSelected","shouldDrawUser","filter","block","selectedBlockIds","includes","blockColorPair","add","useBlockHighlighting","drawType","All","OtherUsers","sortedUsers","renderCursorsRef","userSelections","userName","drawUserSelections","querySelectorAll","container","remove","selectionAsCursor","userContainer","document","createElement","cursor","backgroundColor","label","textContent","appendChild","throttledHandleResize","handleResize","addEventListener","removeEventListener","useRenderCursors","_Fragment","getBrowserName","userAgent","navigator","browserName","getCurrentUserInfo","avatar_urls","avatarUrls","id","coreStore","getCurrentUser","Promise","resolve","METRO_COLORS","getNewUserColor","existingColors","availableColors","generateRandomInt","hexColor","preferredColor","Math","round","USER_HIGHLIGHT_ALPHA","toString","padStart","toUpperCase","min","max","floor","random","AwarenessManager","awareness","userInfo","setCurrentUserState","refreshAwareness","subscribeToSelectionChanges","subscribeToUserChanges","initialize","entityId","__instance","setConnectionStatus","clientID","dispatch","states","getStates","otherUserColors","currentUserState","browserType","getLocalStateField","setLocalState","field","getLocalState","setLocalStateField","clientIdsFromStore","clientIdsFromAwareness","validateUserState","getSelectedBlocksInitialCaretPosition","getSelectionStart","getSelectionEnd","blockEditorStore","awarenessCursorTimeout","localCursorTimeout","subscribe","newSelectionStart","newSelectionEnd","initialPosition","editEntityRecord","getCurrentPostId","getCurrentPostType","postId","postType","edits","undoIgnore","updateSelectionInEntityRecord","userRemovalTimeouts","on","added","removed","updated","updatedUserStates","fromCharCode","String","trimLeftRegex","fromCodePoint","fromCamelCaseRegex","fromCamelCase","s","separator","replace","trimLeft","match","toLowerCase","TextEncoder","utf8TextDecoder","TextDecoder","fatal","ignoreBOM","decode","create","_localStorage","newValue","usePolyfill","varStorage","isNode","process","release","test","isBrowser","params","platform","pargs","argv","currParamName","parg","push","location","search","split","kv","computeParams","hasParam","env","getVariable","toBase64","bytes","byteLength","btoa","Buffer","byteOffset","fromBase64","atob","charCodeAt","buf","applyUpdate","wp","sync","Y","applyUpdateV2","encodeStateVector","encodeStateAsUpdate","encodeStateAsUpdateV2","Doc","generateHash","message_1","algorithm_1","message","algorithm","hashBase","msgUint8","encode","isSecureContext","arrayBuffer","arrayBufferToHex","crypto","subtle","serializeCrdtDoc","crdtDoc","getCrdtDocVersion","version","meta","createT","replaceAll","FORCE_COLOR","stdout","isTTY","channels","BC","BroadcastChannel","room","eventHandler","onmessage","_onChange","postMessage","close","getChannel","subs","bc","sub","publish","origin","getUnixTime","Date","now","ceil","abs","imul","log10","log2","sqrt","pow","Number","isNaN","BIT8","sign","BITS7","Encoder","cpos","cbuf","bufs","createEncoder","encoder","toUint8Array","uint8arr","curPos","write","bufferLen","writeVarUint","writeUint8Array","encodeInto","uint8Array","leftCopyLen","rightCopyLen","subarray","writeVarUint8Array","DataView","ArrayBuffer","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","isInteger","errorUnexpectedEndOfArray","errorIntegerOutOfRange","Decoder","arr","readVarUint8Array","decoder","view","readUint8Array","readVarUint","mult","r","str","encodedString","unescape","encodeURIComponent","codePointAt","written","remainingLen","nextLen","apply","decodeURIComponent","escape","writeSyncStep1","doc","sv","writeSyncStep2","encodedStateVector","readSyncStep2","transactionOrigin","readUpdate","Observable","_observers","once","_f","off","observers","emit","destroy","hasProperty","EqualityTraitSymbol","freeze","Symbol","Awareness","super","_checkInterval","setInterval","outdatedTimeout","lastUpdated","clientid","removeAwarenessStates","clearInterval","currLocalMeta","clock","prevState","filteredUpdated","clients","curMeta","encodeAwarenessUpdate","messageHandlers","provider","emitSynced","_messageType","syncMessageType","messageType","readSyncStep1","synced","_decoder","_emitSynced","_encoder","timestamp","clientMeta","currClock","permissionDeniedHandler","_ydoc","reason","url","readMessage","messageHandler","closeWebsocketConnection","ws","event","wsconnecting","wsconnected","client","status","wsUnsuccessfulReconnects","setupWS","maxBackoffTime","shouldConnect","websocket","_WS","protocols","binaryType","wsLastMessageReceived","send","onerror","onclose","onopen","encoderAwarenessState","broadcastMessage","readyState","OPEN","bcconnected","bcChannel","WebsocketProvider","serverUrl","roomname","connect","WebSocketPolyfill","WebSocket","resyncInterval","disableBc","_synced","_resyncInterval","_bcSubscriber","_updateHandler","_awarenessUpdateHandler","_origin","changedClients","concat","_exitHandler","messageReconnectTimeout","encodedParams","results","val","disconnect","connectBc","encoderSync","encoderState","encoderAwarenessQuery","disconnectBc","channel","getErrorMessage","defaultMessage","getConnectionId","cache","result","randomUUID","generateUUID","fn","memoizeFn","createConnect","syncObjectType","syncObjectId","reconnectAttempts","backoffDelayInMs","backoffDelayInS","authToken","apiFetch","path","method","connectionId","token","fetchAuthToken","auth","roomName","connectionConfig","createNewDoc","inspectUrl","logInspectUrl","SyncProviderWithAwareness","SyncProvider","config","objectId","objectType","options","onStatusChange","createWebSocketConnection","onProviderStatusChange","bootstrap","syncConfig","record","handleChanges","_super","getObjectId","getEntityId","connections","connection","supportsAwareness","createEntityMeta","changes","startsWith","ydoc","getEntityState","rawContent","content","raw","getRawContentFromEntityRecord","entityMeta","metaValue","contentHash","createCrdtDocMetaValue","createPersistedCrdtDocMetaRecord","getPersistedCRDTDoc","expectedVersion","getMetaFromEntityRecord","persistedDoc","rawMetaValue","isValidCrdtDocMetaValueShape","serializedCrdtDoc","docMeta","yupdate","deserializeCrdtDoc","getPersistedCrdtDocFromEntityMeta","logMessage","addFilter","webSocketConnectionConfig","registerPlugin","render","isCursorsEnabled","useDispatch","iframeElement","targetSelector","element","setElement","pollInterval","parentObserver","checkForElement","testTargetElement","startPolling","foundElement","stopPolling","startObserving","targetElement","throttledParentCheck","stopObserving","parentElement","MutationObserver","observe","childList","subtree","initialElement","useWaitForSelector","iframeOverlayRootRef","contentDocument","overlayDiv","body","root","createRoot","unmount","useOverlayFrame","PluginDocumentSettingPanel","ToggleControl","checked","onChange","handleToggleAvatars","handleToggleHighlights","handleToggleCursors","handleToggleSelfAwareness","Heading","marginTop","Flex","direction","gap","FlexItem","Text"],"sourceRoot":""}