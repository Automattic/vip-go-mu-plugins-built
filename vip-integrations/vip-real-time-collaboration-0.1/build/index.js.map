{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACkD;AACF;AAChD,2BAA2B,sDAAI,CAAC,sDAAG;AACnC;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,iEAAe,KAAK,EAAC;AACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA;AACA,UAAU;AACV;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA,UAAU;AACV;AACO;AACP;AACA,UAAU;AACV;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFP;AACA;AACA;AACA;AACA;;AAEqC;AACE;AACE;AACA;;AAEzC;AACA,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACO;;AAEP;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,SAAS,oDAAmB;AAC5B;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACO,iBAAiB,sDAAa;;AAErC;AACO,mBAAmB,sDAAa;;AAEvC;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;AACP,kBAAkB,uDAAsB;AACxC,EAAE,kDAAiB;AACnB,SAAS,sDAAqB;AAC9B;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO,yBAAyB,iDAAgB,CAAC,uDAAsB;;;;;;;;;;;;;;;AChHvE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqC;AACA;AACJ;;AAEjC;AACA;AACA;AACO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP,eAAe,2EAA0C;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA,sBAAsB,6CAAY;AAClC;AACA,YAAY,4CAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA,gBAAgB,6CAAY;AAC5B;AACA,oBAAoB,4CAAW;AAC/B,WAAW,4CAAW;AACtB;AACA;AACA;AACA;AACA;AACA,sBAAsB,6CAAY;AAClC;AACA,YAAY,4CAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA,gCAAgC;AAChC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB;AACO,2CAA2C,KAAK;;AAEvD;AACA,WAAW,SAAS;AACpB;AACO,4CAA4C,KAAK;;AAExD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe;AACf;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,oDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,oDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqC;AACJ;AACI;AACA;;AAErC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACO;AACP;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA,eAAe,2EAA0C;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,sBAAsB,2EAA0C;AAChE,kCAAkC,yCAAQ;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA,kBAAkB,4CAA4C;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,uBAAuB,6CAAY;AACnC,+BAA+B,6CAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,0BAA0B,6CAAY;AACtC,sCAAsC,6CAAY;AAClD;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,OAAO;AACzB,yBAAyB,6CAAY;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,QAAQ;AAC1B,uCAAuC,6CAAY;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,OAAO;AACzB,gCAAgC,6CAAY;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,eAAe,6CAAY;AAC3B,mBAAmB,4CAAW,IAAI,6CAAY;AAC9C;AACA;AACA,iBAAiB,6CAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,qBAAqB,oDAAmB;AACxC;AACA;AACA;AACA;AACA,wBAAwB,6CAAY,GAAG,4CAAW,sBAAsB,4CAAW,SAAS,6CAAY;AACxG;AACA;AACA;AACA;AACA,0BAA0B,6CAAY,GAAG,4CAAW,SAAS,6CAAY;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,8BAA8B,QAAQ;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA,sBAAsB,yCAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAQ;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO,mDAAmD,KAAK;;AAE/D;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO,oDAAoD,KAAK;;AAEhE;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ,MAAM,QAAQ;AACzF,mEAAmE,QAAQ,MAAM,QAAQ;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,sFAAsF;AACjG;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iDAAgB,kBAAkB,8CAAa;AACzD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvzBA;AACA;AACA;AACA;AACA;;AAE+B;AACM;AACQ;AACN;;AAEvC;AACA;AACO;AACP;AACO;AACP;AACO;;AAEP;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,2CAAU;AACzB;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,eAAe,2CAAU;AACzB;AACA,OAAO;AACP;AACA;AACA,0BAA0B,qDAAoB,WAAW;AACzD,yBAAyB,qDAAoB,WAAW;AACxD;AACA,OAAO;AACP,MAAM;AACN,eAAe,2CAAU;AACzB;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO,qCAAqC,2DAA0B,oCAAoC,2DAA0B,CAAC,mDAAkB;;AAEvJ;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACO;;;;;;;;;;;;;;;;;;;;AC3GP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO;AACP;AACA,wBAAwB,aAAa;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,GAAG;AACd,WAAW,cAAc;AACzB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEA;;AAEA;AACP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEA;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;;;;;;;;;;;;;;;;;;;;;;ACzDP;AACA;AACA;AACA;AACA;;AAEiC;AACI;;AAE9B;AACA;;AAEA;AACP;AACA,UAAU;AACV;AACO,sBAAsB,8CAAa;;AAE1C;AACA;AACA;;AAEA;AACO,0FAA0F,2CAAU;AACpG;;;;;;;;;;;;;;;;ACxBP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA,yDAAyD,GAAG;AAC5D;AACA,WAAW,WAAW,iDAAiD,SAAS;AAChF;AACA;AACO,uFAAuF,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DnG;AACA;AACA;AACA;AACA;;AAEO;AACA;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO,2FAA2F,UAAU,EAAE,mBAAmB;;AAEjI;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA;AACO,mCAAmC,aAAa;;AAEvD;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,KAAK;AACtE;AACA;AACA;AACA;;AAEA;AACO,6FAA6F,8BAA8B;;AAElI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO,4CAA4C,aAAa;;AAEhE;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACO;;;;;;;;;;;;;;;;;;;;;AChHiB;AACiB;AACA;;AAElC;;AAEP;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB;AACO;AACP,EAAE,uDAAqB;AACvB,EAAE,yDAAuB;AACzB;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,yBAAyB;AACpC;AACO;AACP,UAAU,sDAAoB;AAC9B,6DAA6D,wDAAsB;AACnF;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;;AAEyC;AACA;AACR;AACA;AACW;AACV;AACV;;AAEjB;;AAEP;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8DAA8D;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO,wBAAwB,uDAAU;AACzC;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,qCAAqC,KAAK;AAC1C,kBAAkB,kDAAgB;AAClC,qFAAqF,qBAAqB;AAC1G;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK,EAAE,4CAAU;AACjB;AACA;AACA,KAAK;AACL,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,mBAAmB,kDAAgB;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,WAAW,uDAAc;AACzB;AACA;AACA;AACA;AACA,6BAA6B,0CAA0C;AACvE;AACA,2BAA2B,yBAAyB;AACpD;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,eAAe;AAC1B,WAAW,KAAK;AAChB;AACO;AACP;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA,uBAAuB,kDAAgB;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE,gCAAgC,iCAAiC;AACjE;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACO;AACP;AACA,kBAAkB,wDAAsB;AACxC,EAAE,uDAAqB;AACvB,kBAAkB,SAAS;AAC3B;AACA;AACA,6BAA6B,iBAAiB;AAC9C,IAAI,uDAAqB;AACzB,IAAI,uDAAqB;AACzB,IAAI,yDAAuB;AAC3B;AACA,SAAS,uDAAqB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACO;AACP,kBAAkB,wDAAsB;AACxC,kBAAkB,wDAAsB;AACxC,cAAc,sDAAoB;AAClC,EAAE,uDAAqB;AACvB,kBAAkB,SAAS;AAC3B,qBAAqB,sDAAoB;AACzC,kBAAkB,sDAAoB;AACtC,6BAA6B,wDAAsB;AACnD;AACA,IAAI,uDAAqB;AACzB,IAAI,uDAAqB;AACzB,IAAI,yDAAuB;AAC3B;AACA,SAAS,uDAAqB;AAC9B;;AAEA;AACA,WAAW,WAAW;AACtB,WAAW,YAAY;AACvB,WAAW,KAAK;AAChB;AACO;AACP,kBAAkB,wDAAsB;AACxC,oBAAoB,kDAAgB;AACpC;AACA;AACA;AACA;AACA,cAAc,sDAAoB;AAClC,kBAAkB,SAAS;AAC3B,qBAAqB,sDAAoB;AACzC,gBAAgB,sDAAoB;AACpC,6BAA6B,wDAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR,aAAa,uDAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtSA;AACA;AACA;AACA;AACA;;AAE+B;;AAE/B;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,YAAY;AACZ;AACO,gCAAgC,UAAU;;AAEjD;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO,6BAA6B,UAAU;;AAE9C;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACO;AACP,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,WAAW,KAAK;AAChB,WAAW,sFAAsF;AACjG,YAAY;AACZ;AACO;AACP,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,WAAW,KAAK;AAChB,WAAW,wFAAwF;AACnG,YAAY;AACZ;AACO;AACP,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO,4CAA4C,aAAa;;AAEhE;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,8BAA8B;AACzC,YAAY;AACZ;AACO;AACP;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,oCAAoC;AAC/C;AACO;;AAEA;;AAEP;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO,2BAA2B,yCAAQ;;AAE1C;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACO;AACP;AACA,YAAY;AACZ;AACA,mBAAmB,2CAAU;AAC7B;AACA,YAAY;AACZ;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gBAAgB;AAC9B,cAAc,uEAAuE;AACrF,WAAW,KAAK;AAChB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA,YAAY;AACZ;AACA;AACA,kBAAkB,gBAAgB;AAClC,+BAA+B,KAAK,2BAA2B,KAAK;AACpE;AACA,oBAAoB,KAAK;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,qBAAqB;AAChC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1NA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA;AACA,UAAU;AACV;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA,UAAU;AACV;AACO;AACP;AACA,UAAU;AACV;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqC;AACJ;AACI;AACA;AACF;AACM;;AAEzC,kCAAkC,6CAAY;AAC9C,+BAA+B,6CAAY;;AAE3C;AACA;AACA;AACO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6CAAY;AACjC;AACA,YAAY,4CAAW;AACvB;AACA;AACA;AACA,cAAc,wDAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA,gBAAgB,6CAAY;AAC5B;AACA,oBAAoB,4CAAW;AAC/B,WAAW,4CAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6CAAY;AACjC;AACA,YAAY,4CAAW;AACvB;AACA;AACA;AACA,cAAc,wDAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA,gCAAgC;AAChC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP,oBAAoB,uDAAsB;;AAE1C;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACO,sBAAsB,uDAAsB;;AAEnD;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP,kBAAkB,uDAAsB;AACxC;AACA;AACA;AACA;AACA,aAAa,sDAAqB;AAClC;AACA;AACA;AACA;AACA,IAAI,+CAAc;AAClB;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO,wCAAwC,kDAAiB;;AAEhE;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB;AACO,2CAA2C,KAAK;;AAEvD;AACA,WAAW,SAAS;AACpB;AACO,4CAA4C,KAAK;;AAExD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe;AACf;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,oDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,oDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2CAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiC;AACI;AACA;AACA;AACF;;AAEnC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,wBAAwB;AACnC;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACO;AACP;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,kCAAkC,yCAAQ;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA,kBAAkB,4CAA4C;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,uBAAuB,6CAAY;AACnC,+BAA+B,6CAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,0BAA0B,6CAAY;AACtC,sCAAsC,6CAAY;AAClD;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,OAAO;AACzB,yBAAyB,6CAAY;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,QAAQ;AAC1B,uCAAuC,6CAAY;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,OAAO;AACzB,gCAAgC,6CAAY;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,eAAe,6CAAY;AAC3B,mBAAmB,4CAAW,IAAI,6CAAY;AAC9C,UAAU,2CAAU;AACpB;AACA,iBAAiB,6CAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,qBAAqB,oDAAmB;AACxC;AACA;AACA;AACA;AACA,wBAAwB,6CAAY,GAAG,4CAAW,sBAAsB,4CAAW,SAAS,6CAAY;AACxG,QAAQ,2CAAU;AAClB;AACA;AACA;AACA,0BAA0B,6CAAY,GAAG,4CAAW,SAAS,6CAAY;AACzE,UAAU,2CAAU;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,oBAAoB,uDAAsB;AAC1C;AACA,oBAAoB,aAAa;AACjC;AACA;AACA,IAAI;AACJ,gCAAgC,kDAAiB;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,8BAA8B,QAAQ;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACO,wBAAwB,uDAAsB,eAAe,KAAK,IAAI,uDAAsB;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,qCAAqC,kDAAiB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA,sBAAsB,yCAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAQ;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO,mDAAmD,KAAK;;AAE/D;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO,oDAAoD,KAAK;;AAEhE;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ,MAAM,QAAQ;AACzF,mEAAmE,QAAQ,MAAM,QAAQ;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,sFAAsF;AACjG;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iDAAgB,UAAU,yCAAQ,UAAU,8CAAa;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS,8CAAa;AAC9B;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACj6BA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,YAAY;AACZ,YAAY;AACZ;AACA;AACO;AACP;AACA;;AAEA;AACA,YAAY;AACZ,YAAY;AACZ;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;;AAEmC;AACE;AACA;;AAErC;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,YAAY;AACvB;AACO;AACP;AACA,WAAW,eAAe;AAC1B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO,0GAA0G,8CAAa,OAAO,gDAAe,eAAe,UAAU,sCAAsC,iDAAgB;;AAEnO;;AAEA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAA0B;AAClC,aAAa,2DAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8CAAa,QAAQ,8CAAa;AAC5C;AACA;AACA;AACA,aAAa,mDAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,GAAG;AACjB;AACA,WAAW,GAAG;AACd,WAAW,aAAa;AACxB;AACA;AACO;AACP;;AAEO,gBAAgB,8CAAa;;AAEpC;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;;AAEP;AACA,cAAc,oCAAoC;AAClD,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,YAAY;AACZ;AACO;;AAEP;AACA,cAAc,oCAAoC;AAClD,WAAW,MAAM;AACjB;AACO;AACP;AACA,aAAa,KAAK;AAClB,cAAc;AACd;AACA;;;;;;;;;;;;;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO;AACP;AACA,wBAAwB,aAAa;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B,cAAc,uDAAuD;AACrE,WAAW,KAAK;AAChB,WAAW,4CAA4C;AACvD,WAAW,IAAI;AACf,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEA;;AAEA;AACP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEA;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDP;AACA;AACA;AACA;AACA;;AAEiC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;;AAEA;AACA,4EAA4E,mBAAmB;AAC/F;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP,6BAA6B,2CAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2CAAU,iBAAiB,2CAAU,iBAAiB,2CAAU;AACvE;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;;AAEiC;AACI;;AAE9B;AACA;;AAEA;AACA,sBAAsB,8CAAa;AACnC,uBAAuB,8CAAa;;AAE3C;AACO,0FAA0F,2CAAU;AACpG;AACA;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP,OAAO,8CAAa;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,oBAAoB;AAChC;AACO;;AAEP;AACA;AACA;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B;AACO;;AAEP;AACA;AACA,YAAY,kBAAkB;AAC9B,YAAY;AACZ;AACO;;AAEP;AACA;AACA,YAAY,eAAe;AAC3B,WAAW,wBAAwB;AACnC;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,wBAAwB;AACnC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;AAEP;AACA,gBAAgB,mCAAmC;AACnD,WAAW,GAAG;AACd,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,uBAAuB;AAClC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mCAAmC;AACnD,WAAW,GAAG;AACd,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,sBAAsB;AACjC,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB,WAAW,GAAG;AACd,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,UAAU;AACxB,WAAW,IAAI;AACf,WAAW,GAAG;AACd,WAAW,aAAa;AACxB,YAAY;AACZ;AACO;;;;;;;;;;;;;;;;;;;AChKP;AACA;AACA;AACA;AACA;;AAE+B;AACA;AACI;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;AAC9D;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,2CAAU;AAChC;;AAEA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,MAAM;AACnB,aAAa,cAAc;AAC3B;AACA;AACA,IAAI,mDAAkB,6BAA6B,QAAQ,WAAW,2CAAU;AAChF;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,MAAM;AACnB,aAAa,cAAc;AAC3B;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,gCAAgC,KAAK;AACrC;AACA;AACA,6BAA6B,KAAK;AAClC;;AAEA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,MAAM;AACnB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,MAAM;AACnB,aAAa,0BAA0B;AACvC;AACA;AACA;AACA,WAAW,2CAAU,+BAA+B,2CAAU;AAC9D;;AAEA;AACA,sBAAsB,2CAAU;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,2CAAU;AAChC;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA,IAAI,mDAAkB,wBAAwB,2CAAU;AACxD;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,YAAY;AACzB;AACA;AACA;AACA,WAAW,2CAAU,+BAA+B,2CAAU;AAC9D;;AAEA;AACA,sBAAsB,2CAAU;AAChC;AACA;AACA;;;;;;;;;;;;;;;;;;AChKA;AACA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,aAAa;AACxB,YAAY;AACZ;AACO;;;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CzC,YAAY;AACZ;AACO;AACP;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,oCAAoC;AAC/C;AACO;;AAEA;;AAEP;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO,2BAA2B,yCAAQ;;AAE1C;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACO;AACP;AACA,YAAY;AACZ;AACA,mBAAmB,2CAAU;AAC7B;AACA,YAAY;AACZ;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gBAAgB;AAC9B,cAAc,uEAAuE;AACrF,WAAW,KAAK;AAChB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA,YAAY;AACZ;AACA;AACA,kBAAkB,gBAAgB;AAClC,+BAA+B,KAAK,2BAA2B,KAAK;AACpE;AACA,oBAAoB,KAAK;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,qBAAqB;AAChC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1NA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA;AACA,UAAU;AACV;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA,UAAU;AACV;AACO;AACP;AACA,UAAU;AACV;AACO;;;;;;;;;;;;;;;;;;;;;ACzFP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAE+B;AACA;AACM;AACE;;AAEvC;AACA,aAAa,QAAQ;AACrB,cAAc,6BAA6B;AAC3C,cAAc,KAAK;AACnB;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,cAAc,eAAe,iBAAiB;AAC9C;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA,wFAAwF,MAAM,kDAAiB,oBAAoB;AACnI,IAAI,iDAAgB;AACpB;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA,IAAI,mDAAkB,oBAAoB,gDAAe,CAAC,uEAAsC;AAChG;;AAEA;AACA,IAAI,kDAAiB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,EAAE,mDAAkB;AACpB,iBAAiB,2CAAU;AAC3B;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,wBAAwB;AACnC;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,wBAAwB;AACnC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;;AAEqC;AACE;AACJ;AACF;AACQ;AACA;;AAEzC;AACA,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACO;;AAEP;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,SAAS,oDAAmB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACO,iBAAiB,sDAAa;;AAErC;AACO,mBAAmB,sDAAa;;AAEvC;AACA;AACA,WAAW,YAAY;AACvB;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACO,2BAA2B,0CAAS;;AAE3C;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA,6BAA6B,0CAAS;AACtC,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;AACP,EAAE,gDAAe,YAAY,kDAAiB;;AAE9C;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO,yBAAyB,iDAAgB,CAAC,uDAAsB;;AAEvE;AACA,qBAAqB,GAAG;AACxB;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,YAAY;AACZ;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqC;AACJ;AACI;AACA;AACF;AACM;;AAEzC,kCAAkC,6CAAY;AAC9C,+BAA+B,6CAAY;;AAE3C;AACA;AACA;AACO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6CAAY;AACjC;AACA,YAAY,4CAAW;AACvB;AACA;AACA;AACA,cAAc,wDAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA,gBAAgB,6CAAY;AAC5B;AACA,oBAAoB,4CAAW;AAC/B,WAAW,4CAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6CAAY;AACjC;AACA,YAAY,4CAAW;AACvB;AACA;AACA;AACA,cAAc,wDAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA,gCAAgC;AAChC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP,oBAAoB,uDAAsB;;AAE1C;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACO,sBAAsB,uDAAsB;;AAEnD;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP,kBAAkB,uDAAsB;AACxC;AACA;AACA;AACA;AACA,aAAa,sDAAqB;AAClC;AACA;AACA;AACA;AACA,IAAI,+CAAc;AAClB;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO,wCAAwC,kDAAiB;;AAEhE;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB;AACO,2CAA2C,KAAK;;AAEvD;AACA,WAAW,SAAS;AACpB;AACO,4CAA4C,KAAK;;AAExD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe;AACf;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,oDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,oDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2CAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiC;AACI;AACA;AACA;AACF;;AAEnC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,wBAAwB;AACnC;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACO;AACP;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,kCAAkC,yCAAQ;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA,kBAAkB,4CAA4C;AAC9D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,uBAAuB,6CAAY;AACnC,+BAA+B,6CAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,0BAA0B,6CAAY;AACtC,sCAAsC,6CAAY;AAClD;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,OAAO;AACzB,yBAAyB,6CAAY;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,QAAQ;AAC1B,uCAAuC,6CAAY;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP,kBAAkB,OAAO;AACzB,gCAAgC,6CAAY;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,eAAe,6CAAY;AAC3B,mBAAmB,4CAAW,IAAI,6CAAY;AAC9C,UAAU,2CAAU;AACpB;AACA,iBAAiB,6CAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,qBAAqB,oDAAmB;AACxC;AACA;AACA;AACA;AACA,wBAAwB,6CAAY,GAAG,4CAAW,sBAAsB,4CAAW,SAAS,6CAAY;AACxG,QAAQ,2CAAU;AAClB;AACA;AACA;AACA,0BAA0B,6CAAY,GAAG,4CAAW,SAAS,6CAAY;AACzE,UAAU,2CAAU;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,oBAAoB,uDAAsB;AAC1C;AACA,oBAAoB,aAAa;AACjC;AACA;AACA,IAAI;AACJ,gCAAgC,kDAAiB;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,8BAA8B,QAAQ;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACO,wBAAwB,uDAAsB,eAAe,KAAK,IAAI,uDAAsB;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;AACP,qCAAqC,kDAAiB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA,sBAAsB,yCAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAQ;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO,mDAAmD,KAAK;;AAE/D;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACO,oDAAoD,KAAK;;AAEhE;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ,MAAM,QAAQ;AACzF,mEAAmE,QAAQ,MAAM,QAAQ;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,sFAAsF;AACjG;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iDAAgB,UAAU,yCAAQ,UAAU,8CAAa;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS,8CAAa;AAC9B;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACj6BA;AACA;AACA;AACA;AACA;;AAE+B;AACM;AACQ;AACN;AACL;;AAElC;AACA;AACO;;AAEP;AACO;AACP;AACO;AACP;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,2CAAU;AACzB;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,eAAe,2CAAU,IAAI;AAC7B;AACA;AACA;AACA,0BAA0B,qDAAoB,WAAW;AACzD,yBAAyB,qDAAoB,WAAW;AACxD;AACA,OAAO;AACP,MAAM;AACN,eAAe,2CAAU;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;AACA,MAAM,2DAA0B;AAChC,MAAM,2DAA0B,CAAC,mDAAkB;;AAEnD;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;AACA,4DAA4D,wCAAwC;AACpG;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;AACP;;AAEA;AACO;;AAEP;AACA;AACA,EAAE,iDAAS;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,YAAY;AACZ,YAAY;AACZ;AACA;AACO;AACP;AACA;;AAEA;AACA,YAAY;AACZ,YAAY;AACZ;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;;AAEmC;AACE;AACA;;AAErC;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,YAAY;AACvB;AACO;AACP;AACA,WAAW,eAAe;AAC1B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO,0GAA0G,8CAAa,OAAO,gDAAe,eAAe,UAAU,sCAAsC,iDAAgB;;AAEnO;;AAEA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAA0B;AAClC,aAAa,2DAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8CAAa,QAAQ,8CAAa;AAC5C;AACA;AACA;AACA,aAAa,mDAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,GAAG;AACjB;AACA,WAAW,GAAG;AACd,WAAW,aAAa;AACxB;AACA;AACO;AACP;;AAEO,gBAAgB,8CAAa;;AAEpC;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;;AAEP;AACA,cAAc,oCAAoC;AAClD,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,YAAY;AACZ;AACO;;AAEP;AACA,cAAc,oCAAoC;AAClD,WAAW,MAAM;AACjB;AACO;AACP;AACA,aAAa,KAAK;AAClB,cAAc;AACd;AACA;;;;;;;;;;;;;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACO;AACP;AACA,wBAAwB,aAAa;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B,cAAc,uDAAuD;AACrE,WAAW,KAAK;AAChB,WAAW,4CAA4C;AACvD,WAAW,IAAI;AACf,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEA;;AAEA;AACP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEA;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDP;AACA;AACA;AACA;AACA;;AAEiC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;;AAEA;AACA,4EAA4E,mBAAmB;AAC/F;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP,6BAA6B,2CAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2CAAU,iBAAiB,2CAAU,iBAAiB,2CAAU;AACvE;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;;AAEiC;AACI;;AAE9B;AACA;;AAEA;AACA,sBAAsB,8CAAa;AACnC,uBAAuB,8CAAa;;AAE3C;AACO,0FAA0F,2CAAU;AACpG;AACA;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP,OAAO,8CAAa;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,oBAAoB;AAChC;AACO;;AAEP;AACA;AACA;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B;AACO;;AAEP;AACA;AACA,YAAY,kBAAkB;AAC9B,YAAY;AACZ;AACO;;AAEP;AACA;AACA,YAAY,eAAe;AAC3B,WAAW,wBAAwB;AACnC;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,wBAAwB;AACnC,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;AAEP;AACA,gBAAgB,mCAAmC;AACnD,WAAW,GAAG;AACd,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,uBAAuB;AAClC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mCAAmC;AACnD,WAAW,GAAG;AACd,WAAW,mCAAmC;AAC9C,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,sBAAsB;AACjC,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB,WAAW,GAAG;AACd,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,UAAU;AACxB,WAAW,IAAI;AACf,WAAW,GAAG;AACd,WAAW,aAAa;AACxB,YAAY;AACZ;AACO;;;;;;;;;;;;;;;;;;;AChKP;AACA;AACA;AACA;AACA;;AAE+B;AACA;AACI;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;AAC9D;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,2CAAU;AAChC;;AAEA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,MAAM;AACnB,aAAa,cAAc;AAC3B;AACA;AACA,IAAI,mDAAkB,6BAA6B,QAAQ,WAAW,2CAAU;AAChF;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,MAAM;AACnB,aAAa,cAAc;AAC3B;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,gCAAgC,KAAK;AACrC;AACA;AACA,6BAA6B,KAAK;AAClC;;AAEA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,MAAM;AACnB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC,aAAa,MAAM;AACnB,aAAa,0BAA0B;AACvC;AACA;AACA;AACA,WAAW,2CAAU,+BAA+B,2CAAU;AAC9D;;AAEA;AACA,sBAAsB,2CAAU;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,2CAAU;AAChC;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA,IAAI,mDAAkB,wBAAwB,2CAAU;AACxD;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,YAAY;AACzB;AACA;AACA;AACA,WAAW,2CAAU,+BAA+B,2CAAU;AAC9D;;AAEA;AACA,sBAAsB,2CAAU;AAChC;AACA;AACA;;;;;;;;;;;;;;;;;;AChKA;AACA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA;AACA,WAAW,aAAa;AACxB,YAAY;AACZ;AACO;;;;;;;;;;;;;;;;;AC3BP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACO;;AAEP;AACA,yDAAyD,GAAG;AAC5D;AACA,WAAW,WAAW,iDAAiD,SAAS;AAChF;AACA;AACA;AACO,uFAAuF,KAAK;;AAEnG;AACA,4DAA4D,GAAG;AAC/D;AACA,WAAW,WAAW,iDAAiD,SAAS;AAChF;AACA;AACA;AACO,2FAA2F,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEpE;;AAEnC;AACA;AACA;AACA;AACA;;AAEO;AACA;;AAEP;AACA;AACA;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO,2FAA2F,UAAU,EAAE,mBAAmB;;AAEjI;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA;AACO,mCAAmC,aAAa;;AAEvD;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,KAAK;AACtE;AACA;AACA;AACA;;AAEA;AACO,6FAA6F,8BAA8B;;AAElI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACO,4CAA4C,aAAa;;AAEhE;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO,8BAA8B,6CAAY;;AAEjD;AACA,2EAA2E,KAAK,KAAK,MAAM;AAC3F;AACA,WAAW,QAAQ;AACnB;AACO;AACP,0CAA0C,QAAQ;AAClD,eAAe;AACf,cAAc;AACd,cAAc;AACd,eAAe;AACf,gBAAgB;AAChB,GAAG;;AAEH;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP,oBAAoB,KAAK,KAAK,MAAM,OAAO,oBAAoB,QAAQ;AACvE,UAAU;AACV,SAAS;AACT,SAAS;AACT,UAAU;AACV,WAAW;AACX,GAAG;;;;;;;;;;;;;;;;;;;ACpKH;AACA;AACA;AACA;AACA;;AAEqC;AACJ;;AAEjC;AACA;AACA;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA,cAAc,8CAAa;AAC3B,WAAW,2CAAU;AACrB;AACA,MAAM,2CAAU;AAChB;AACA,kBAAkB,2CAAU;AAC5B,gBAAgB,2CAAU;AAC1B,eAAe,2CAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/CO;;AAEP;AACA,eAAe,wDAAwD;AACvE;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;AAEqC;;AAErC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACO;AACP,EAAE,2CAAU,0BAA0B,wBAAwB,GAAG,wBAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCzF;AACA;AACA;;AAEA;;AAEwB;AACmB;AACV;AACQ;AACA;AACO;AACA;AACU;AACZ;AACb;AACF;AACQ;;AAEhC;AACA;AACA;AACA;;AAEP;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAqB;AACvB,0BAA0B,6DAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iEAAgC;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAqB;AACvB,EAAE,6DAA2B;AAC7B;AACA,IAAI,wEAAuC;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uEAAsC;AACxC;AACA,IAAI,4DAA0B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAA4B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B,WAAW,QAAQ;AACnB;AACA;AACA,8CAA8C,aAAa,KAAK,OAAO;;AAEvE;AACA,WAAW,mBAAmB;AAC9B,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA,kBAAkB,wDAAsB;AACxC,kBAAkB,wDAAsB;AACxC,sBAAsB,sDAAoB;AAC1C;AACA,iBAAiB,KAAK;AACtB;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,WAAW;AACtB,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wEAAuC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0CAAQ;AACd,QAAQ,0CAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,kDAAgB;AACvD;AACA,UAAU,iDAAe;AACzB,uBAAuB,uDAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAgB;AACvD;AACA;AACA;AACA;AACA;AA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","sources":["webpack://vip-real-time-collaboration/./node_modules/@wordpress/icons/build-module/library/error.js","webpack://vip-real-time-collaboration/./node_modules/lib0/binary.js","webpack://vip-real-time-collaboration/./node_modules/lib0/buffer.js","webpack://vip-real-time-collaboration/./node_modules/lib0/conditions.js","webpack://vip-real-time-collaboration/./node_modules/lib0/decoding.js","webpack://vip-real-time-collaboration/./node_modules/lib0/encoding.js","webpack://vip-real-time-collaboration/./node_modules/lib0/environment.js","webpack://vip-real-time-collaboration/./node_modules/lib0/map.js","webpack://vip-real-time-collaboration/./node_modules/lib0/math.js","webpack://vip-real-time-collaboration/./node_modules/lib0/number.js","webpack://vip-real-time-collaboration/./node_modules/lib0/storage.js","webpack://vip-real-time-collaboration/./node_modules/lib0/string.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/auth.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/awareness.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/array.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/binary.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/decoding.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/encoding.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/error.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/function.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/map.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/math.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/metric.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/number.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/object.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/observable.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/set.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/string.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/time.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/node_modules/lib0/traits.js","webpack://vip-real-time-collaboration/./node_modules/y-protocols/sync.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/array.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/binary.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/broadcastchannel.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/buffer.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/conditions.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/decoding.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/encoding.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/environment.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/error.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/function.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/map.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/math.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/metric.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/number.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/object.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/observable.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/set.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/storage.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/string.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/time.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/traits.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/node_modules/lib0/url.js","webpack://vip-real-time-collaboration/./node_modules/y-websocket/src/y-websocket.js","webpack://vip-real-time-collaboration/./src/api/crdt.ts","webpack://vip-real-time-collaboration/./src/awareness-manager.ts","webpack://vip-real-time-collaboration/./src/components/avatar.tsx","webpack://vip-real-time-collaboration/./src/components/avatars.tsx","webpack://vip-real-time-collaboration/./src/components/post-locked-modal.scss","webpack://vip-real-time-collaboration/./src/components/post-locked-modal.tsx","webpack://vip-real-time-collaboration/./src/components/rtc-overlay.scss","webpack://vip-real-time-collaboration/./src/components/rtc-overlay.tsx","webpack://vip-real-time-collaboration/./src/components/rtc-settings-panel.tsx","webpack://vip-real-time-collaboration/./src/hooks/use-block-highlighting.ts","webpack://vip-real-time-collaboration/./src/hooks/use-current-entity.ts","webpack://vip-real-time-collaboration/./src/hooks/use-frame-overlay.ts","webpack://vip-real-time-collaboration/./src/hooks/use-intercept-action-dispatch.ts","webpack://vip-real-time-collaboration/./src/hooks/use-is-disconnected.ts","webpack://vip-real-time-collaboration/./src/hooks/use-render-cursors.ts","webpack://vip-real-time-collaboration/./src/hooks/use-sorted-awareness-users.tsx","webpack://vip-real-time-collaboration/./src/hooks/use-wait-for-selector.ts","webpack://vip-real-time-collaboration/./src/provider.ts","webpack://vip-real-time-collaboration/./src/store/awareness-store.ts","webpack://vip-real-time-collaboration/./src/store/settings-store.ts","webpack://vip-real-time-collaboration/./src/utilities/browser.ts","webpack://vip-real-time-collaboration/./src/utilities/config.ts","webpack://vip-real-time-collaboration/./src/utilities/entity.ts","webpack://vip-real-time-collaboration/./src/utilities/error.ts","webpack://vip-real-time-collaboration/./src/utilities/function.ts","webpack://vip-real-time-collaboration/./src/utilities/local-storage.ts","webpack://vip-real-time-collaboration/./src/utilities/throttle.ts","webpack://vip-real-time-collaboration/./src/utilities/user-color.ts","webpack://vip-real-time-collaboration/./src/utilities/uuid.ts","webpack://vip-real-time-collaboration/./src/websocket-client.ts","webpack://vip-real-time-collaboration/./src/yjs-shim.ts","webpack://vip-real-time-collaboration/external window [\"wp\",\"apiFetch\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"blockEditor\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"blocks\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"components\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"compose\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"coreData\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"data\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"editor\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"element\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"hooks\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"i18n\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"plugins\"]","webpack://vip-real-time-collaboration/external window [\"wp\",\"primitives\"]","webpack://vip-real-time-collaboration/external window \"ReactJSXRuntime\"","webpack://vip-real-time-collaboration/webpack/bootstrap","webpack://vip-real-time-collaboration/webpack/runtime/compat get default export","webpack://vip-real-time-collaboration/webpack/runtime/define property getters","webpack://vip-real-time-collaboration/webpack/runtime/hasOwnProperty shorthand","webpack://vip-real-time-collaboration/webpack/runtime/make namespace object","webpack://vip-real-time-collaboration/./src/index.ts"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst error = /*#__PURE__*/_jsx(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsx(Path, {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12.218 5.377a.25.25 0 0 0-.436 0l-7.29 12.96a.25.25 0 0 0 .218.373h14.58a.25.25 0 0 0 .218-.372l-7.29-12.96Zm-1.743-.735c.669-1.19 2.381-1.19 3.05 0l7.29 12.96a1.75 1.75 0 0 1-1.525 2.608H4.71a1.75 1.75 0 0 1-1.525-2.608l7.29-12.96ZM12.75 17.46h-1.5v-1.5h1.5v1.5Zm-1.5-3h1.5v-5h-1.5v5Z\"\n  })\n});\nexport default error;\n//# sourceMappingURL=error.js.map","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let len = 0\n  while (true) {\n    const r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return num >>> 0 // return unsigned number!\n    }\n    /* istanbul ignore if */\n    if (len > 35) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let len = 6\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  while (true) {\n    r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return sign * (num >>> 0)\n    }\n    /* istanbul ignore if */\n    if (len > 41) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\nexport const readVarString = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = diff >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nconst verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer.\n *\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num >>>= 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * Encodes integers in the range from [-2147483648, -2147483647].\n *\n * We don't use zig-zag encoding because we want to keep the option open\n * to use the same function for BigInt and 53bit integers (doubles).\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num >>>= 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num >>>= 7\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeVarString = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && data <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport const messagePermissionDenied = 0\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\nexport const writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied)\n  encoding.writeVarString(encoder, reason)\n}\n\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n */\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder))\n  }\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : any} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : never} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n\n/**\n * This function bubble-sorts a single item to the correct position. The sort happens in-place and\n * might be useful to ensure that a single item is at the correct position in an otherwise sorted\n * array.\n *\n * @example\n *  const arr = [3, 2, 5]\n *  arr.sort((a, b) => a - b)\n *  arr // => [2, 3, 5]\n *  arr.splice(1, 0, 7)\n *  array.bubbleSortItem(arr, 1, (a, b) => a - b)\n *  arr // => [2, 3, 5, 7]\n *\n * @template T\n * @param {Array<T>} arr\n * @param {number} i\n * @param {(a:T,b:T) => number} compareFn\n */\nexport const bubblesortItem = (arr, i, compareFn) => {\n  const n = arr[i]\n  let j = i\n  // try to sort to the right\n  while (j + 1 < arr.length && compareFn(n, arr[j + 1]) > 0) {\n    arr[j] = arr[j + 1]\n    arr[++j] = n\n  }\n  if (i === j && j > 0) { // no change yet\n    // sort to the left\n    while (j > 0 && compareFn(arr[j - 1], n) > 0) {\n      arr[j] = arr[j - 1]\n      arr[--j] = n\n    }\n  }\n  return j\n}\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\nimport * as traits from './traits.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a === b) {\n    return true\n  }\n  if (a == null || b == null || a.constructor !== b.constructor) {\n    return false\n  }\n  if (a[traits.EqualityTraitSymbol] != null) {\n    return a[traits.EqualityTraitSymbol](b)\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nimport * as math from './math.js'\n\nexport const yotta = 1e24\nexport const zetta = 1e21\nexport const exa = 1e18\nexport const peta = 1e15\nexport const tera = 1e12\nexport const giga = 1e9\nexport const mega = 1e6\nexport const kilo = 1e3\nexport const hecto = 1e2\nexport const deca = 10\nexport const deci = 0.1\nexport const centi = 0.01\nexport const milli = 1e-3\nexport const micro = 1e-6\nexport const nano = 1e-9\nexport const pico = 1e-12\nexport const femto = 1e-15\nexport const atto = 1e-18\nexport const zepto = 1e-21\nexport const yocto = 1e-24\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nexport const prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n)\n  let mult = 0\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--\n    mult--\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++\n    mult++\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n}\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[key:string]: V}} obj\n * @return {Array<V>}\n */\nexport const values = Object.values\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @deprecated use object.size instead\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const size = obj => keys(obj).length\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|null|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line no-unreachable-loop\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|number|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (size(a) === size(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n\n/**\n * Make an object immutable. This hurts performance and is usually not needed if you perform good\n * coding practices.\n */\nexport const freeze = Object.freeze\n\n/**\n * Make an object and all its children immutable.\n * This *really* hurts performance and is usually not needed if you perform good coding practices.\n *\n * @template {any} T\n * @param {T} o\n * @return {Readonly<T>}\n */\nexport const deepFreeze = (o) => {\n  for (const key in o) {\n    const c = o[key]\n    if (typeof c === 'object' || typeof c === 'function') {\n      deepFreeze(o[key])\n    }\n  }\n  return freeze(o)\n}\n\n/**\n * Get object property. Create T if property is undefined and set T on object.\n *\n * @function\n * @template {object} KV\n * @template {keyof KV} [K=keyof KV]\n * @param {KV} o\n * @param {K} key\n * @param {() => KV[K]} createT\n * @return {KV[K]}\n */\nexport const setIfUndefined = (o, key, createT) => hasProperty(o, key) ? o[key] : (o[key] = createT())\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T|undefined}\n */\nexport const first = set => set.values().next().value\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n\n/**\n * Escape HTML characters &,<,>,',\" to their respective HTML entities &amp;,&lt;,&gt;,&#39;,&quot;\n *\n * @param {string} str\n */\nexport const escapeHTML = str =>\n  str.replace(/[&<>'\"]/g, r => /** @type {string} */ ({\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    \"'\": '&#39;',\n    '\"': '&quot;'\n  }[r]))\n\n/**\n * Reverse of `escapeHTML`\n *\n * @param {string} str\n */\nexport const unescapeHTML = str =>\n  str.replace(/&amp;|&lt;|&gt;|&#39;|&quot;/g, r => /** @type {string} */ ({\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&#39;': \"'\",\n    '&quot;': '\"'\n  }[r]))\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","export const EqualityTraitSymbol = Symbol('Equality')\n\n/**\n * @typedef {{ [EqualityTraitSymbol]:(other:EqualityTrait)=>boolean }} EqualityTrait\n */\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server should only reply to requests, and not initiate them.\n * Therefore it is necessary that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Does not need to be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : any} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template {ArrayLike<any>} ARR\n *\n * @param {ARR} arr\n * @param {ARR extends ArrayLike<infer S> ? ((value:S, index:number, arr:ARR) => boolean) : never} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n\n/**\n * This function bubble-sorts a single item to the correct position. The sort happens in-place and\n * might be useful to ensure that a single item is at the correct position in an otherwise sorted\n * array.\n *\n * @example\n *  const arr = [3, 2, 5]\n *  arr.sort((a, b) => a - b)\n *  arr // => [2, 3, 5]\n *  arr.splice(1, 0, 7)\n *  array.bubbleSortItem(arr, 1, (a, b) => a - b)\n *  arr // => [2, 3, 5, 7]\n *\n * @template T\n * @param {Array<T>} arr\n * @param {number} i\n * @param {(a:T,b:T) => number} compareFn\n */\nexport const bubblesortItem = (arr, i, compareFn) => {\n  const n = arr[i]\n  let j = i\n  // try to sort to the right\n  while (j + 1 < arr.length && compareFn(n, arr[j + 1]) > 0) {\n    arr[j] = arr[j + 1]\n    arr[++j] = n\n  }\n  if (i === j && j > 0) { // no change yet\n    // sort to the left\n    while (j > 0 && compareFn(arr[j - 1], n) > 0) {\n      arr[j] = arr[j - 1]\n      arr[--j] = n\n    }\n  }\n  return j\n}\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as array from './array.js'\nimport * as math from './math.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */\nexport const toBase64UrlEncoded = buf => toBase64(buf).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n\n/**\n * @param {string} base64\n */\nexport const fromBase64UrlEncoded = base64 => fromBase64(base64.replaceAll('-', '+').replaceAll('_', '/'))\n\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */\nexport const toHexString = buf => array.map(buf, b => b.toString(16).padStart(2, '0')).join('')\n\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */\nexport const fromHexString = hex => {\n  const hlen = hex.length\n  const buf = new Uint8Array(math.ceil(hlen / 2))\n  for (let i = 0; i < hlen; i += 2) {\n    buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16)\n  }\n  return buf\n}\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data =>\n  encoding.encode(encoder => encoding.writeAny(encoder, data))\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */\nexport const shiftNBitsLeft = (bs, N) => {\n  if (N === 0) return bs\n  bs = new Uint8Array(bs)\n  bs[0] <<= N\n  for (let i = 1; i < bs.length; i++) {\n    bs[i - 1] |= bs[i] >>> (8 - N)\n    bs[i] <<= N\n  }\n  return bs\n}\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module environment\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase().replaceAll('-', '_')])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {string}\n */\n/* c8 ignore next 5 */\nexport const ensureConf = (name) => {\n  const c = getConf(name)\n  if (c == null) throw new Error(`Expected configuration \"${name.toUpperCase().replaceAll('-', '_')}\"`)\n  return c\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\n/**\n * Color is enabled by default if the terminal supports it.\n *\n * Explicitly enable color using `--color` parameter\n * Disable color using `--no-color` parameter or using `NO_COLOR=1` environment variable.\n * `FORCE_COLOR=1` enables color and takes precedence over all.\n */\nexport const supportsColor = forceColor || (\n  !hasParam('--no-colors') && // @todo deprecate --no-colors\n  !hasConf('no-color') &&\n  (!isNode || process.stdout.isTTY) && (\n    !isNode ||\n    hasParam('--color') ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n  )\n)\n/* c8 ignore stop */\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\nimport * as traits from './traits.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a === b) {\n    return true\n  }\n  if (a == null || b == null || a.constructor !== b.constructor) {\n    return false\n  }\n  if (a[traits.EqualityTraitSymbol] != null) {\n    return a[traits.EqualityTraitSymbol](b)\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nimport * as math from './math.js'\n\nexport const yotta = 1e24\nexport const zetta = 1e21\nexport const exa = 1e18\nexport const peta = 1e15\nexport const tera = 1e12\nexport const giga = 1e9\nexport const mega = 1e6\nexport const kilo = 1e3\nexport const hecto = 1e2\nexport const deca = 10\nexport const deci = 0.1\nexport const centi = 0.01\nexport const milli = 1e-3\nexport const micro = 1e-6\nexport const nano = 1e-9\nexport const pico = 1e-12\nexport const femto = 1e-15\nexport const atto = 1e-18\nexport const zepto = 1e-21\nexport const yocto = 1e-24\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nexport const prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n)\n  let mult = 0\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--\n    mult--\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++\n    mult++\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n}\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[key:string]: V}} obj\n * @return {Array<V>}\n */\nexport const values = Object.values\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @deprecated use object.size instead\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const size = obj => keys(obj).length\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|null|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line no-unreachable-loop\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @template {{ [key:string|number|symbol]: any }} T\n * @param {T} obj\n * @param {(v:T[keyof T],k:keyof T)=>boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|number|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (size(a) === size(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n\n/**\n * Make an object immutable. This hurts performance and is usually not needed if you perform good\n * coding practices.\n */\nexport const freeze = Object.freeze\n\n/**\n * Make an object and all its children immutable.\n * This *really* hurts performance and is usually not needed if you perform good coding practices.\n *\n * @template {any} T\n * @param {T} o\n * @return {Readonly<T>}\n */\nexport const deepFreeze = (o) => {\n  for (const key in o) {\n    const c = o[key]\n    if (typeof c === 'object' || typeof c === 'function') {\n      deepFreeze(o[key])\n    }\n  }\n  return freeze(o)\n}\n\n/**\n * Get object property. Create T if property is undefined and set T on object.\n *\n * @function\n * @template {object} KV\n * @template {keyof KV} [K=keyof KV]\n * @param {KV} o\n * @param {K} key\n * @param {() => KV[K]} createT\n * @return {KV[K]}\n */\nexport const setIfUndefined = (o, key, createT) => hasProperty(o, key) ? o[key] : (o[key] = createT())\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T|undefined}\n */\nexport const first = set => set.values().next().value\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n\n/**\n * Escape HTML characters &,<,>,',\" to their respective HTML entities &amp;,&lt;,&gt;,&#39;,&quot;\n *\n * @param {string} str\n */\nexport const escapeHTML = str =>\n  str.replace(/[&<>'\"]/g, r => /** @type {string} */ ({\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    \"'\": '&#39;',\n    '\"': '&quot;'\n  }[r]))\n\n/**\n * Reverse of `escapeHTML`\n *\n * @param {string} str\n */\nexport const unescapeHTML = str =>\n  str.replace(/&amp;|&lt;|&gt;|&#39;|&quot;/g, r => /** @type {string} */ ({\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&#39;': \"'\",\n    '&quot;': '\"'\n  }[r]))\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","export const EqualityTraitSymbol = Symbol('Equality')\n\n/**\n * @typedef {{ [EqualityTraitSymbol]:(other:EqualityTrait)=>boolean }} EqualityTrait\n */\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","/**\n * @module provider/websocket\n */\n\n/* eslint-env browser */\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as bc from 'lib0/broadcastchannel'\nimport * as time from 'lib0/time'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport * as authProtocol from 'y-protocols/auth'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport { ObservableV2 } from 'lib0/observable'\nimport * as math from 'lib0/math'\nimport * as url from 'lib0/url'\nimport * as env from 'lib0/environment'\n\nexport const messageSync = 0\nexport const messageQueryAwareness = 3\nexport const messageAwareness = 1\nexport const messageAuth = 2\n\n/**\n *                       encoder,          decoder,          provider,          emitSynced, messageType\n * @type {Array<function(encoding.Encoder, decoding.Decoder, WebsocketProvider, boolean,    number):void>}\n */\nconst messageHandlers = []\n\nmessageHandlers[messageSync] = (\n  encoder,\n  decoder,\n  provider,\n  emitSynced,\n  _messageType\n) => {\n  encoding.writeVarUint(encoder, messageSync)\n  const syncMessageType = syncProtocol.readSyncMessage(\n    decoder,\n    encoder,\n    provider.doc,\n    provider\n  )\n  if (\n    emitSynced && syncMessageType === syncProtocol.messageYjsSyncStep2 &&\n    !provider.synced\n  ) {\n    provider.synced = true\n  }\n}\n\nmessageHandlers[messageQueryAwareness] = (\n  encoder,\n  _decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  encoding.writeVarUint(encoder, messageAwareness)\n  encoding.writeVarUint8Array(\n    encoder,\n    awarenessProtocol.encodeAwarenessUpdate(\n      provider.awareness,\n      Array.from(provider.awareness.getStates().keys())\n    )\n  )\n}\n\nmessageHandlers[messageAwareness] = (\n  _encoder,\n  decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  awarenessProtocol.applyAwarenessUpdate(\n    provider.awareness,\n    decoding.readVarUint8Array(decoder),\n    provider\n  )\n}\n\nmessageHandlers[messageAuth] = (\n  _encoder,\n  decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  authProtocol.readAuthMessage(\n    decoder,\n    provider.doc,\n    (_ydoc, reason) => permissionDeniedHandler(provider, reason)\n  )\n}\n\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000\n\n/**\n * @param {WebsocketProvider} provider\n * @param {string} reason\n */\nconst permissionDeniedHandler = (provider, reason) =>\n  console.warn(`Permission denied to access ${provider.url}.\\n${reason}`)\n\n/**\n * @param {WebsocketProvider} provider\n * @param {Uint8Array} buf\n * @param {boolean} emitSynced\n * @return {encoding.Encoder}\n */\nconst readMessage = (provider, buf, emitSynced) => {\n  const decoder = decoding.createDecoder(buf)\n  const encoder = encoding.createEncoder()\n  const messageType = decoding.readVarUint(decoder)\n  const messageHandler = provider.messageHandlers[messageType]\n  if (/** @type {any} */ (messageHandler)) {\n    messageHandler(encoder, decoder, provider, emitSynced, messageType)\n  } else {\n    console.error('Unable to compute message')\n  }\n  return encoder\n}\n\n/**\n * Outsource this function so that a new websocket connection is created immediately.\n * I suspect that the `ws.onclose` event is not always fired if there are network issues.\n *\n * @param {WebsocketProvider} provider\n * @param {WebSocket} ws\n * @param {CloseEvent | null} event\n */\nconst closeWebsocketConnection = (provider, ws, event) => {\n  if (ws === provider.ws) {\n    provider.emit('connection-close', [event, provider])\n    provider.ws = null\n    ws.close()\n    provider.wsconnecting = false\n    if (provider.wsconnected) {\n      provider.wsconnected = false\n      provider.synced = false\n      // update awareness (all users except local left)\n      awarenessProtocol.removeAwarenessStates(\n        provider.awareness,\n        Array.from(provider.awareness.getStates().keys()).filter((client) =>\n          client !== provider.doc.clientID\n        ),\n        provider\n      )\n      provider.emit('status', [{\n        status: 'disconnected'\n      }])\n    } else {\n      provider.wsUnsuccessfulReconnects++\n    }\n    // Start with no reconnect timeout and increase timeout by\n    // using exponential backoff starting with 100ms\n    setTimeout(\n      setupWS,\n      math.min(\n        math.pow(2, provider.wsUnsuccessfulReconnects) * 100,\n        provider.maxBackoffTime\n      ),\n      provider\n    )\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n */\nconst setupWS = (provider) => {\n  if (provider.shouldConnect && provider.ws === null) {\n    const websocket = new provider._WS(provider.url, provider.protocols)\n    websocket.binaryType = 'arraybuffer'\n    provider.ws = websocket\n    provider.wsconnecting = true\n    provider.wsconnected = false\n    provider.synced = false\n\n    websocket.onmessage = (event) => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      const encoder = readMessage(provider, new Uint8Array(event.data), true)\n      if (encoding.length(encoder) > 1) {\n        websocket.send(encoding.toUint8Array(encoder))\n      }\n    }\n    websocket.onerror = (event) => {\n      provider.emit('connection-error', [event, provider])\n    }\n    websocket.onclose = (event) => {\n      closeWebsocketConnection(provider, websocket, event)\n    }\n    websocket.onopen = () => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      provider.wsconnecting = false\n      provider.wsconnected = true\n      provider.wsUnsuccessfulReconnects = 0\n      provider.emit('status', [{\n        status: 'connected'\n      }])\n      // always send sync step 1 when connected\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeSyncStep1(encoder, provider.doc)\n      websocket.send(encoding.toUint8Array(encoder))\n      // broadcast local awareness state\n      if (provider.awareness.getLocalState() !== null) {\n        const encoderAwarenessState = encoding.createEncoder()\n        encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n        encoding.writeVarUint8Array(\n          encoderAwarenessState,\n          awarenessProtocol.encodeAwarenessUpdate(provider.awareness, [\n            provider.doc.clientID\n          ])\n        )\n        websocket.send(encoding.toUint8Array(encoderAwarenessState))\n      }\n    }\n    provider.emit('status', [{\n      status: 'connecting'\n    }])\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n * @param {ArrayBuffer} buf\n */\nconst broadcastMessage = (provider, buf) => {\n  const ws = provider.ws\n  if (provider.wsconnected && ws && ws.readyState === ws.OPEN) {\n    ws.send(buf)\n  }\n  if (provider.bcconnected) {\n    bc.publish(provider.bcChannel, buf, provider)\n  }\n}\n\n/**\n * Websocket Provider for Yjs. Creates a websocket connection to sync the shared document.\n * The document name is attached to the provided url. I.e. the following example\n * creates a websocket connection to http://localhost:1234/my-document-name\n *\n * @example\n *   import * as Y from 'yjs'\n *   import { WebsocketProvider } from 'y-websocket'\n *   const doc = new Y.Doc()\n *   const provider = new WebsocketProvider('http://localhost:1234', 'my-document-name', doc)\n *\n * @extends {ObservableV2<{ 'connection-close': (event: CloseEvent | null,  provider: WebsocketProvider) => any, 'status': (event: { status: 'connected' | 'disconnected' | 'connecting' }) => any, 'connection-error': (event: Event, provider: WebsocketProvider) => any, 'sync': (state: boolean) => any }>}\n */\nexport class WebsocketProvider extends ObservableV2 {\n  /**\n   * @param {string} serverUrl\n   * @param {string} roomname\n   * @param {Y.Doc} doc\n   * @param {object} opts\n   * @param {boolean} [opts.connect]\n   * @param {awarenessProtocol.Awareness} [opts.awareness]\n   * @param {Object<string,string>} [opts.params] specify url parameters\n   * @param {Array<string>} [opts.protocols] specify websocket protocols\n   * @param {typeof WebSocket} [opts.WebSocketPolyfill] Optionall provide a WebSocket polyfill\n   * @param {number} [opts.resyncInterval] Request server state every `resyncInterval` milliseconds\n   * @param {number} [opts.maxBackoffTime] Maximum amount of time to wait before trying to reconnect (we try to reconnect using exponential backoff)\n   * @param {boolean} [opts.disableBc] Disable cross-tab BroadcastChannel communication\n   */\n  constructor (serverUrl, roomname, doc, {\n    connect = true,\n    awareness = new awarenessProtocol.Awareness(doc),\n    params = {},\n    protocols = [],\n    WebSocketPolyfill = WebSocket,\n    resyncInterval = -1,\n    maxBackoffTime = 2500,\n    disableBc = false\n  } = {}) {\n    super()\n    // ensure that serverUrl does not end with /\n    while (serverUrl[serverUrl.length - 1] === '/') {\n      serverUrl = serverUrl.slice(0, serverUrl.length - 1)\n    }\n    this.serverUrl = serverUrl\n    this.bcChannel = serverUrl + '/' + roomname\n    this.maxBackoffTime = maxBackoffTime\n    /**\n     * The specified url parameters. This can be safely updated. The changed parameters will be used\n     * when a new connection is established.\n     * @type {Object<string,string>}\n     */\n    this.params = params\n    this.protocols = protocols\n    this.roomname = roomname\n    this.doc = doc\n    this._WS = WebSocketPolyfill\n    this.awareness = awareness\n    this.wsconnected = false\n    this.wsconnecting = false\n    this.bcconnected = false\n    this.disableBc = disableBc\n    this.wsUnsuccessfulReconnects = 0\n    this.messageHandlers = messageHandlers.slice()\n    /**\n     * @type {boolean}\n     */\n    this._synced = false\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null\n    this.wsLastMessageReceived = 0\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = connect\n\n    /**\n     * @type {number}\n     */\n    this._resyncInterval = 0\n    if (resyncInterval > 0) {\n      this._resyncInterval = /** @type {any} */ (setInterval(() => {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n          // resend sync step 1\n          const encoder = encoding.createEncoder()\n          encoding.writeVarUint(encoder, messageSync)\n          syncProtocol.writeSyncStep1(encoder, doc)\n          this.ws.send(encoding.toUint8Array(encoder))\n        }\n      }, resyncInterval))\n    }\n\n    /**\n     * @param {ArrayBuffer} data\n     * @param {any} origin\n     */\n    this._bcSubscriber = (data, origin) => {\n      if (origin !== this) {\n        const encoder = readMessage(this, new Uint8Array(data), false)\n        if (encoding.length(encoder) > 1) {\n          bc.publish(this.bcChannel, encoding.toUint8Array(encoder), this)\n        }\n      }\n    }\n    /**\n     * Listens to Yjs updates and sends them to remote peers (ws and broadcastchannel)\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._updateHandler = (update, origin) => {\n      if (origin !== this) {\n        const encoder = encoding.createEncoder()\n        encoding.writeVarUint(encoder, messageSync)\n        syncProtocol.writeUpdate(encoder, update)\n        broadcastMessage(this, encoding.toUint8Array(encoder))\n      }\n    }\n    this.doc.on('update', this._updateHandler)\n    /**\n     * @param {any} changed\n     * @param {any} _origin\n     */\n    this._awarenessUpdateHandler = ({ added, updated, removed }, _origin) => {\n      const changedClients = added.concat(updated).concat(removed)\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageAwareness)\n      encoding.writeVarUint8Array(\n        encoder,\n        awarenessProtocol.encodeAwarenessUpdate(awareness, changedClients)\n      )\n      broadcastMessage(this, encoding.toUint8Array(encoder))\n    }\n    this._exitHandler = () => {\n      awarenessProtocol.removeAwarenessStates(\n        this.awareness,\n        [doc.clientID],\n        'app closed'\n      )\n    }\n    if (env.isNode && typeof process !== 'undefined') {\n      process.on('exit', this._exitHandler)\n    }\n    awareness.on('update', this._awarenessUpdateHandler)\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      if (\n        this.wsconnected &&\n        messageReconnectTimeout <\n          time.getUnixTime() - this.wsLastMessageReceived\n      ) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        closeWebsocketConnection(this, /** @type {WebSocket} */ (this.ws), null)\n      }\n    }, messageReconnectTimeout / 10))\n    if (connect) {\n      this.connect()\n    }\n  }\n\n  get url () {\n    const encodedParams = url.encodeQueryParams(this.params)\n    return this.serverUrl + '/' + this.roomname +\n      (encodedParams.length === 0 ? '' : '?' + encodedParams)\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get synced () {\n    return this._synced\n  }\n\n  set synced (state) {\n    if (this._synced !== state) {\n      this._synced = state\n      // @ts-ignore\n      this.emit('synced', [state])\n      this.emit('sync', [state])\n    }\n  }\n\n  destroy () {\n    if (this._resyncInterval !== 0) {\n      clearInterval(this._resyncInterval)\n    }\n    clearInterval(this._checkInterval)\n    this.disconnect()\n    if (env.isNode && typeof process !== 'undefined') {\n      process.off('exit', this._exitHandler)\n    }\n    this.awareness.off('update', this._awarenessUpdateHandler)\n    this.doc.off('update', this._updateHandler)\n    super.destroy()\n  }\n\n  connectBc () {\n    if (this.disableBc) {\n      return\n    }\n    if (!this.bcconnected) {\n      bc.subscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = true\n    }\n    // send sync step1 to bc\n    // write sync step 1\n    const encoderSync = encoding.createEncoder()\n    encoding.writeVarUint(encoderSync, messageSync)\n    syncProtocol.writeSyncStep1(encoderSync, this.doc)\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderSync), this)\n    // broadcast local state\n    const encoderState = encoding.createEncoder()\n    encoding.writeVarUint(encoderState, messageSync)\n    syncProtocol.writeSyncStep2(encoderState, this.doc)\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderState), this)\n    // write queryAwareness\n    const encoderAwarenessQuery = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness)\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessQuery),\n      this\n    )\n    // broadcast local awareness state\n    const encoderAwarenessState = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n    encoding.writeVarUint8Array(\n      encoderAwarenessState,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ])\n    )\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessState),\n      this\n    )\n  }\n\n  disconnectBc () {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, messageAwareness)\n    encoding.writeVarUint8Array(\n      encoder,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ], new Map())\n    )\n    broadcastMessage(this, encoding.toUint8Array(encoder))\n    if (this.bcconnected) {\n      bc.unsubscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = false\n    }\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    this.disconnectBc()\n    if (this.ws !== null) {\n      closeWebsocketConnection(this, this.ws, null)\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true\n    if (!this.wsconnected && this.ws === null) {\n      setupWS(this)\n      this.connectBc()\n    }\n  }\n}\n","/**\n * External dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\nimport * as buffer from 'lib0/buffer';\nimport * as Y from 'yjs';\n\nimport { getCrdtDocVersion } from '../utilities/config';\n\nimport type { CRDTDoc } from '@wordpress/sync';\n\ninterface GetCrdtResponse {\n\tcrdtDoc: string | null;\n\tsuccess: boolean;\n}\n\ninterface UpdateCrdtResponse {\n\tcrdtDoc?: string;\n\tsuccess: boolean;\n}\n\nconst CRDT_DOC_VERSION = getCrdtDocVersion();\nconst CRDT_REST_API_BASE = '/vip-rtc/v1/crdt';\n\nfunction serializeCrdtDoc( crdtDoc: CRDTDoc ): string {\n\treturn buffer.toBase64( Y.encodeStateAsUpdateV2( crdtDoc ) );\n}\n\nfunction deserializeCrdtDoc( serializedCrdtDoc: string ): CRDTDoc | null {\n\tconst ydoc = new Y.Doc();\n\tconst yupdate = buffer.fromBase64( serializedCrdtDoc );\n\tY.applyUpdateV2( ydoc, yupdate );\n\n\tydoc.clientID = Math.floor( Math.random() * 1000000000 );\n\n\treturn ydoc;\n}\n\nexport async function getCrdtDoc(\n\tsyncObjectType: string,\n\tsyncObjectId: string\n): Promise< CRDTDoc | null > {\n\tconst queryParams = new URLSearchParams( {\n\t\tcrdtVersion: CRDT_DOC_VERSION.toString(),\n\t\tsyncObjectType,\n\t\tsyncObjectId,\n\t} );\n\tconst path = `${ CRDT_REST_API_BASE }?${ queryParams.toString() }`;\n\n\ttry {\n\t\tconst data = await apiFetch< GetCrdtResponse >( {\n\t\t\tmethod: 'GET',\n\t\t\tpath,\n\t\t} );\n\n\t\tif ( ! data.crdtDoc ) {\n\t\t\tif ( true !== data.success ) {\n\t\t\t\tthrow new Error( __( 'Unexpected response format', 'vip-real-time-collaboration' ) );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn deserializeCrdtDoc( data.crdtDoc );\n\t} catch ( error: unknown ) {\n\t\tconsole.debug(\n\t\t\t`Error fetching CRDT document for ${ syncObjectType }:${ syncObjectId }`,\n\t\t\terror instanceof Error ? error.message : String( error )\n\t\t);\n\t}\n\n\treturn null;\n}\n\nexport async function updateCrdtDoc(\n\tsyncObjectType: string,\n\tsyncObjectId: string,\n\tcrdtDoc: CRDTDoc,\n\tisInitialUpdate = false\n): Promise< CRDTDoc > {\n\ttry {\n\t\tconst data = await apiFetch< UpdateCrdtResponse >( {\n\t\t\tdata: {\n\t\t\t\tcrdtDoc: serializeCrdtDoc( crdtDoc ),\n\t\t\t\tcrdtVersion: CRDT_DOC_VERSION,\n\t\t\t\tisInitialUpdate,\n\t\t\t\tsyncObjectType,\n\t\t\t\tsyncObjectId,\n\t\t\t},\n\t\t\tmethod: 'PUT',\n\t\t\tpath: CRDT_REST_API_BASE,\n\t\t} );\n\n\t\tif ( ! data.success ) {\n\t\t\tthrow new Error( __( 'Unknown failure', 'vip-real-time-collaboration' ) );\n\t\t}\n\n\t\t// If the server returns a CRDT document, it indicates that our update was\n\t\t// rejected in favor of the server's version. This can happen in a race\n\t\t// condition where two peers attempt an initial update at the same time.\n\t\tif ( data.crdtDoc ) {\n\t\t\treturn deserializeCrdtDoc( data.crdtDoc ) ?? crdtDoc;\n\t\t}\n\t} catch ( error: unknown ) {\n\t\tconsole.debug(\n\t\t\t`Error updating CRDT document for ${ syncObjectType }:${ syncObjectId }`,\n\t\t\terror instanceof Error ? error.message : String( error )\n\t\t);\n\t}\n\n\treturn crdtDoc;\n}\n","/**\n * External dependencies\n */\nimport { dispatch, select, subscribe } from '@wordpress/data';\nimport { removeAwarenessStates as removeAwarenessStatesFromProtocol } from 'y-protocols/awareness';\n\n/**\n * Internal dependencies\n */\nimport { SelectionType } from '@/hooks/use-render-cursors';\nimport {\n\ttype UserState,\n\ttype WordPressUserInfo,\n\tstore as awarenessStore,\n} from '@/store/awareness-store';\nimport { getBrowserName } from '@/utilities/browser';\nimport { REMOVAL_DELAY_IN_MS } from '@/utilities/config';\nimport { getCurrentUserInfo } from '@/utilities/entity';\nimport { getNewUserColor } from '@/utilities/user-color';\n\nimport type { EntityID, AwarenessStateChange } from '@wordpress/sync';\nimport type { Awareness } from 'y-protocols/awareness';\n\nexport class AwarenessManager {\n\tprivate awarenessInstances: Map< EntityID, Awareness > = new Map();\n\tprivate currentWordPressUserInfoPromise: Promise< WordPressUserInfo >;\n\n\tprivate static __instance: AwarenessManager;\n\n\tprivate constructor() {\n\t\tthis.currentWordPressUserInfoPromise = getCurrentUserInfo();\n\n\t\t// Remove awareness states when the window is closed or refreshed.\n\t\twindow.addEventListener( 'beforeunload', () => {\n\t\t\tthis.awarenessInstances.forEach( awareness => {\n\t\t\t\tremoveAwarenessStatesFromProtocol(\n\t\t\t\t\tawareness,\n\t\t\t\t\t[ awareness.clientID ],\n\t\t\t\t\t'removeAwarenessStates'\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t}\n\n\tprivate static get instance(): AwarenessManager {\n\t\tif ( ! AwarenessManager.__instance ) {\n\t\t\tAwarenessManager.__instance = new AwarenessManager();\n\t\t}\n\n\t\treturn AwarenessManager.__instance;\n\t}\n\n\tpublic static async bootstrap( entityId: EntityID, awareness: Awareness ): Promise< void > {\n\t\tconst manager = AwarenessManager.instance;\n\n\t\t// Record the awareness instance.\n\t\tmanager.awarenessInstances.set( entityId, awareness );\n\n\t\t// Subscribe to changes in the awareness instance and our store.\n\t\tawait manager.subscribeToUserChanges( awareness );\n\t\tmanager.subscribeToSelectionChanges( awareness );\n\t}\n\n\tprivate async getCurrentUserState( awareness: Awareness ): Promise< UserState > {\n\t\tconst states = ( awareness.getStates() as Map< number, UserState > ) ?? new Map();\n\t\tconst otherUserColors = Array.from( states.values() )\n\t\t\t.filter( userState => ! userState.isMe )\n\t\t\t.map( userState => userState.color )\n\t\t\t.filter( Boolean );\n\n\t\tconst color = getNewUserColor( otherUserColors );\n\t\tconst userInfo = await this.currentWordPressUserInfoPromise;\n\n\t\treturn {\n\t\t\t...userInfo,\n\t\t\tbrowserType: getBrowserName(),\n\t\t\tclientId: awareness.clientID,\n\t\t\tcolor,\n\t\t\teditorState: {\n\t\t\t\tselection: {\n\t\t\t\t\ttype: SelectionType.None,\n\t\t\t\t},\n\t\t\t},\n\t\t\tisConnected: true,\n\t\t\tisMe: true,\n\t\t};\n\t}\n\n\t/*\n\t * Get the states from an awareness document.\n\t */\n\tprivate getStates( awareness: Awareness ): Map< number, UserState > {\n\t\treturn awareness.getStates() as Map< number, UserState >;\n\t}\n\n\tpublic static resetAfterDisconnect(): void {\n\t\tconst manager = AwarenessManager.instance;\n\t\tconst { removeUser, upsertUser } = dispatch( awarenessStore );\n\t\tconst { getActiveClientIds } = select( awarenessStore );\n\n\t\tconst clientIdsFromStore = new Set< number >( getActiveClientIds() );\n\t\tconst clientIdsFromAwareness = new Set< number >();\n\n\t\tmanager.awarenessInstances.forEach( awareness => {\n\t\t\tmanager.getStates( awareness ).forEach( ( userState, clientId ) => {\n\t\t\t\tvoid upsertUser( clientId, userState );\n\t\t\t\tclientIdsFromAwareness.add( clientId );\n\t\t\t} );\n\t\t} );\n\n\t\t// Remove users that are in the store but not in the awareness instances.\n\t\tclientIdsFromStore.forEach( clientId => {\n\t\t\tif ( ! clientIdsFromAwareness.has( clientId ) ) {\n\t\t\t\tvoid removeUser( clientId );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Set a local state field on an awareness document.\n\t */\n\tprivate setLocalStateField< FieldName extends keyof UserState >(\n\t\tawareness: Awareness,\n\t\tfield: FieldName,\n\t\tvalue: UserState[ FieldName ]\n\t): void {\n\t\tawareness.setLocalStateField( field, value );\n\t}\n\n\tprivate subscribeToSelectionChanges( awareness: Awareness ): void {\n\t\tconst { getCurrentUserSelection } = select( awarenessStore );\n\n\t\tlet currentSelection = getCurrentUserSelection();\n\t\tsubscribe( () => {\n\t\t\tconst newSelection = getCurrentUserSelection();\n\t\t\tif ( newSelection !== currentSelection ) {\n\t\t\t\tcurrentSelection = newSelection;\n\t\t\t\tthis.setLocalStateField( awareness, 'editorState', {\n\t\t\t\t\tselection: currentSelection,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\tprivate async subscribeToUserChanges( awareness: Awareness ): Promise< void > {\n\t\tconst currentUserState = await this.getCurrentUserState( awareness );\n\n\t\tawareness.setLocalState( currentUserState );\n\n\t\tconst userRemovalTimeouts = new Map< number, NodeJS.Timeout >();\n\t\tconst { patchUser, removeUser, upsertUser } = dispatch( awarenessStore );\n\n\t\tconst userStates = this.getStates( awareness );\n\t\tuserStates.forEach( ( userState, clientId ) => {\n\t\t\tvoid upsertUser( clientId, userState );\n\t\t} );\n\n\t\t// NOTE: Our awareness store is currently global and has no ability to scope\n\t\t// to specific entities.\n\n\t\tawareness.on( 'change', ( { added, removed, updated }: AwarenessStateChange ) => {\n\t\t\tconst updatedUserStates = this.getStates( awareness );\n\n\t\t\t[ ...added, ...updated ].forEach( id => {\n\t\t\t\tconst userState = updatedUserStates.get( id );\n\n\t\t\t\tif ( userRemovalTimeouts.has( id ) ) {\n\t\t\t\t\tclearTimeout( userRemovalTimeouts.get( id ) );\n\t\t\t\t}\n\n\t\t\t\tif ( userState ) {\n\t\t\t\t\tvoid upsertUser( id, {\n\t\t\t\t\t\t...userState,\n\t\t\t\t\t\tisConnected: true,\n\t\t\t\t\t\tisMe: userState.clientId === currentUserState.clientId,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tremoved.forEach( id => {\n\t\t\t\t// When a user is removed, we don't want to immediately remove their\n\t\t\t\t// state. Instead, we set a timeout to remove it after a short delay.\n\t\t\t\tif ( userRemovalTimeouts.has( id ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvoid patchUser( id, {\n\t\t\t\t\tisConnected: false,\n\t\t\t\t} );\n\n\t\t\t\tuserRemovalTimeouts.set(\n\t\t\t\t\tid,\n\t\t\t\t\tsetTimeout( () => void removeUser( id ), REMOVAL_DELAY_IN_MS )\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t}\n}\n","import { UserState } from '@/store/awareness-store';\n\n/**\n * Renders a circular avatar bubble for a user with an optional border.\n */\nexport function Avatar( {\n\tuserState,\n\tshowUserColorBorder,\n}: {\n\tuserState: UserState;\n\tshowUserColorBorder?: boolean;\n} ) {\n\tconst avatarUrl =\n\t\tuserState.avatar_urls[ 24 ] || userState.avatar_urls[ 48 ] || userState.avatar_urls[ 96 ];\n\n\tconst style = {\n\t\tborder: showUserColorBorder === true ? `2px solid ${ userState.color }` : undefined,\n\t\topacity: userState.isConnected ? 1 : 0.5,\n\t};\n\n\treturn (\n\t\t<div className=\"vip-real-time-collaboration-avatar\">\n\t\t\t<img src={ avatarUrl } alt={ userState.name } title={ userState.name } style={ style } />\n\t\t</div>\n\t);\n}\n","import { Avatar } from './avatar';\nimport { useSortedAwarenessUsers } from '@/hooks/use-sorted-awareness-users';\n\n/**\n * Renders a list of avatars for the active users, with a maximum of 3 visible avatars.\n */\nexport function AwarenessAvatars() {\n\tconst activeUsers = useSortedAwarenessUsers();\n\n\tif ( activeUsers.length <= 1 ) {\n\t\t// Hide avatars when there's only one user.\n\t\t// This also avoids showing a single user when navigating away from the editor\n\t\t// after the connection is closed but before the page reloads.\n\t\treturn null;\n\t}\n\n\tconst visibleUsers = activeUsers.slice( 0, 3 );\n\tconst remainingUsers = activeUsers.slice( 3 );\n\tconst remainingUsersText = remainingUsers.map( userState => userState.name ).join( ', ' );\n\n\treturn (\n\t\t<div className=\"vip-real-time-collaboration-avatars\">\n\t\t\t{ visibleUsers.map( userState => (\n\t\t\t\t<Avatar key={ userState.clientId } userState={ userState } showUserColorBorder={ true } />\n\t\t\t) ) }\n\n\t\t\t{ remainingUsers.length > 0 && (\n\t\t\t\t<div className=\"vip-real-time-collaboration-avatar-remaining\" title={ remainingUsersText }>\n\t\t\t\t\t+{ remainingUsers.length }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","import {\n\tModal,\n\tButton,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tIcon,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { error } from '@wordpress/icons';\n\nimport { useIsDisconnected } from '@/hooks/use-is-disconnected';\nimport '@/components/post-locked-modal.scss';\n\nexport function PostLockedModal() {\n\tconst isDisconnected = useIsDisconnected();\n\n\tif ( ! isDisconnected ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\t__experimentalHideHeader={ true }\n\t\t\ticon={ error }\n\t\t\tisDismissible={ false }\n\t\t\tisFullScreen={ true }\n\t\t\tonRequestClose={ () => {} }\n\t\t\tshouldCloseOnClickOutside={ false }\n\t\t\tshouldCloseOnEsc={ false }\n\t\t>\n\t\t\t<div className=\"vip-rtc-post-locked-modal__container\">\n\t\t\t\t<VStack alignment=\"center\" justify=\"center\" spacing={ 2 }>\n\t\t\t\t\t<Icon fill=\"#ccc\" icon={ error } size={ 64 } />\n\t\t\t\t\t<h1>{ __( 'Disconnected', 'vip-real-time-collaboration' ) }</h1>\n\t\t\t\t\t<p className=\"vip-rtc-post-locked-modal__p\">\n\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t'You are currently disconnected from the collaborative editing server.',\n\t\t\t\t\t\t\t'vip-real-time-collaboration'\n\t\t\t\t\t\t) }{ ' ' }\n\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t'Editing is temporarily disabled to prevent conflicts with other users.',\n\t\t\t\t\t\t\t'vip-real-time-collaboration'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</p>\n\t\t\t\t\t<HStack spacing={ 2 } justify=\"center\">\n\t\t\t\t\t\t<Button href=\"edit.php\" isDestructive={ true } variant=\"secondary\">\n\t\t\t\t\t\t\t{ __( 'Edit another post', 'vip-real-time-collaboration' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button isDestructive={ true } onClick={ () => location.reload() } variant=\"secondary\">\n\t\t\t\t\t\t\t{ __( 'Refresh', 'vip-real-time-collaboration' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","import { useSelect } from '@wordpress/data';\nimport { useRef } from '@wordpress/element';\n\nimport { AwarenessAvatars } from '@/components/avatars';\nimport { PostLockedModal } from '@/components/post-locked-modal';\nimport { useBlockHighlighting } from '@/hooks/use-block-highlighting';\nimport { useRenderCursors } from '@/hooks/use-render-cursors';\nimport { store as rtcSettingsStore, SettingsStoreSelectors } from '@/store/settings-store';\nimport '@/components/rtc-overlay.scss';\n\ninterface RTCOverlayProps {\n\tiframeDocument: Document;\n}\n\n/**\n * This component is responsible for rendering awareness components within the editor iframe.\n */\nexport function RTCOverlay( { iframeDocument }: RTCOverlayProps ) {\n\tconst overlayRef = useRef< HTMLDivElement | null >( null );\n\n\tconst isAvatarsEnabled = useSelect< SettingsStoreSelectors, boolean >( select => {\n\t\treturn select( rtcSettingsStore ).isAwarenessAvatarsEnabled();\n\t} );\n\n\tuseBlockHighlighting( iframeDocument );\n\tuseRenderCursors( overlayRef, iframeDocument );\n\n\treturn (\n\t\t<>\n\t\t\t{ /* This is a full overlay that covers the entire iframe document.\n\t\t\t\tGood for scrollable elements like cursor indicators */ }\n\t\t\t<div className=\"vip-real-time-collaboration-overlay-full\" ref={ overlayRef } />\n\n\t\t\t{ /* This is a fixed overlay that covers the iframe window.\n\t\t\t\tGood for floating elements like awareness avatars */ }\n\t\t\t<div className=\"vip-real-time-collaboration-overlay-fixed\">\n\t\t\t\t{ isAvatarsEnabled && <AwarenessAvatars /> }\n\t\t\t</div>\n\n\t\t\t<PostLockedModal />\n\t\t</>\n\t);\n}\n","import { ToggleControl, __experimentalText as Text, FlexItem, Flex } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { PluginDocumentSettingPanel } from '@wordpress/editor';\nimport { __ } from '@wordpress/i18n';\n\nimport { Avatar } from './avatar';\nimport {\n\tstore as rtcSettingsStore,\n\tSettingsStoreActions,\n\ttype SettingsStoreSelectors,\n} from '../store/settings-store';\nimport { useOverlayFrame } from '@/hooks/use-frame-overlay';\nimport { useSortedAwarenessUsers } from '@/hooks/use-sorted-awareness-users';\n\nexport function RTCSettingsPanel() {\n\tconst { isAvatarsEnabled, isHighlightsEnabled, isCursorsEnabled } = useSelect<\n\t\tSettingsStoreSelectors,\n\t\t{ isAvatarsEnabled: boolean; isHighlightsEnabled: boolean; isCursorsEnabled: boolean }\n\t>( select => {\n\t\treturn {\n\t\t\tisAvatarsEnabled: select( rtcSettingsStore ).isAwarenessAvatarsEnabled(),\n\t\t\tisHighlightsEnabled: select( rtcSettingsStore ).isAwarenessHighlightsEnabled(),\n\t\t\tisCursorsEnabled: select( rtcSettingsStore ).isAwarenessCursorsEnabled(),\n\t\t};\n\t} );\n\n\tconst { setAwarenessAvatarsEnabled, setAwarenessHighlightsEnabled, setAwarenessCursorsEnabled } =\n\t\tuseDispatch< SettingsStoreActions >( rtcSettingsStore );\n\n\t// Load the overlay frame to render awareness components.\n\tuseOverlayFrame();\n\n\tconst activeUsers = useSortedAwarenessUsers();\n\n\tconst handleToggleAvatars = ( enabled: boolean ) => {\n\t\tsetAwarenessAvatarsEnabled( enabled );\n\t};\n\n\tconst handleToggleHighlights = ( enabled: boolean ) => {\n\t\tsetAwarenessHighlightsEnabled( enabled );\n\t};\n\n\tconst handleToggleCursors = ( enabled: boolean ) => {\n\t\tsetAwarenessCursorsEnabled( enabled );\n\t};\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname=\"vip-real-time-collaboration\"\n\t\t\ttitle=\"Real-Time Collaboration\"\n\t\t\tclassName=\"vip-real-time-collaboration-settings\"\n\t\t>\n\t\t\t<div>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel=\"Enable Avatars\"\n\t\t\t\t\tchecked={ isAvatarsEnabled }\n\t\t\t\t\tonChange={ ( enabled: boolean ) => {\n\t\t\t\t\t\thandleToggleAvatars( enabled );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel=\"Enable Highlights\"\n\t\t\t\t\tchecked={ isHighlightsEnabled }\n\t\t\t\t\tonChange={ ( enabled: boolean ) => {\n\t\t\t\t\t\thandleToggleHighlights( enabled );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel=\"Enable Cursors\"\n\t\t\t\t\tchecked={ isCursorsEnabled }\n\t\t\t\t\tonChange={ ( enabled: boolean ) => {\n\t\t\t\t\t\thandleToggleCursors( enabled );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<Text style={ { marginTop: '16px', display: 'block' } }>\n\t\t\t\t{ __( 'Collaborators', 'vip-real-time-collaboration' ) }\n\t\t\t</Text>\n\n\t\t\t<Flex direction=\"column\" className=\"vip-real-time-collaboration-sidebar-users\" gap={ 0 }>\n\t\t\t\t{ activeUsers.map( userState => (\n\t\t\t\t\t<FlexItem key={ userState.clientId }>\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\tclassName=\"vip-real-time-collaboration-sidebar-user-row\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Avatar userState={ userState } showUserColorBorder={ true } />\n\t\t\t\t\t\t\t<Text>{ userState.name }</Text>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</FlexItem>\n\t\t\t\t) ) }\n\t\t\t</Flex>\n\t\t</PluginDocumentSettingPanel>\n\t);\n}\n","import { useSelect } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\nimport { SelectionType } from './use-render-cursors';\nimport { store as rtcSettingsStore, SettingsStoreSelectors } from '../store/settings-store';\nimport {\n\tAwarenessStoreSelectors,\n\tUserState,\n\tstore as awarenessStore,\n} from '@/store/awareness-store';\n\n/**\n * Custom hook for highlighting selected blocks in the editor\n * @param blockEditorDocument - Ref to the block editor document, used to directly style block elements.\n */\nexport function useBlockHighlighting( blockEditorDocument: Document | null ) {\n\tconst highlightedBlockIds = useRef< Set< string > >( new Set() );\n\tconst userStates = useSelect< AwarenessStoreSelectors, UserState[] >( select => {\n\t\treturn select( awarenessStore ).getActiveUsers();\n\t} );\n\n\tconst isEnabled = useSelect< SettingsStoreSelectors, boolean >( select => {\n\t\treturn select( rtcSettingsStore ).isAwarenessHighlightsEnabled();\n\t} );\n\n\t// Draw block highlights\n\tuseEffect( () => {\n\t\t// Don't do anything if editor is not rendered yet.\n\t\tif ( blockEditorDocument === null ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst unhighlightBlocks = ( blockIds: string[] ) => {\n\t\t\tblockIds.forEach( blockId => {\n\t\t\t\tconst blockElement = getBlockElementById( blockEditorDocument, blockId );\n\n\t\t\t\tif ( blockElement ) {\n\t\t\t\t\tblockElement.style.boxShadow = '';\n\t\t\t\t\tblockElement.style.borderRadius = '';\n\t\t\t\t}\n\n\t\t\t\thighlightedBlockIds.current.delete( blockId );\n\t\t\t} );\n\t\t};\n\n\t\tconst blocksToHighlight = userStates\n\t\t\t.map( userState => {\n\t\t\t\tif ( userState.editorState?.selection?.type === SelectionType.Cursor ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblockId: userState.editorState.selection.blockId,\n\t\t\t\t\t\tcolor: userState.color,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t} )\n\t\t\t.filter( block => block !== null );\n\n\t\tif ( ! isEnabled ) {\n\t\t\t// If the overlay is disabled, remove all highlights.\n\t\t\tunhighlightBlocks( Array.from( highlightedBlockIds.current ) );\n\t\t\treturn;\n\t\t}\n\n\t\t// Unhighlight blocks that are no longer highlighted.\n\t\tconst selectedBlockIds = blocksToHighlight.map( block => block.blockId );\n\t\tconst blocksIdsToUnhighlight = Array.from( highlightedBlockIds.current ).filter(\n\t\t\tblockId => ! selectedBlockIds.includes( blockId )\n\t\t);\n\n\t\tunhighlightBlocks( blocksIdsToUnhighlight );\n\n\t\t// Highlight blocks that are currently highlighted.\n\t\tif ( userStates.length === 1 ) {\n\t\t\t// Don't highlight anything if we're the only user.\n\t\t\treturn;\n\t\t}\n\n\t\tblocksToHighlight.forEach( blockColorPair => {\n\t\t\tconst { color, blockId } = blockColorPair;\n\t\t\tconst blockElement = getBlockElementById( blockEditorDocument, blockId );\n\n\t\t\tif ( ! blockElement ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( blockElement ) {\n\t\t\t\tblockElement.style.boxShadow = `${ color } 0 0 0 2px`;\n\t\t\t\tblockElement.style.borderRadius = '4px';\n\t\t\t\thighlightedBlockIds.current.add( blockId );\n\t\t\t}\n\t\t} );\n\t}, [ userStates, isEnabled, blockEditorDocument ] );\n}\n\nconst getBlockElementById = (\n\tblockEditorDocument: Document,\n\tblockId: string\n): HTMLElement | null => {\n\treturn blockEditorDocument.querySelector( `[data-block=\"${ blockId }\"]` );\n};\n","import { useSelect } from '@wordpress/data';\nimport { type EditorStoreSelectors, store as editorStore } from '@wordpress/editor';\n\nexport interface CurrentEntity {\n\tkind: string;\n\tname: string;\n\trecordId: number;\n}\n\nexport function useCurrentEntity(): CurrentEntity | null {\n\tconst entityKind = 'postType';\n\tconst { postId, postType } = useSelect<\n\t\tEditorStoreSelectors,\n\t\t{ postId: number | null; postType: string | null }\n\t>( select => {\n\t\tconst { getCurrentPostId, getCurrentPostType } = select( editorStore );\n\n\t\treturn {\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t} );\n\n\tif ( postId && postType ) {\n\t\treturn {\n\t\t\tkind: entityKind,\n\t\t\tname: postType,\n\t\t\trecordId: postId,\n\t\t};\n\t}\n\n\treturn null;\n}\n","import { createElement, createRoot, useEffect, useRef } from '@wordpress/element';\n\nimport { RTCOverlay } from '@/components/rtc-overlay';\nimport { useWaitForSelector } from '@/hooks/use-wait-for-selector';\n\n/**\n * This component is responsible for creating the overlay in the editor iframe, and\n * cleaning up the overlay when the component is unmounted.\n */\nexport function useOverlayFrame() {\n\tconst iframeElement = useWaitForSelector< HTMLIFrameElement >( 'iframe[name=\"editor-canvas\"]' );\n\tconst iframeOverlayRootRef = useRef< ReturnType< typeof createRoot > | null >( null );\n\tconst editorDocument = iframeElement?.contentDocument;\n\n\tuseEffect( () => {\n\t\t// When the iframe is loaded, set blockEditorDocument for modifying block editor contents.\n\t\tif ( editorDocument ) {\n\t\t\t// Remove existing overlay, if present\n\t\t\teditorDocument.querySelector( '.vip-real-time-collaboration-overlay' )?.remove();\n\n\t\t\t// Add new overlay inside the iframe\n\t\t\tconst overlayDiv = editorDocument.createElement( 'div' );\n\t\t\toverlayDiv.className = 'vip-real-time-collaboration-overlay';\n\t\t\teditorDocument.body.appendChild( overlayDiv );\n\n\t\t\t// Create React root for the iframe overlay and render components inside it\n\t\t\tconst root = createRoot( overlayDiv );\n\t\t\tiframeOverlayRootRef.current = root;\n\n\t\t\t// This is not a .tsx file, so we'll use non-JSX syntax here.\n\t\t\troot.render( createElement( RTCOverlay, { iframeDocument: editorDocument } ) );\n\t\t}\n\n\t\t// Cleanup function\n\t\treturn () => {\n\t\t\tif ( iframeOverlayRootRef.current ) {\n\t\t\t\tiframeOverlayRootRef.current.unmount();\n\t\t\t\tiframeOverlayRootRef.current = null;\n\t\t\t}\n\t\t};\n\t}, [ editorDocument ] );\n}\n","import { BlockEditorStoreDescriptor } from '@wordpress/block-editor';\nimport { use } from '@wordpress/data';\nimport { WPDataRegistry } from '@wordpress/data/build-types/registry';\nimport { useEffect } from '@wordpress/element';\n\ntype UseRegistryCallback = ( registry: WPDataRegistry ) => {\n\tdispatch: (\n\t\tnamespace: string | { name: string }\n\t) => Record< string, ( ...args: unknown[] ) => void >;\n};\n\ntype ActionOverride = {\n\tactionIntercept: ( ( ...args: unknown[] ) => void ) | false;\n\tcallback: ( originalAction: ( ...args: unknown[] ) => void, args: unknown[] ) => void;\n};\n\ntype StoreOverrides = Record< string, ActionOverride >;\n\nconst functionOverrides: Record< string, StoreOverrides > = {};\n\n/* eslint-disable security/detect-object-injection */\n// This code is called from a Gutenberg plugin context, where provided store and action names are fixed strings.\n// We've also added type checks to lower the surface area for injection attacks.\n\nexport default function useInterceptActionDispatch(\n\tstoreDescriptor: BlockEditorStoreDescriptor,\n\tactionName: string,\n\tcallback: ( originalAction: ( ...args: unknown[] ) => void, args: unknown[] ) => void\n) {\n\tif ( typeof storeDescriptor.name !== 'string' ) {\n\t\tthrow new Error( 'Invalid storeDescriptor for useInterceptActionDispatch' );\n\t}\n\n\tif ( typeof actionName !== 'string' ) {\n\t\tthrow new Error( 'Invalid actionName for useInterceptActionDispatch' );\n\t}\n\n\tconst storeName = storeDescriptor.name;\n\n\t// Create a new entry to track this function override if it doesn't exist\n\tif ( ! functionOverrides?.[ storeName ]?.[ actionName ] ) {\n\t\tif ( ! functionOverrides?.[ storeName ] ) {\n\t\t\tfunctionOverrides[ storeName ] = {};\n\t\t}\n\n\t\t// Registy override for this action.\n\t\t// The purpose of `actionIntercept` is to provide a single unchanging reference to interception logic.\n\t\t// Without this, each time useInterceptActionDispatch() is called we will create a new dispatch override and\n\t\t// trigger rerenders of components that use dispatch functions as dependencies.\n\t\t// `actionIntercept` will be set during dispatch registration after we have access to the original action.\n\t\t//\n\t\t// The `callback` key is used to store the actual callback function. When this changes we update it a new\n\t\t// value with useEffect below and leave actionIntercept unchanged, making dispatch dependencies happy.\n\t\t// This allows action intercepts with changing callbacks to work as expected.\n\t\tfunctionOverrides[ storeName ][ actionName ] = {\n\t\t\tactionIntercept: false,\n\t\t\tcallback,\n\t\t};\n\t}\n\n\tuseEffect( () => {\n\t\t// When a new callback is provided, update the stored dynamic callback\n\t\tif ( functionOverrides?.[ storeName ]?.[ actionName ] ) {\n\t\t\tfunctionOverrides[ storeName ][ actionName ].callback = callback;\n\t\t}\n\t}, [ storeName, actionName, callback ] );\n\n\t( use as ( callback: UseRegistryCallback ) => void )( ( registry: WPDataRegistry ) => ( {\n\t\tdispatch: ( namespace: string | { name: string } ) => {\n\t\t\tconst namespaceName = typeof namespace === 'string' ? namespace : namespace.name;\n\t\t\tconst actions = { ...registry.dispatch( namespaceName ) } as Record<\n\t\t\t\tstring,\n\t\t\t\t( ...args: unknown[] ) => void\n\t\t\t>;\n\n\t\t\tif ( namespaceName !== storeName ) {\n\t\t\t\t// This is an unrelated registry namespace, return original actions\n\t\t\t\treturn actions;\n\t\t\t}\n\n\t\t\tconst override = functionOverrides?.[ storeName ]?.[ actionName ];\n\n\t\t\tif ( override && ! override.actionIntercept && actions[ actionName ] ) {\n\t\t\t\t// Create new function to override actionIntercept, just once, to avoid rerenders\n\t\t\t\tconst originalAction = actions[ actionName ];\n\n\t\t\t\toverride.actionIntercept = ( ...args ) => {\n\t\t\t\t\t// Call the actual provided callback internally\n\t\t\t\t\tfunctionOverrides?.[ storeName ]?.[ actionName ]?.callback( originalAction, args );\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif ( override && override.actionIntercept ) {\n\t\t\t\t// Add our override into the dispatch registry\n\t\t\t\tactions[ actionName ] = override.actionIntercept;\n\t\t\t}\n\n\t\t\treturn actions;\n\t\t},\n\t} ) );\n}\n","import { useSelect } from '@wordpress/data';\nimport { useEffect, useRef, useState } from '@wordpress/element';\n\nimport { AwarenessStoreSelectors, store as awarenessStore } from '@/store/awareness-store';\nimport { DISCONNECTED_THRESHOLD_IN_MS } from '@/utilities/config';\n\nexport function useIsDisconnected(): boolean {\n\tconst [ disconnectedPastThreshold, setDisconnectedPastThreshold ] = useState< boolean >( false );\n\tconst timeoutRef = useRef< NodeJS.Timeout | null >( null );\n\n\tconst isDisconnected = useSelect< AwarenessStoreSelectors, boolean >( select => {\n\t\treturn select( awarenessStore ).isDisconnected();\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( isDisconnected ) {\n\t\t\ttimeoutRef.current = setTimeout( () => {\n\t\t\t\tsetDisconnectedPastThreshold( true );\n\t\t\t}, DISCONNECTED_THRESHOLD_IN_MS );\n\t\t} else {\n\t\t\tsetDisconnectedPastThreshold( false );\n\t\t\tclearTimeout( timeoutRef.current ?? undefined );\n\t\t}\n\n\t\treturn () => clearTimeout( timeoutRef.current ?? undefined );\n\t}, [ isDisconnected ] );\n\n\treturn disconnectedPastThreshold;\n}\n","import {\n\tBlockEditorStoreActions,\n\tBlockEditorStoreSelectors,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { BlockInstance, isUnmodifiedDefaultBlock } from '@wordpress/blocks';\nimport { debounce } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { dispatch, useDispatch, useSelect } from '@wordpress/data';\nimport { WPBlockSelection } from '@wordpress/editor/build-types/store/selectors';\nimport { useEffect, useMemo, useRef } from '@wordpress/element';\n\nimport { useCurrentEntity, type CurrentEntity } from './use-current-entity';\nimport useInterceptActionDispatch from './use-intercept-action-dispatch';\nimport { useSortedAwarenessUsers } from './use-sorted-awareness-users';\nimport { store as awarenessStore } from '../store/awareness-store';\nimport { store as rtcSettingsStore, SettingsStoreSelectors } from '../store/settings-store';\nimport { throttleByAnimationFrame } from '../utilities/throttle';\n\nimport type { MutableRefObject } from 'react';\n\n/**\n * Todo: Maybe use integers for SelectionType values\n */\nexport enum SelectionType {\n\tNone = 'none',\n\tCursor = 'cursor',\n\tSelectionInOneBlock = 'selection-in-1-block',\n\tSelectionInMultipleBlocks = 'selection-in-multiple-blocks',\n}\n\ntype SelectionNone = {\n\ttype: SelectionType.None;\n};\n\ntype SelectionCursor = {\n\ttype: SelectionType.Cursor;\n\tblockId: string;\n\tcursorPosition: number;\n};\n\ntype SelectionInOneBlock = {\n\ttype: SelectionType.SelectionInOneBlock;\n\tblockId: string;\n\tcursorStartPosition: number;\n\tcursorEndPosition: number;\n};\n\ntype SelectionInMultipleBlocks = {\n\ttype: SelectionType.SelectionInMultipleBlocks;\n\tblockStartId: string;\n\tblockEndId: string;\n\tcursorStartPosition: number;\n\tcursorEndPosition: number;\n};\n\nexport type SelectionState =\n\t| SelectionNone\n\t| SelectionCursor\n\t| SelectionInOneBlock\n\t| SelectionInMultipleBlocks;\n\n/**\n * Custom hook for rendering cursors for each user in the editor.\n * @param overlayRef - The ref to the overlay element\n * @param blockEditorDocument - The block editor document\n * @param awareness - The awareness instance\n */\nexport function useRenderCursors(\n\toverlayRef: MutableRefObject< HTMLElement | null >,\n\tblockEditorDocument: Document | null\n) {\n\tconst { selectionChange } = useDispatch< BlockEditorStoreActions >( blockEditorStore );\n\tconst { selectionStart, selectionEnd, isBlockValid, getBlock, initialCaretPosition } = useSelect<\n\t\tBlockEditorStoreSelectors,\n\t\t{\n\t\t\tselectionStart: WPBlockSelection;\n\t\t\tselectionEnd: WPBlockSelection;\n\t\t\tinitialCaretPosition: number | null;\n\t\t\tisBlockValid: ( clientId: string ) => boolean;\n\t\t\tgetBlock: ( clientId: string ) => BlockInstance;\n\t\t}\n\t>( select => {\n\t\treturn {\n\t\t\tselectionStart: select( blockEditorStore ).getSelectionStart(),\n\t\t\tselectionEnd: select( blockEditorStore ).getSelectionEnd(),\n\t\t\tisBlockValid: select( blockEditorStore ).isBlockValid,\n\t\t\tgetBlock: select( blockEditorStore ).getBlock,\n\t\t\tinitialCaretPosition: select( blockEditorStore ).getSelectedBlocksInitialCaretPosition(),\n\t\t};\n\t} );\n\n\tconst entity = useCurrentEntity();\n\n\t// Workaround:\n\t// When a user is in the editor and creates two new blocks in a row, and then uses <Backspace> to delete the\n\t// second block, the selection is not updated.\n\t// Intercept the `mergeBlocks` call and update the selection after WordPress has processed the merge.\n\tuseInterceptActionDispatch(\n\t\tblockEditorStore,\n\t\t'mergeBlocks',\n\t\t( originalAction, args: unknown[] ) => {\n\t\t\toriginalAction( ...args );\n\n\t\t\t// Trigger selection update after the merge\n\t\t\tsetTimeout( () => {\n\t\t\t\tconst clientIds = args as string[];\n\t\t\t\tfor ( const clientId of clientIds ) {\n\t\t\t\t\tconst block = getBlock( clientId );\n\t\t\t\t\tif ( isBlockValid( clientId ) && isUnmodifiedDefaultBlock( block ) ) {\n\t\t\t\t\t\tselectionChange( clientId );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 0 );\n\t\t}\n\t);\n\n\tconst isEnabled = useSelect< SettingsStoreSelectors, boolean >( select => {\n\t\treturn select( rtcSettingsStore ).isAwarenessCursorsEnabled();\n\t} );\n\n\tconst debouncedUpdateSelection = useMemo(\n\t\t() => debounce( updateSelection as ( ...args: unknown[] ) => void, 20 ),\n\t\t[]\n\t);\n\n\t// Update the awareness state when user selection changes (with debounce)\n\tuseEffect( () => {\n\t\tif ( entity ) {\n\t\t\tdebouncedUpdateSelection( selectionStart, selectionEnd, initialCaretPosition, entity );\n\t\t}\n\t}, [ selectionStart, selectionEnd, debouncedUpdateSelection, initialCaretPosition, entity ] );\n\n\tconst sortedUsers = useSortedAwarenessUsers();\n\n\t// Use a ref to store the current render function to avoid stale closures\n\tconst renderCursorsRef = useRef< () => void >();\n\n\t// Update render function and call it when user selection or mounted elements change\n\tuseEffect( () => {\n\t\trenderCursorsRef.current = () => {\n\t\t\tif ( ! overlayRef.current || ! blockEditorDocument ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userSelections = sortedUsers.map( user => {\n\t\t\t\treturn {\n\t\t\t\t\tuserName: user.name,\n\t\t\t\t\tselection: user.editorState.selection ?? { type: SelectionType.None },\n\t\t\t\t\tcolor: user.color,\n\t\t\t\t};\n\t\t\t} );\n\n\t\t\tdrawUserSelections( overlayRef.current, blockEditorDocument, userSelections, isEnabled );\n\t\t};\n\n\t\t// Render cursors immediately when data changes\n\t\trenderCursorsRef.current();\n\t}, [ sortedUsers, overlayRef.current, blockEditorDocument, isEnabled ] );\n\n\t// Also re-render cursors on resize\n\tuseEffect( () => {\n\t\tconst handleResize = () => {\n\t\t\tif ( renderCursorsRef.current ) {\n\t\t\t\trenderCursorsRef.current();\n\t\t\t}\n\t\t};\n\n\t\tconst throttledHandleResize = throttleByAnimationFrame( handleResize );\n\n\t\twindow.addEventListener( 'resize', throttledHandleResize );\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'resize', throttledHandleResize );\n\t\t};\n\t}, [] );\n}\n\n/**\n * Updates the awareness state with the current user's selection.\n * Converts WordPress block editor selection to a SelectionState and broadcasts it to other users.\n *\n * @param start - The start position of the selection\n * @param end - The end position of the selection\n */\nconst updateSelection = async (\n\tselectionStart: WPBlockSelection,\n\tselectionEnd: WPBlockSelection,\n\tinitialCaretPosition: number | null,\n\tentity: CurrentEntity\n) => {\n\tconst { editEntityRecord } = dispatch( coreStore );\n\n\tif ( selectionStart.clientId ) {\n\t\t// Send an entityRecord `selection` update if we have a selection.\n\t\t//\n\t\t// Normally WordPress updates the `selection` property of the post when changes are made to blocks.\n\t\t// In a multi-user setup, block changes can occur from other users. When an entity is updated from another\n\t\t// user's changes, useBlockSync() in Gutenberg will reset the user's selection to the last saved selection.\n\t\t//\n\t\t// Manually adding an edit for each movement ensures that other user's changes to the document will\n\t\t// not cause the local user's selection to reset to the last local change location.\n\t\tconst edits = {\n\t\t\tselection: { selectionStart, selectionEnd, initialPosition: initialCaretPosition },\n\t\t};\n\n\t\tvoid editEntityRecord( entity.kind, entity.name, entity.recordId, edits, {\n\t\t\tundoIgnore: true,\n\t\t} );\n\t}\n\n\tconst { setCurrentUserSelection } = dispatch( awarenessStore );\n\tconst selection = getSelectionState( selectionStart, selectionEnd );\n\tvoid setCurrentUserSelection( selection );\n};\n\n/**\n * Converts WordPress block editor selection to a SelectionState.\n *\n * @param selectionStart - The start position of the selection\n * @param selectionEnd - The end position of the selection\n * @returns The SelectionState\n */\nconst getSelectionState = (\n\tselectionStart: WPBlockSelection,\n\tselectionEnd: WPBlockSelection\n): SelectionState => {\n\tconst isSelectionEmpty = Object.keys( selectionStart ).length === 0;\n\tif ( isSelectionEmpty ) {\n\t\t// Case 1: No selection\n\t\treturn {\n\t\t\ttype: SelectionType.None,\n\t\t};\n\t}\n\n\t// When the page initially loads, selectionStart can contain an empty object `{}`.\n\tconst isSelectionInOneBlock = selectionStart.clientId === selectionEnd.clientId;\n\tconst isCursorOnly = isSelectionInOneBlock && selectionStart.offset === selectionEnd.offset;\n\n\tif ( isCursorOnly ) {\n\t\t// Case 2: Cursor only, no text selected\n\t\treturn {\n\t\t\ttype: SelectionType.Cursor,\n\t\t\tblockId: selectionStart.clientId,\n\t\t\tcursorPosition: selectionStart.offset,\n\t\t};\n\t} else if ( isSelectionInOneBlock ) {\n\t\t// Case 3: Selection in a single block\n\t\treturn {\n\t\t\ttype: SelectionType.SelectionInOneBlock,\n\t\t\tblockId: selectionStart.clientId,\n\t\t\tcursorStartPosition: selectionStart.offset,\n\t\t\tcursorEndPosition: selectionEnd.offset,\n\t\t};\n\t}\n\n\t// Selection in multiple blocks\n\treturn {\n\t\ttype: SelectionType.SelectionInMultipleBlocks,\n\t\tblockStartId: selectionStart.clientId,\n\t\tblockEndId: selectionEnd.clientId,\n\t\tcursorStartPosition: selectionStart.offset,\n\t\tcursorEndPosition: selectionEnd.offset,\n\t};\n};\n\n/**\n * Draws user selections on the overlay.\n *\n * @param overlay - The overlay element\n * @param editorDocument - The editor document\n * @param userSelections - The user selections\n */\nconst drawUserSelections = (\n\toverlay: HTMLElement,\n\teditorDocument: Document,\n\tuserSelections: { userName: string; selection: SelectionState; color: string }[],\n\tisEnabled: boolean\n) => {\n\t// Clear up previous state\n\tconst userContainers = overlay.querySelectorAll( '.vip-real-time-collaboration-user' );\n\tuserContainers.forEach( container => {\n\t\tcontainer.remove();\n\t} );\n\n\tif ( ! isEnabled ) {\n\t\treturn;\n\t}\n\n\t// Draw cursors\n\tuserSelections.forEach( ( { userName, selection, color } ) => {\n\t\tlet coords: { x: number; y: number; height: number } | null = null;\n\n\t\tif ( selection.type === SelectionType.None ) {\n\t\t\t// Do nothing\n\t\t} else if ( selection.type === SelectionType.Cursor ) {\n\t\t\tcoords = getCursorPosition( selection, editorDocument, overlay );\n\t\t} else if ( selection.type === SelectionType.SelectionInOneBlock ) {\n\t\t\t// Until selection logic is implemented, render a selection as a cursor at the beginning of the selection.\n\t\t\tconst selectionAsCursor: SelectionCursor = {\n\t\t\t\ttype: SelectionType.Cursor,\n\t\t\t\tblockId: selection.blockId,\n\t\t\t\tcursorPosition: selection.cursorStartPosition,\n\t\t\t};\n\n\t\t\tcoords = getCursorPosition( selectionAsCursor, editorDocument, overlay );\n\t\t} else if ( selection.type === SelectionType.SelectionInMultipleBlocks ) {\n\t\t\t// Until selection logic is implemented, render a selection as a cursor at the beginning of the selection.\n\t\t\tconst selectionAsCursor: SelectionCursor = {\n\t\t\t\ttype: SelectionType.Cursor,\n\t\t\t\tblockId: selection.blockStartId,\n\t\t\t\tcursorPosition: selection.cursorStartPosition,\n\t\t\t};\n\n\t\t\tcoords = getCursorPosition( selectionAsCursor, editorDocument, overlay );\n\t\t}\n\n\t\tif ( coords ) {\n\t\t\t// Create parent container\n\t\t\t// Use `document` instead of `editorDocument` because the overlay is in the parent document.\n\t\t\tconst userContainer = document.createElement( 'div' );\n\t\t\tuserContainer.className = 'vip-real-time-collaboration-user';\n\t\t\tuserContainer.style.left = `${ coords.x }px`;\n\t\t\tuserContainer.style.top = `${ coords.y }px`;\n\n\t\t\t// Create cursor element\n\t\t\tconst cursor = document.createElement( 'div' );\n\t\t\tcursor.className = 'vip-real-time-collaboration-user-cursor';\n\t\t\tcursor.style.backgroundColor = color;\n\t\t\tcursor.style.height = `${ coords.height }px`;\n\n\t\t\t// Create label\n\t\t\tconst label = document.createElement( 'div' );\n\t\t\tlabel.className = 'vip-real-time-collaboration-user-label';\n\t\t\tlabel.textContent = userName;\n\t\t\tlabel.style.backgroundColor = color;\n\n\t\t\t// Append cursor and label to the container\n\t\t\tuserContainer.appendChild( cursor );\n\t\t\tuserContainer.appendChild( label );\n\n\t\t\toverlay.appendChild( userContainer );\n\t\t}\n\t} );\n};\n\n/**\n * Given a selection, returns the coordinates of the cursor in the block.\n *\n * @param selection - The selection\n * @param editorDocument - The editor document\n * @param overlay - The overlay element\n * @returns The position of the cursor\n */\nconst getCursorPosition = (\n\tselection: SelectionCursor,\n\teditorDocument: Document,\n\toverlay: HTMLElement\n) => {\n\tconst blockElement = editorDocument.querySelector(\n\t\t`[data-block=\"${ selection.blockId }\"]`\n\t) as HTMLElement;\n\n\tif ( ! blockElement ) {\n\t\treturn null;\n\t}\n\n\tconst coords = getOffsetPositionInBlock(\n\t\tblockElement,\n\t\tselection.cursorPosition,\n\t\teditorDocument,\n\t\toverlay\n\t);\n\n\treturn coords ?? null;\n};\n\n/**\n * Given a block element and a character offset, returns the coordinates for drawing a visual cursor in the block.\n *\n * @param blockElement - The block element\n * @param charOffset - The character offset\n * @param editorDocument - The editor document\n * @param overlay - The overlay element\n * @returns The position of the cursor\n */\nconst getOffsetPositionInBlock = (\n\tblockElement: HTMLElement,\n\tcharOffset: number,\n\teditorDocument: Document,\n\toverlay: HTMLElement\n) => {\n\tconst { node, offset } = findInnerBlockOffset( blockElement, charOffset, editorDocument );\n\n\tconst cursorRange = editorDocument.createRange();\n\n\ttry {\n\t\tcursorRange.setStart( node, offset );\n\t} catch ( error ) {\n\t\tconsole.error( 'Failed to create a range for cursor:', { error, node, offset } );\n\t\treturn null;\n\t}\n\n\t// Ensure the range only represents single point in the DOM.\n\tcursorRange.collapse( true );\n\n\tconst cursorRect = cursorRange.getBoundingClientRect();\n\tconst overlayRect = overlay.getBoundingClientRect();\n\tconst blockRect = blockElement.getBoundingClientRect();\n\n\tlet cursorX = 0;\n\tlet cursorY = 0;\n\n\tif (\n\t\tcursorRect.x === 0 &&\n\t\tcursorRect.y === 0 &&\n\t\tcursorRect.width === 0 &&\n\t\tcursorRect.height === 0\n\t) {\n\t\t// This can happen for empty blocks.\n\t\tcursorX = blockRect.left - overlayRect.left;\n\t\tcursorY = blockRect.top - overlayRect.top;\n\t} else {\n\t\tcursorX = cursorRect.left - overlayRect.left;\n\t\tcursorY = cursorRect.top - overlayRect.top;\n\t}\n\n\tlet cursorHeight = cursorRect.height;\n\tif ( cursorHeight === 0 ) {\n\t\tcursorHeight =\n\t\t\tparseInt( window.getComputedStyle( blockElement ).lineHeight, 10 ) || blockRect.height;\n\t}\n\n\treturn {\n\t\tx: cursorX,\n\t\ty: cursorY,\n\t\theight: cursorHeight,\n\t};\n};\n\nconst MAX_NODE_OFFSET_COUNT = 1000;\n\n/**\n * Given a block element and a character offset, returns an exact inner node and offset for use in a range.\n *\n * @param blockElement - The block element\n * @param offset - The character offset\n * @param editorDocument - The editor document\n * @returns The node and offset of the character at the offset\n */\nconst findInnerBlockOffset = (\n\tblockElement: HTMLElement,\n\toffset: number,\n\teditorDocument: Document\n) => {\n\tconst treeWalker = editorDocument.createTreeWalker( blockElement, NodeFilter.SHOW_TEXT );\n\tlet currentOffset = 0;\n\tlet lastTextNode = null;\n\n\tlet node: Node | null = null;\n\tlet nodeCount = 1;\n\n\twhile ( ( node = treeWalker.nextNode() ) ) {\n\t\tnodeCount++;\n\n\t\tif ( nodeCount > MAX_NODE_OFFSET_COUNT ) {\n\t\t\treturn { node: blockElement, offset: 0 };\n\t\t}\n\n\t\tif ( ! node.nodeValue?.length ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst nodeLength = node.nodeValue.length;\n\n\t\tif ( currentOffset + nodeLength >= offset ) {\n\t\t\treturn { node, offset: offset - currentOffset };\n\t\t}\n\n\t\tcurrentOffset += nodeLength;\n\t\tlastTextNode = node;\n\n\t\tnode = treeWalker.nextNode();\n\t}\n\n\tif ( lastTextNode && lastTextNode.nodeValue?.length ) {\n\t\treturn { node: lastTextNode, offset: lastTextNode.nodeValue.length };\n\t}\n\n\treturn { node: blockElement, offset: 0 };\n};\n","import { CoreDataSelectors, store as coreStore, User } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\nimport {\n\tAwarenessStoreSelectors,\n\tUserState,\n\tstore as awarenessStore,\n} from '@/store/awareness-store';\n\n/**\n * Selects active users in the awareness store with the current user sorted to the front of the list.\n */\nexport function useSortedAwarenessUsers(): UserState[] {\n\tconst activeUsers = useSelect< AwarenessStoreSelectors, UserState[] >( select => {\n\t\treturn select( awarenessStore ).getActiveUsers();\n\t} );\n\n\tconst currentUser = useSelect< CoreDataSelectors, User >( select => {\n\t\treturn select( coreStore ).getCurrentUser();\n\t} );\n\n\t// Only return a new user array if data has changed\n\treturn useMemo( () => {\n\t\tconst sortedUsers = [ ...activeUsers ];\n\t\tconst currentUserStateIndex = sortedUsers.findIndex( user => user.id === currentUser?.id );\n\n\t\tif ( currentUserStateIndex >= 0 ) {\n\t\t\tconst currentUserState = sortedUsers.splice( currentUserStateIndex, 1 )?.[ 0 ];\n\n\t\t\tif ( currentUserState ) {\n\t\t\t\tsortedUsers.unshift( currentUserState );\n\t\t\t}\n\t\t}\n\n\t\treturn sortedUsers;\n\t}, [ currentUser, activeUsers ] );\n}\n","import { useEffect, useState } from '@wordpress/element';\n\nimport { throttleByAnimationFrame } from '../utilities/throttle';\n\n// How often to poll for the selector when it's not present in the DOM.\nconst POLL_INTERVAL = 200;\n\n/**\n * This hook is used to wait for a selector to be present in the DOM.\n * If it's found, use a MutationObserver to watch for a removal of the item.\n * If it's not found, poll for the selector until available.\n *\n * @param targetSelector The selector to wait for.\n * @returns The target element, or null if it doesn't exist\n */\nexport function useWaitForSelector< T extends HTMLElement = HTMLElement >(\n\ttargetSelector: string\n): T | null {\n\tconst [ element, setElement ] = useState< T | null >( null );\n\n\tuseEffect( () => {\n\t\tlet pollInterval: NodeJS.Timeout | null = null;\n\t\tlet parentObserver: MutationObserver | null = null;\n\n\t\tconst checkForElement = () => {\n\t\t\tconst testTargetElement = document.querySelector( targetSelector ) as T;\n\t\t\tsetElement( testTargetElement || null );\n\n\t\t\treturn testTargetElement;\n\t\t};\n\n\t\tconst startPolling = () => {\n\t\t\tif ( pollInterval ) {\n\t\t\t\tclearInterval( pollInterval );\n\t\t\t}\n\n\t\t\tpollInterval = setInterval( () => {\n\t\t\t\tconst foundElement = checkForElement();\n\n\t\t\t\tif ( foundElement ) {\n\t\t\t\t\tstopPolling();\n\t\t\t\t\tstartObserving( foundElement );\n\t\t\t\t}\n\t\t\t}, POLL_INTERVAL );\n\t\t};\n\n\t\tconst stopPolling = () => {\n\t\t\tif ( pollInterval ) {\n\t\t\t\tclearInterval( pollInterval );\n\t\t\t\tpollInterval = null;\n\t\t\t}\n\t\t};\n\n\t\tconst startObserving = ( targetElement: HTMLElement ) => {\n\t\t\tconst throttledParentCheck = throttleByAnimationFrame( () => {\n\t\t\t\tconst currentElement = checkForElement();\n\t\t\t\tif ( ! currentElement ) {\n\t\t\t\t\t// Element was removed, fall back to polling\n\t\t\t\t\tstopObserving();\n\t\t\t\t\tstartPolling();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Observe the parent element to watch for removal of the target element.\n\t\t\tif ( targetElement.parentElement ) {\n\t\t\t\tparentObserver = new MutationObserver( throttledParentCheck );\n\t\t\t\tparentObserver.observe( targetElement.parentElement, {\n\t\t\t\t\tchildList: true,\n\t\t\t\t\tsubtree: false, // Only watch direct children\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\n\t\tconst stopObserving = () => {\n\t\t\tif ( parentObserver ) {\n\t\t\t\tparentObserver.disconnect();\n\t\t\t\tparentObserver = null;\n\t\t\t}\n\t\t};\n\n\t\tconst initialElement = checkForElement();\n\n\t\tif ( initialElement ) {\n\t\t\t// If the element exists, watch for mutations to see if it's removed.\n\t\t\tstartObserving( initialElement );\n\t\t} else {\n\t\t\t// If the element doesn't exist, poll for the selector.\n\t\t\tstartPolling();\n\t\t}\n\n\t\treturn () => {\n\t\t\tstopPolling();\n\t\t\tstopObserving();\n\t\t};\n\t}, [ targetSelector ] );\n\n\treturn element;\n}\n","/**\n * External dependencies\n */\nimport { dispatch, select, subscribe } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport { getCrdtDoc, updateCrdtDoc } from '@/api/crdt';\nimport { AwarenessManager } from '@/awareness-manager';\nimport { store as awarenessStore } from '@/store/awareness-store';\nimport { createWebSocketConnection, type WebSocketConnectionConfig } from '@/websocket-client';\n\nimport type {\n\tCRDTDoc,\n\tEntityID,\n\tObjectData,\n\tObjectID,\n\tObjectType,\n\tSyncConfig,\n} from '@wordpress/sync';\nimport type { WebsocketProvider } from 'y-websocket';\n\nexport class SyncProviderWithAwareness extends window.wp.sync.SyncProvider {\n\tprivate entitiesWithCrdtPersistence: Map< EntityID, [ ObjectType, ObjectID ] > = new Map();\n\n\tpublic constructor( config: WebSocketConnectionConfig ) {\n\t\t// There is no local persistence, so we pass `null` for the first argument.\n\t\tsuper(\n\t\t\tnull,\n\t\t\tcreateWebSocketConnection( {\n\t\t\t\t...config,\n\t\t\t\tonStatusChange: ( ...args ) => this.onProviderStatusChange( ...args ),\n\t\t\t} )\n\t\t);\n\n\t\tthis.subscribeToPostSave();\n\t}\n\n\tpublic async bootstrap(\n\t\tsyncConfig: SyncConfig,\n\t\trecord: ObjectData,\n\t\thandleChanges: ( data: Partial< ObjectData > ) => void\n\t): Promise< void > {\n\t\tawait super.bootstrap( syncConfig, record, handleChanges );\n\n\t\tconst objectType = syncConfig.objectType;\n\t\tconst objectId = syncConfig.getObjectId( record );\n\t\tconst entityId = this.getEntityId( objectType, objectId );\n\n\t\tconst connections = this.connections.get( entityId ) ?? [];\n\n\t\tfor ( const connection of connections ) {\n\t\t\tif ( connection.awareness && syncConfig.supportsAwareness ) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait AwarenessManager.bootstrap( entityId, connection.awareness );\n\t\t\t}\n\t\t}\n\n\t\t// CRDT persistence is currently only supported for post types.\n\t\tif ( objectType.startsWith( 'postType/' ) ) {\n\t\t\tthis.entitiesWithCrdtPersistence.set( entityId, [ objectType, objectId ] );\n\t\t}\n\t}\n\n\tprotected async getInitialCRDTDoc(\n\t\tsyncConfig: SyncConfig,\n\t\trecord: ObjectData\n\t): Promise< CRDTDoc > {\n\t\tconst objectId = syncConfig.getObjectId( record );\n\n\t\t// Attempt to load the initial CRDT document from post meta.\n\t\tconst existingDoc = await getCrdtDoc( syncConfig.objectType, objectId );\n\t\tif ( existingDoc ) {\n\t\t\treturn existingDoc;\n\t\t}\n\n\t\t// Otherwise, defer to the parent class method, which will create a new\n\t\t// document based on the persisted post content.\n\t\tconst newDoc = await super.getInitialCRDTDoc( syncConfig, record );\n\n\t\t// Return the result from updateCrdtDoc. There is a chance that our doc\n\t\t// has been updated by the server!\n\t\treturn await updateCrdtDoc( syncConfig.objectType, objectId, newDoc, true );\n\t}\n\n\tprivate subscribeToPostSave(): void {\n\t\tlet hasPersistedCrdtDoc = false;\n\n\t\t// Listen for post save events to update the CRDT document.\n\t\tsubscribe( () => {\n\t\t\tconst { isAutosavingPost, isSavingPost } = select( editorStore );\n\t\t\tconst shouldPersistCrdtDoc = isSavingPost() && ! isAutosavingPost();\n\n\t\t\tif ( shouldPersistCrdtDoc && ! hasPersistedCrdtDoc ) {\n\t\t\t\tthis.entitiesWithCrdtPersistence.forEach( ( [ objectType, objectId ] ) => {\n\t\t\t\t\tvoid this.persistCrdtDoc( objectType, objectId );\n\t\t\t\t} );\n\n\t\t\t\thasPersistedCrdtDoc = true;\n\t\t\t} else if ( ! shouldPersistCrdtDoc ) {\n\t\t\t\thasPersistedCrdtDoc = false;\n\t\t\t}\n\t\t} );\n\t}\n\n\tprivate async persistCrdtDoc( objectType: ObjectType, objectId: ObjectID ): Promise< void > {\n\t\tconst crdtDoc = this.getEntityState( objectType, objectId )?.ydoc;\n\n\t\tif ( ! crdtDoc ) {\n\t\t\tthrow new Error( `CRDT document not found for ${ objectType } with ID ${ objectId }` );\n\t\t}\n\n\t\tawait updateCrdtDoc( objectType, objectId, crdtDoc, false );\n\t}\n\n\tprivate onProviderStatusChange(\n\t\tevent: { status: 'connected' | 'connecting' | 'connection-error' | 'disconnected' },\n\t\tprovider: WebsocketProvider\n\t): void {\n\t\tswitch ( event.status ) {\n\t\t\tcase 'connecting': {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'connection-error': {\n\t\t\t\tconst { patchUser } = dispatch( awarenessStore );\n\t\t\t\tvoid patchUser( provider.awareness.clientID, { isConnected: false } );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'connected': {\n\t\t\t\tAwarenessManager.resetAfterDisconnect();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'disconnected': {\n\t\t\t\tif ( provider.awareness.clientID ) {\n\t\t\t\t\tconst { patchUser } = dispatch( awarenessStore );\n\t\t\t\t\tvoid patchUser( provider.awareness.clientID, { isConnected: false } );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { User } from '@wordpress/core-data';\nimport { register, createReduxStore, StoreDescriptor } from '@wordpress/data';\n\nimport { SelectionType, type SelectionState } from '@/hooks/use-render-cursors';\n\nconst STORE_NAME = 'vip-real-time-collaboration/awareness';\n\nexport type WordPressUserInfo = Pick< User, 'id' | 'name' | 'avatar_urls' >;\n\nexport interface UserState extends WordPressUserInfo {\n\tbrowserType: string;\n\tclientId: number;\n\tcolor: string;\n\teditorState: EditorState;\n\tisConnected: boolean;\n\tisMe: boolean;\n}\n\ninterface EditorState {\n\tselection: SelectionState;\n}\n\nexport interface AwarenessStore {\n\tcurrentUserSelection: SelectionState;\n\tuserMap: Map< number, UserState >;\n}\n\ninterface PatchUserAction {\n\ttype: 'PATCH_USER';\n\tpayload: { clientId: number; userState: Partial< UserState > };\n}\n\ninterface RemoveUserAction {\n\ttype: 'REMOVE_USER';\n\tpayload: { clientId: number };\n}\n\ninterface SetCurrentUserSelectionAction {\n\ttype: 'SET_CURRENT_USER_SELECTION';\n\tpayload: { selection: SelectionState };\n}\n\ninterface UpsertUserAction {\n\ttype: 'UPSERT_USER';\n\tpayload: { clientId: number; userState: UserState };\n}\n\ntype AwarenessAction =\n\t| PatchUserAction\n\t| RemoveUserAction\n\t| SetCurrentUserSelectionAction\n\t| UpsertUserAction;\n\nconst DEFAULT_STATE: AwarenessStore = {\n\tcurrentUserSelection: {\n\t\ttype: SelectionType.None,\n\t},\n\tuserMap: new Map< number, UserState >(),\n};\n\nconst actions = {\n\tpatchUser: ( clientId: number, userState: Partial< UserState > ): AwarenessAction => ( {\n\t\ttype: 'PATCH_USER',\n\t\tpayload: { clientId, userState },\n\t} ),\n\n\t// Call when a user leaves the editor (after a delay)\n\tremoveUser: ( clientId: number ): AwarenessAction => ( {\n\t\ttype: 'REMOVE_USER',\n\t\tpayload: { clientId },\n\t} ),\n\n\tsetCurrentUserSelection: ( selection: SelectionState ): AwarenessAction => ( {\n\t\ttype: 'SET_CURRENT_USER_SELECTION',\n\t\tpayload: { selection },\n\t} ),\n\n\tupsertUser: ( clientId: number, userState: UserState ): AwarenessAction => ( {\n\t\ttype: 'UPSERT_USER',\n\t\tpayload: { clientId, userState },\n\t} ),\n};\n\nconst reducer = ( state = DEFAULT_STATE, action: AwarenessAction ): AwarenessStore => {\n\tswitch ( action.type ) {\n\t\tcase 'PATCH_USER': {\n\t\t\tif ( state.userMap.has( action.payload.clientId ) ) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tconst userState = state.userMap.get( action.payload.clientId )!;\n\n\t\t\t\tstate.userMap.set( action.payload.clientId, {\n\t\t\t\t\t...userState,\n\t\t\t\t\t...action.payload.userState,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserMap: new Map( state.userMap ),\n\t\t\t};\n\t\t}\n\n\t\tcase 'REMOVE_USER': {\n\t\t\tstate.userMap.delete( action.payload.clientId );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserMap: new Map( state.userMap ),\n\t\t\t};\n\t\t}\n\n\t\tcase 'SET_CURRENT_USER_SELECTION': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentUserSelection: action.payload.selection,\n\t\t\t};\n\t\t}\n\n\t\tcase 'UPSERT_USER': {\n\t\t\tstate.userMap.set( action.payload.clientId, action.payload.userState );\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserMap: new Map( state.userMap ),\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst selectors = {\n\tgetActiveClientIds( state: AwarenessStore ): number[] {\n\t\treturn Array.from( state.userMap.keys() );\n\t},\n\tgetActiveUsers( state: AwarenessStore ): UserState[] {\n\t\treturn Array.from( state.userMap.values() );\n\t},\n\tgetCurrentUserSelection( state: AwarenessStore ): SelectionState {\n\t\treturn state.currentUserSelection;\n\t},\n\tisDisconnected( state: AwarenessStore ): boolean {\n\t\treturn (\n\t\t\tselectors\n\t\t\t\t.getActiveUsers( state )\n\t\t\t\t.findIndex( user => user.isMe && false === user.isConnected ) !== -1\n\t\t);\n\t},\n};\n\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\n( register as ( storeDescriptor: StoreDescriptor ) => void )( store );\n\nexport interface AwarenessStoreSelectors {\n\tgetActiveClientIds: () => number[];\n\tgetActiveUsers: () => UserState[];\n\tgetCurrentUserSelection: () => SelectionState;\n\tisDisconnected: () => boolean;\n}\n","import { register, createReduxStore, StoreDescriptor } from '@wordpress/data';\n\nimport { loadFromLocalStorage, saveToLocalStorage } from '../utilities/local-storage';\n\nconst STORE_NAME = 'vip-real-time-collaboration/settings';\nconst LOCAL_STORAGE_KEY = 'vip-rtc-settings';\n\ninterface SettingsState {\n\tisAwarenessAvatarsEnabled: boolean;\n\tisAwarenessHighlightsEnabled: boolean;\n\tisAwarenessCursorsEnabled: boolean;\n}\n\nconst DEFAULT_STATE: SettingsState = {\n\tisAwarenessAvatarsEnabled: true,\n\tisAwarenessHighlightsEnabled: true,\n\tisAwarenessCursorsEnabled: true,\n};\n\nconst actions = {\n\tsetAwarenessAvatarsEnabled: ( enabled: boolean ): SettingsAction => ( {\n\t\ttype: 'SET_AWARENESS_AVATARS_ENABLED',\n\t\tpayload: enabled,\n\t} ),\n\tsetAwarenessHighlightsEnabled: ( enabled: boolean ): SettingsAction => ( {\n\t\ttype: 'SET_AWARENESS_HIGHLIGHTS_ENABLED',\n\t\tpayload: enabled,\n\t} ),\n\tsetAwarenessCursorsEnabled: ( enabled: boolean ): SettingsAction => ( {\n\t\ttype: 'SET_AWARENESS_CURSORS_ENABLED',\n\t\tpayload: enabled,\n\t} ),\n};\n\nconst reducer = (\n\tstate = loadFromLocalStorage( LOCAL_STORAGE_KEY, DEFAULT_STATE ),\n\taction: SettingsAction\n): SettingsState => {\n\tswitch ( action.type ) {\n\t\tcase 'SET_AWARENESS_AVATARS_ENABLED': {\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\tisAwarenessAvatarsEnabled: action.payload,\n\t\t\t};\n\n\t\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, newState );\n\t\t\treturn newState;\n\t\t}\n\t\tcase 'SET_AWARENESS_HIGHLIGHTS_ENABLED': {\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\tisAwarenessHighlightsEnabled: action.payload,\n\t\t\t};\n\n\t\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, newState );\n\t\t\treturn newState;\n\t\t}\n\t\tcase 'SET_AWARENESS_CURSORS_ENABLED': {\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\tisAwarenessCursorsEnabled: action.payload,\n\t\t\t};\n\n\t\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, newState );\n\t\t\treturn newState;\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst selectors = {\n\tisAwarenessAvatarsEnabled( state: SettingsState ) {\n\t\tconst { isAwarenessAvatarsEnabled } = state;\n\t\treturn isAwarenessAvatarsEnabled;\n\t},\n\tisAwarenessHighlightsEnabled( state: SettingsState ) {\n\t\tconst { isAwarenessHighlightsEnabled } = state;\n\t\treturn isAwarenessHighlightsEnabled;\n\t},\n\tisAwarenessCursorsEnabled( state: SettingsState ) {\n\t\tconst { isAwarenessCursorsEnabled } = state;\n\t\treturn isAwarenessCursorsEnabled;\n\t},\n};\n\ntype SettingsAction = {\n\ttype:\n\t\t| 'SET_AWARENESS_AVATARS_ENABLED'\n\t\t| 'SET_AWARENESS_HIGHLIGHTS_ENABLED'\n\t\t| 'SET_AWARENESS_CURSORS_ENABLED';\n\tpayload: boolean;\n};\n\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\n( register as ( store: StoreDescriptor ) => void )( store );\n\nexport type { SettingsState };\n\nexport type SettingsStoreActions = {\n\tsetAwarenessAvatarsEnabled: ( enabled: boolean ) => void;\n\tsetAwarenessHighlightsEnabled: ( enabled: boolean ) => void;\n\tsetAwarenessCursorsEnabled: ( enabled: boolean ) => void;\n};\n\nexport type SettingsStoreSelectors = {\n\tisAwarenessAvatarsEnabled: () => boolean;\n\tisAwarenessHighlightsEnabled: () => boolean;\n\tisAwarenessCursorsEnabled: () => boolean;\n};\n","export function getBrowserName() {\n\tconst userAgent = window.navigator.userAgent;\n\tlet browserName = 'Unknown';\n\n\tif ( userAgent.includes( 'Firefox' ) ) {\n\t\tbrowserName = 'Firefox';\n\t} else if ( userAgent.includes( 'Edg' ) ) {\n\t\tbrowserName = 'Microsoft Edge';\n\t} else if ( userAgent.includes( 'Chrome' ) && ! userAgent.includes( 'Edg' ) ) {\n\t\tbrowserName = 'Chrome';\n\t} else if ( userAgent.includes( 'Safari' ) && ! userAgent.includes( 'Chrome' ) ) {\n\t\tbrowserName = 'Safari';\n\t} else if ( userAgent.includes( 'MSIE' ) || userAgent.includes( 'Trident' ) ) {\n\t\tbrowserName = 'Internet Explorer';\n\t} else if ( userAgent.includes( 'Opera' ) || userAgent.includes( 'OPR' ) ) {\n\t\tbrowserName = 'Opera';\n\t}\n\n\treturn browserName;\n}\n","export const DISCONNECTED_THRESHOLD_IN_MS = 5000;\nexport const REMOVAL_DELAY_IN_MS = 5000;\n\nexport function getCrdtDocVersion(): number {\n\treturn window.VIP_RTC.crdtDocVersion;\n}\n\nexport function getWebSocketUrl(): string {\n\treturn window.VIP_RTC.wsUrl;\n}\n","import { store as coreStore } from '@wordpress/core-data';\nimport { select } from '@wordpress/data';\n\nimport type { WordPressUserInfo } from '@/store/awareness-store';\n\nexport async function getCurrentUserInfo(): Promise< WordPressUserInfo > {\n\tconst { avatar_urls, id, name } = select( coreStore ).getCurrentUser() ?? {};\n\n\tif ( ! id ) {\n\t\t// getCurrentUser() returns an empty user object for a short time after load.\n\t\t// In that case, wait and try again.\n\t\tawait new Promise( resolve => setTimeout( resolve, 100 ) );\n\t\treturn await getCurrentUserInfo();\n\t}\n\n\treturn { avatar_urls, id, name };\n}\n","import { __ } from '@wordpress/i18n';\n\nexport function getErrorMessage( error: unknown ): string {\n\tif ( error instanceof Error ) {\n\t\treturn error.message;\n\t}\n\n\tif (\n\t\terror &&\n\t\ttypeof error === 'object' &&\n\t\t'message' in error &&\n\t\ttypeof error.message === 'string'\n\t) {\n\t\treturn error.message;\n\t}\n\n\treturn __( 'Unknown error', 'vip-real-time-collaboration' );\n}\n","export function memoizeFn< T extends ( ...args: unknown[] ) => unknown >( fn: T ): T {\n\tconst cache = new Map< string, ReturnType< T > >();\n\n\treturn ( ( ...args: Parameters< T > ) => {\n\t\tconst key = JSON.stringify( args );\n\t\tif ( cache.has( key ) ) {\n\t\t\treturn cache.get( key );\n\t\t}\n\n\t\tconst result = fn( ...args ) as ReturnType< T >;\n\t\tcache.set( key, result );\n\t\treturn result;\n\t} ) as T;\n}\n","/**\n * Load data from localStorage with error handling\n * @param key - The localStorage key to read from\n * @param defaultValue - The default value to return if loading fails or key doesn't exist\n * @returns The parsed data from localStorage or the default value\n */\nexport const loadFromLocalStorage = < T >( key: string, defaultValue: T ): T => {\n\ttry {\n\t\tconst saved = localStorage.getItem( key );\n\t\tif ( saved ) {\n\t\t\tconst parsed = JSON.parse( saved ) as T;\n\t\t\t// If the parsed value is an object (and not null or array), merge with defaultValue\n\t\t\tif ( typeof parsed === 'object' && parsed !== null && ! Array.isArray( parsed ) ) {\n\t\t\t\treturn { ...defaultValue, ...( parsed as Partial< T > ) };\n\t\t\t}\n\t\t\t// For primitive values (string, number, boolean, null), return directly\n\t\t\treturn parsed;\n\t\t}\n\t} catch ( error ) {\n\t\tconsole.warn( `Failed to load data from localStorage (key: ${ key }):`, error );\n\t}\n\treturn defaultValue;\n};\n\n/**\n * Save data to localStorage with error handling\n * @param key - The localStorage key to write to\n * @param data - The data to save\n */\nexport const saveToLocalStorage = < T >( key: string, data: T ): void => {\n\ttry {\n\t\tlocalStorage.setItem( key, JSON.stringify( data ) );\n\t} catch ( error ) {\n\t\tconsole.warn( `Failed to save data to localStorage (key: ${ key }):`, error );\n\t}\n};\n","/**\n * Creates a throttled version of a callback using requestAnimationFrame.\n *\n * @param callback - The function to throttle.\n * @returns A throttled version of the callback.\n */\nexport function throttleByAnimationFrame( callback: () => void ) {\n\tlet animationFrameId: number | null = null;\n\n\treturn () => {\n\t\tif ( animationFrameId !== null ) {\n\t\t\tcancelAnimationFrame( animationFrameId );\n\t\t}\n\t\tanimationFrameId = requestAnimationFrame( () => {\n\t\t\tcallback();\n\t\t} );\n\t};\n}\n","import { loadFromLocalStorage, saveToLocalStorage } from './local-storage';\n\n// From Material UI's metro colors\n// https://materialui.co/metrocolors\nconst METRO_COLORS = [\n\t'#A4C400',\n\t'#60A917',\n\t'#008A00',\n\t'#00ABA9',\n\t'#1BA1E2',\n\t'#0050EF',\n\t'#6A00FF',\n\t'#AA00FF',\n\t'#F472D0',\n\t'#D80073',\n\t'#A20025',\n\t'#E51400',\n\t'#FA6800',\n\t'#F0A30A',\n\t'#E3C800',\n\t// '#825A2C', (Brown)\n\t// '#6D8764', (Olive)\n\t'#647687',\n\t// '#76608A', (Mauve)\n\t// '#A0522D', (Sienna)\n];\n\nconst USER_HIGHLIGHT_ALPHA = 0.7; // 0-1.0 to represent opacity\nconst LOCAL_STORAGE_KEY = 'vip-rtc-preferred-color';\n\n/**\n * Get a unique user color from the list of available metro colors, or generate a random color if none are available.\n * If the previously used color is available from localStorage, use it.\n *\n * @param existingColors - Colors that are already in use.\n * @returns The new user color, in #RGBA or HSL format.\n */\nconst getNewUserColor = ( existingColors: string[] ) => {\n\t// Remove the alpha value from the colors.\n\texistingColors = existingColors.map( color => color.slice( 0, -2 ) );\n\tconst availableColors = METRO_COLORS.filter( color => ! existingColors.includes( color ) );\n\n\tif ( availableColors.length === 0 ) {\n\t\t// If all colors are used, generate one at random\n\t\tconst hue = generateRandomInt( 0, 360 );\n\t\tconst saturation = generateRandomInt( 50, 100 );\n\t\tconst lightness = generateRandomInt( 45, 95 );\n\t\treturn `hsla(${ hue }, ${ saturation }%, ${ lightness }%, ${ USER_HIGHLIGHT_ALPHA })`;\n\t}\n\n\tlet hexColor = null;\n\n\tconst preferredColor = loadFromLocalStorage< string | null >( LOCAL_STORAGE_KEY, null );\n\n\tif ( preferredColor && availableColors.includes( preferredColor ) ) {\n\t\thexColor = preferredColor;\n\t} else {\n\t\tconst randomIndex = generateRandomInt( 0, availableColors.length - 1 );\n\t\thexColor = availableColors[ `${ randomIndex }` ];\n\t\tsaveToLocalStorage( LOCAL_STORAGE_KEY, hexColor );\n\t}\n\n\t// Convert alpha to hex value between 00 and FF, e.g. 0.7 -> 'B3'\n\tconst alphaHex = Math.round( USER_HIGHLIGHT_ALPHA * 0xff )\n\t\t.toString( 16 )\n\t\t.padStart( 2, '0' )\n\t\t.toUpperCase();\n\n\treturn `${ hexColor }${ alphaHex }`;\n};\n\n/**\n * Generate a random integer between min and max, inclusive.\n *\n * @param min - The minimum value.\n * @param max - The maximum value.\n * @returns A random integer between min and max.\n */\nconst generateRandomInt = ( min: number, max: number ) => {\n\treturn Math.floor( Math.random() * ( max - min + 1 ) ) + min;\n};\n\nexport { getNewUserColor };\n","/**\n * Generate a UUID.\n *\n * Uses window.crypto.randomUUID if available, otherwise falls back to a\n * custom implementation.\n *\n * @returns A UUID.\n */\nexport function generateUUID(): string {\n\tif ( window.isSecureContext ) {\n\t\treturn window.crypto.randomUUID();\n\t}\n\n\t// Fallback for when crypto.randomUUID is not available.\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace( /[xy]/g, function ( char ) {\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst randomValue = ( Math.random() * 16 ) | 0;\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst value = char === 'x' ? randomValue : ( randomValue & 0x3 ) | 0x8;\n\t\treturn value.toString( 16 );\n\t} );\n}\n","/**\n * External dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\nimport { WebsocketProvider, type WebsocketProviderOptions } from 'y-websocket';\n\nimport { getWebSocketUrl } from '@/utilities/config';\nimport { getErrorMessage } from '@/utilities/error';\nimport { memoizeFn } from '@/utilities/function';\nimport { generateUUID } from '@/utilities/uuid';\n\nimport type { ConnectDoc } from '@wordpress/sync';\nimport type * as Y from 'yjs';\n\nexport interface WebSocketConnectionConfig {\n\tonStatusChange?: (\n\t\tevent: { status: 'connected' | 'connecting' | 'connection-error' | 'disconnected' },\n\t\tprovider: WebsocketProvider\n\t) => void;\n\toptions?: WebsocketProviderOptions;\n\tserverUrl: string;\n}\n\n/**\n * Creates a connection ID generator with in-memory storage\n */\nconst getConnectionId = memoizeFn( (): string => generateUUID() );\n\n/**\n * Fetch a fresh authentication token from the REST API.\n */\nasync function fetchAuthToken( syncObjectType: string, syncObjectId: string ): Promise< string > {\n\tconst data = await apiFetch< { token: string } >( {\n\t\tpath: '/vip-rtc/v1/websocket/auth',\n\t\tmethod: 'POST',\n\t\tdata: {\n\t\t\tsyncObjectType,\n\t\t\tsyncObjectId,\n\t\t\tconnectionId: getConnectionId(),\n\t\t},\n\t} );\n\n\tif ( ! data.token ) {\n\t\tthrow new Error( __( 'No auth token returned', 'vip-real-time-collaboration' ) );\n\t}\n\n\treturn data.token;\n}\n\n/**\n * Log a link to inspect the Yjs provider using Yjs inspector.\n */\nfunction logInspectUrl( syncObjectType: string, syncObjectId: string, authToken: string ): void {\n\tconst roomName = `${ syncObjectType }-${ syncObjectId }`;\n\tconst connectionConfig = {\n\t\tcreateNewDoc: false,\n\t\troom: `${ roomName }?auth=${ authToken }`,\n\t\tprovider: 'y-websocket',\n\t\turl: getWebSocketUrl(),\n\t};\n\n\t// The inspect URL always targets a local Yjs inspector.\n\tconst inspectUrl = `http://localhost:5173/#/connection=${ encodeURIComponent(\n\t\tJSON.stringify( connectionConfig )\n\t) }`;\n\n\t// eslint-disable-next-line no-console\n\tconsole.debug( `Inspect Yjs provider for ${ roomName }: ${ inspectUrl }` );\n}\n\n/**\n * Configure the websocket provider to use auth token for websocket connection.\n */\nfunction createConnect(\n\tprovider: WebsocketProvider,\n\tsyncObjectType: string,\n\tsyncObjectId: string\n): () => Promise< void > {\n\treturn async function (): Promise< void > {\n\t\ttry {\n\t\t\tconst authToken = await fetchAuthToken( syncObjectType, syncObjectId );\n\n\t\t\tprovider.params = {\n\t\t\t\tauth: authToken,\n\t\t\t};\n\t\t\tprovider.connect();\n\n\t\t\t// Disable provider#shouldConnect to prevent websocket from attempting to\n\t\t\t// reconnect before the new auth token is fetched (they are short-lived).\n\t\t\t// When provider.connect() runs it updates provider#shouldConnect to true.\n\t\t\tprovider.shouldConnect = false;\n\n\t\t\tlogInspectUrl( syncObjectType, syncObjectId, authToken );\n\t\t} catch ( error: unknown ) {\n\t\t\tconst errorMessage = getErrorMessage( error );\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(\n\t\t\t\t`[RTC:WebSocket] ${ __(\n\t\t\t\t\t'Failed to fetch auth token and connect to WebSocket',\n\t\t\t\t\t'vip-real-time-collaboration'\n\t\t\t\t) }: ${ errorMessage }`\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport function getWebSocketConnectionConfig(): WebSocketConnectionConfig {\n\treturn {\n\t\tserverUrl: getWebSocketUrl(),\n\t\toptions: {\n\t\t\t/**\n\t\t\t * Disable automatic connection to prevent websocket from attempting to connect\n\t\t\t * before the auth token is fetched.\n\t\t\t */\n\t\t\tconnect: false,\n\t\t},\n\t};\n}\n\n/**\n * Function that creates a new WebSocket Connection.\n *\n * @param {WebsocketConnectionConfig} config The configuration for the WebSocket connection.\n * @return {ConnectDoc} A function that connects a Y.Doc to a WebSocket server.\n */\nexport function createWebSocketConnection( config: WebSocketConnectionConfig ): ConnectDoc {\n\treturn async function ( objectId: string = 'unknown', objectType: string, doc: Y.Doc ) {\n\t\ttry {\n\t\t\tconst roomName = `${ objectType }-${ objectId }`;\n\t\t\tconst provider = new WebsocketProvider( config.serverUrl, roomName, doc, config.options );\n\t\t\tconst connect = createConnect( provider, objectType, objectId );\n\n\t\t\tprovider.on( 'connection-close', connect );\n\t\t\tprovider.on( 'connection-error', () => {\n\t\t\t\t// The provider does not change status on connection error, so we\n\t\t\t\t// manually trigger a synthetic status change.\n\t\t\t\tconfig.onStatusChange?.( { status: 'connection-error' }, provider );\n\t\t\t} );\n\t\t\tprovider.on( 'status', event => config.onStatusChange?.( event, provider ) );\n\n\t\t\t// Uncomment the following lines to provide debugging functions.\n\n\t\t\t// window.DISCONNECT_WEB_SOCKET = () => {\n\t\t\t// \tprovider.off( 'connection-close', connect );\n\t\t\t// \tprovider.disconnect();\n\t\t\t// };\n\n\t\t\t// window.RECONNECT_WEB_SOCKET = () => {\n\t\t\t// \tprovider.on( 'connection-close', connect );\n\t\t\t// \tvoid connect();\n\t\t\t// };\n\n\t\t\tawait connect();\n\n\t\t\treturn {\n\t\t\t\tawareness: provider.awareness,\n\t\t\t\tdestroy: () => provider.destroy(),\n\t\t\t};\n\t\t} catch {}\n\n\t\treturn {\n\t\t\tdestroy: () => {},\n\t\t};\n\t};\n}\n","/**\n * This file is a shim for loading Yjs from a browser global provided by the\n * `@wordpress/sync` package. This is done primarily to avoid packaging and\n * importing two different Yjs instances, which would result in this conflict:\n *\n * https://github.com/yjs/yjs/issues/438\n *\n * It also allows us to align on the same Yjs version automatically.\n *\n * Scripts in this repo should directly import 'yjs' which will resolve to this\n * file via Webpack.\n *\n * This (unused) import of `@wordpress/core-data` is important to ensure that\n * `wp.sync` is loaded and available. It results in `core-data` being added to\n * our script's dependencies (see `build/index.asset.php`), which influences the\n * load order. We cannot use `@wordpress/sync` for this purpose because it is\n * not yet a public package.\n */\nimport '@wordpress/core-data';\n\n// To avoid issues with default exports, you must individually export the\n// properties you need, including those used by dependencies.\nexport const applyUpdate = window.wp.sync.Y.applyUpdate;\nexport const applyUpdateV2 = window.wp.sync.Y.applyUpdateV2;\nexport const encodeStateVector = window.wp.sync.Y.encodeStateVector;\nexport const encodeStateAsUpdate = window.wp.sync.Y.encodeStateAsUpdate;\nexport const encodeStateAsUpdateV2 = window.wp.sync.Y.encodeStateAsUpdateV2;\nexport const Doc = window.wp.sync.Y.Doc;\n","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addFilter } from '@wordpress/hooks';\nimport { registerPlugin } from '@wordpress/plugins';\n\nimport { RTCSettingsPanel } from './components/rtc-settings-panel';\nimport { SyncProviderWithAwareness } from './provider';\nimport { getWebSocketConnectionConfig } from './websocket-client';\n\nimport type { SyncProvider } from '@wordpress/sync';\n\naddFilter( 'core.getSyncProvider', 'vip-rtc', ( provider: SyncProvider | null ) => {\n\tif ( provider ) {\n\t\t// If a provider already exists, return it.\n\t\treturn provider;\n\t}\n\n\tconst webSocketConnectionConfig = getWebSocketConnectionConfig();\n\n\t// We already error check for the WebSocket URL in the main plugin file,\n\t// so this is here for safety.\n\tif ( ! webSocketConnectionConfig.serverUrl ) {\n\t\tconsole.error(\n\t\t\t'VIP Real-Time Collaboration WebSocket URL has not been configured. The plugin will not be functional without it.'\n\t\t);\n\t\treturn null;\n\t}\n\n\treturn new SyncProviderWithAwareness( webSocketConnectionConfig );\n} );\n\nregisterPlugin( 'vip-real-time-collaboration', {\n\trender: RTCSettingsPanel,\n} );\n"],"names":["apiFetch","__","buffer","Y","getCrdtDocVersion","CRDT_DOC_VERSION","CRDT_REST_API_BASE","serializeCrdtDoc","crdtDoc","toBase64","encodeStateAsUpdateV2","deserializeCrdtDoc","serializedCrdtDoc","ydoc","Doc","yupdate","fromBase64","applyUpdateV2","clientID","Math","floor","random","getCrdtDoc","syncObjectType","syncObjectId","queryParams","URLSearchParams","crdtVersion","toString","path","data","method","success","Error","error","console","debug","message","String","updateCrdtDoc","syncObjectType_1","syncObjectId_1","crdtDoc_1","isInitialUpdate","_a","dispatch","select","subscribe","removeAwarenessStates","removeAwarenessStatesFromProtocol","SelectionType","store","awarenessStore","getBrowserName","REMOVAL_DELAY_IN_MS","getCurrentUserInfo","getNewUserColor","AwarenessManager","constructor","awarenessInstances","Map","currentWordPressUserInfoPromise","window","addEventListener","forEach","awareness","instance","__instance","bootstrap","entityId","manager","set","subscribeToUserChanges","subscribeToSelectionChanges","getCurrentUserState","states","getStates","otherUserColors","Array","from","values","filter","userState","isMe","map","color","Boolean","userInfo","Object","assign","browserType","clientId","editorState","selection","type","None","isConnected","resetAfterDisconnect","removeUser","upsertUser","getActiveClientIds","clientIdsFromStore","Set","clientIdsFromAwareness","add","has","setLocalStateField","field","value","getCurrentUserSelection","currentSelection","newSelection","currentUserState","setLocalState","userRemovalTimeouts","patchUser","userStates","on","added","removed","updated","updatedUserStates","id","get","clearTimeout","setTimeout","Avatar","showUserColorBorder","avatarUrl","avatar_urls","style","border","undefined","opacity","_jsx","className","children","src","alt","name","title","useSortedAwarenessUsers","AwarenessAvatars","activeUsers","length","visibleUsers","slice","remainingUsers","remainingUsersText","join","_jsxs","Modal","Button","__experimentalHStack","HStack","__experimentalVStack","VStack","Icon","useIsDisconnected","PostLockedModal","isDisconnected","__experimentalHideHeader","icon","isDismissible","isFullScreen","onRequestClose","shouldCloseOnClickOutside","shouldCloseOnEsc","alignment","justify","spacing","fill","size","href","isDestructive","variant","onClick","location","reload","useSelect","useRef","useBlockHighlighting","useRenderCursors","rtcSettingsStore","RTCOverlay","iframeDocument","overlayRef","isAvatarsEnabled","isAwarenessAvatarsEnabled","_Fragment","ref","ToggleControl","__experimentalText","Text","FlexItem","Flex","useDispatch","PluginDocumentSettingPanel","useOverlayFrame","RTCSettingsPanel","isHighlightsEnabled","isCursorsEnabled","isAwarenessHighlightsEnabled","isAwarenessCursorsEnabled","setAwarenessAvatarsEnabled","setAwarenessHighlightsEnabled","setAwarenessCursorsEnabled","handleToggleAvatars","enabled","handleToggleHighlights","handleToggleCursors","label","checked","onChange","marginTop","display","direction","gap","useEffect","blockEditorDocument","highlightedBlockIds","getActiveUsers","isEnabled","unhighlightBlocks","blockIds","blockId","blockElement","getBlockElementById","boxShadow","borderRadius","current","delete","blocksToHighlight","_b","Cursor","block","selectedBlockIds","blocksIdsToUnhighlight","includes","blockColorPair","querySelector","editorStore","useCurrentEntity","entityKind","postId","postType","getCurrentPostId","getCurrentPostType","kind","recordId","createElement","createRoot","useWaitForSelector","iframeElement","iframeOverlayRootRef","editorDocument","contentDocument","remove","overlayDiv","body","appendChild","root","render","unmount","use","functionOverrides","useInterceptActionDispatch","storeDescriptor","actionName","callback","storeName","actionIntercept","registry","namespace","namespaceName","actions","override","originalAction","args","useState","DISCONNECTED_THRESHOLD_IN_MS","disconnectedPastThreshold","setDisconnectedPastThreshold","timeoutRef","blockEditorStore","isUnmodifiedDefaultBlock","debounce","coreStore","useMemo","throttleByAnimationFrame","selectionChange","selectionStart","selectionEnd","isBlockValid","getBlock","initialCaretPosition","getSelectionStart","getSelectionEnd","getSelectedBlocksInitialCaretPosition","entity","clientIds","debouncedUpdateSelection","updateSelection","sortedUsers","renderCursorsRef","userSelections","user","userName","drawUserSelections","handleResize","throttledHandleResize","removeEventListener","__awaiter","editEntityRecord","edits","initialPosition","undoIgnore","setCurrentUserSelection","getSelectionState","isSelectionEmpty","keys","isSelectionInOneBlock","isCursorOnly","offset","cursorPosition","SelectionInOneBlock","cursorStartPosition","cursorEndPosition","SelectionInMultipleBlocks","blockStartId","blockEndId","overlay","userContainers","querySelectorAll","container","coords","getCursorPosition","selectionAsCursor","userContainer","document","left","x","top","y","cursor","backgroundColor","height","textContent","getOffsetPositionInBlock","charOffset","node","findInnerBlockOffset","cursorRange","createRange","setStart","collapse","cursorRect","getBoundingClientRect","overlayRect","blockRect","cursorX","cursorY","width","cursorHeight","parseInt","getComputedStyle","lineHeight","MAX_NODE_OFFSET_COUNT","treeWalker","createTreeWalker","NodeFilter","SHOW_TEXT","currentOffset","lastTextNode","nodeCount","nextNode","nodeValue","nodeLength","currentUser","getCurrentUser","currentUserStateIndex","findIndex","splice","unshift","POLL_INTERVAL","targetSelector","element","setElement","pollInterval","parentObserver","checkForElement","testTargetElement","startPolling","clearInterval","setInterval","foundElement","stopPolling","startObserving","targetElement","throttledParentCheck","currentElement","stopObserving","parentElement","MutationObserver","observe","childList","subtree","disconnect","initialElement","createWebSocketConnection","SyncProviderWithAwareness","wp","sync","SyncProvider","config","onStatusChange","onProviderStatusChange","entitiesWithCrdtPersistence","subscribeToPostSave","syncConfig","record","handleChanges","_super","call","objectType","objectId","getObjectId","getEntityId","connections","connection","supportsAwareness","startsWith","getInitialCRDTDoc","existingDoc","newDoc","hasPersistedCrdtDoc","isAutosavingPost","isSavingPost","shouldPersistCrdtDoc","persistCrdtDoc","getEntityState","event","provider","status","register","createReduxStore","STORE_NAME","DEFAULT_STATE","currentUserSelection","userMap","payload","reducer","state","action","selectors","loadFromLocalStorage","saveToLocalStorage","LOCAL_STORAGE_KEY","newState","userAgent","navigator","browserName","VIP_RTC","crdtDocVersion","getWebSocketUrl","wsUrl","Promise","resolve","getErrorMessage","memoizeFn","fn","cache","key","JSON","stringify","result","defaultValue","saved","localStorage","getItem","parsed","parse","isArray","warn","setItem","animationFrameId","cancelAnimationFrame","requestAnimationFrame","METRO_COLORS","USER_HIGHLIGHT_ALPHA","existingColors","availableColors","hue","generateRandomInt","saturation","lightness","hexColor","preferredColor","randomIndex","alphaHex","round","padStart","toUpperCase","min","max","generateUUID","isSecureContext","crypto","randomUUID","replace","char","randomValue","WebsocketProvider","getConnectionId","fetchAuthToken","connectionId","token","logInspectUrl","authToken","roomName","connectionConfig","createNewDoc","room","url","inspectUrl","encodeURIComponent","createConnect","params","auth","connect","shouldConnect","errorMessage","getWebSocketConnectionConfig","serverUrl","options","doc","destroy","applyUpdate","encodeStateVector","encodeStateAsUpdate","addFilter","registerPlugin","webSocketConnectionConfig"],"sourceRoot":""}